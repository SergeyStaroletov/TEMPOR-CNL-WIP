/*
 * generated by Xtext 2.26.0
 */
package iae.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TemporGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iae.Tempor.Model");
		private final Assignment cReqAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cReqRequirementParserRuleCall_0 = (RuleCall)cReqAssignment.eContents().get(0);
		
		//Model:
		//    req+=Requirement;
		@Override public ParserRule getRule() { return rule; }
		
		//req+=Requirement
		public Assignment getReqAssignment() { return cReqAssignment; }
		
		//Requirement
		public RuleCall getReqRequirementParserRuleCall_0() { return cReqRequirementParserRuleCall_0; }
	}
	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iae.Tempor.Requirement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cIfKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTrigAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_0_1_0 = (RuleCall)cTrigAssignment_0_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Keyword cThenKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cInvAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_0_4_0 = (RuleCall)cInvAssignment_0_4.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cIfKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTrigAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_1_1_0 = (RuleCall)cTrigAssignment_1_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cThenKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cImmediatelyKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cThereKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cWillKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Keyword cBeKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Assignment cReaAssignment_1_8 = (Assignment)cGroup_1.eContents().get(8);
		private final RuleCall cReaExprParserRuleCall_1_8_0 = (RuleCall)cReaAssignment_1_8.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cIfKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTrigAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_2_1_0 = (RuleCall)cTrigAssignment_2_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Keyword cThenKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cInvAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_2_4_0 = (RuleCall)cInvAssignment_2_4.eContents().get(0);
		private final Keyword cAndKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Keyword cImmediatelyKeyword_2_6 = (Keyword)cGroup_2.eContents().get(6);
		private final Keyword cItKeyword_2_7 = (Keyword)cGroup_2.eContents().get(7);
		private final Keyword cWillKeyword_2_8 = (Keyword)cGroup_2.eContents().get(8);
		private final Keyword cBeKeyword_2_9 = (Keyword)cGroup_2.eContents().get(9);
		private final Assignment cReaAssignment_2_10 = (Assignment)cGroup_2.eContents().get(10);
		private final RuleCall cReaExprParserRuleCall_2_10_0 = (RuleCall)cReaAssignment_2_10.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cIfKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTrigAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_3_1_0 = (RuleCall)cTrigAssignment_3_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Keyword cThenKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cRelAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_3_4_0 = (RuleCall)cRelAssignment_3_4.eContents().get(0);
		private final Keyword cOrKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Keyword cImmediatelyKeyword_3_6 = (Keyword)cGroup_3.eContents().get(6);
		private final Keyword cWillKeyword_3_7 = (Keyword)cGroup_3.eContents().get(7);
		private final Keyword cBeKeyword_3_8 = (Keyword)cGroup_3.eContents().get(8);
		private final Assignment cReaAssignment_3_9 = (Assignment)cGroup_3.eContents().get(9);
		private final RuleCall cReaExprParserRuleCall_3_9_0 = (RuleCall)cReaAssignment_3_9.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cIfKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTrigAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_4_1_0 = (RuleCall)cTrigAssignment_4_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Keyword cThenKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cRelAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_4_4_0 = (RuleCall)cRelAssignment_4_4.eContents().get(0);
		private final Keyword cOrKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Assignment cInvAssignment_4_6 = (Assignment)cGroup_4.eContents().get(6);
		private final RuleCall cInvExprParserRuleCall_4_6_0 = (RuleCall)cInvAssignment_4_6.eContents().get(0);
		private final Keyword cAndKeyword_4_7 = (Keyword)cGroup_4.eContents().get(7);
		private final Keyword cAtKeyword_4_8 = (Keyword)cGroup_4.eContents().get(8);
		private final Keyword cTheKeyword_4_9 = (Keyword)cGroup_4.eContents().get(9);
		private final Keyword cSameKeyword_4_10 = (Keyword)cGroup_4.eContents().get(10);
		private final Keyword cTimeKeyword_4_11 = (Keyword)cGroup_4.eContents().get(11);
		private final Keyword cItKeyword_4_12 = (Keyword)cGroup_4.eContents().get(12);
		private final Keyword cWillKeyword_4_13 = (Keyword)cGroup_4.eContents().get(13);
		private final Keyword cImmediatelyKeyword_4_14 = (Keyword)cGroup_4.eContents().get(14);
		private final Keyword cBeKeyword_4_15 = (Keyword)cGroup_4.eContents().get(15);
		private final Assignment cReaAssignment_4_16 = (Assignment)cGroup_4.eContents().get(16);
		private final RuleCall cReaExprParserRuleCall_4_16_0 = (RuleCall)cReaAssignment_4_16.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cIfKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTrigAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_5_1_0 = (RuleCall)cTrigAssignment_5_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final Keyword cThenKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cItKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cWillKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		private final Keyword cAlwaysKeyword_5_6 = (Keyword)cGroup_5.eContents().get(6);
		private final Keyword cBeKeyword_5_7 = (Keyword)cGroup_5.eContents().get(7);
		private final Assignment cInvAssignment_5_8 = (Assignment)cGroup_5.eContents().get(8);
		private final RuleCall cInvExprParserRuleCall_5_8_0 = (RuleCall)cInvAssignment_5_8.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cIfKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTrigAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_6_1_0 = (RuleCall)cTrigAssignment_6_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_6_2 = (RuleCall)cGroup_6.eContents().get(2);
		private final Keyword cThenKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cInvAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_6_4_0 = (RuleCall)cInvAssignment_6_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_6_5 = (RuleCall)cGroup_6.eContents().get(5);
		private final Keyword cUntilKeyword_6_6 = (Keyword)cGroup_6.eContents().get(6);
		private final Keyword cPerhapsKeyword_6_7 = (Keyword)cGroup_6.eContents().get(7);
		private final Assignment cRelAssignment_6_8 = (Assignment)cGroup_6.eContents().get(8);
		private final RuleCall cRelExprParserRuleCall_6_8_0 = (RuleCall)cRelAssignment_6_8.eContents().get(0);
		private final Keyword cHappensKeyword_6_9 = (Keyword)cGroup_6.eContents().get(9);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cIfKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTrigAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_7_1_0 = (RuleCall)cTrigAssignment_7_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_7_2 = (RuleCall)cGroup_7.eContents().get(2);
		private final Keyword cThenKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cInvAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_7_4_0 = (RuleCall)cInvAssignment_7_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_7_5 = (RuleCall)cGroup_7.eContents().get(5);
		private final Keyword cUntilKeyword_7_6 = (Keyword)cGroup_7.eContents().get(6);
		private final Keyword cPerhapsKeyword_7_7 = (Keyword)cGroup_7.eContents().get(7);
		private final Assignment cReaAssignment_7_8 = (Assignment)cGroup_7.eContents().get(8);
		private final RuleCall cReaExprParserRuleCall_7_8_0 = (RuleCall)cReaAssignment_7_8.eContents().get(0);
		private final Keyword cHappensKeyword_7_9 = (Keyword)cGroup_7.eContents().get(9);
		private final Keyword cToKeyword_7_10 = (Keyword)cGroup_7.eContents().get(10);
		private final Keyword cKeepKeyword_7_11 = (Keyword)cGroup_7.eContents().get(11);
		private final Assignment cInv2Assignment_7_12 = (Assignment)cGroup_7.eContents().get(12);
		private final RuleCall cInv2ExprParserRuleCall_7_12_0 = (RuleCall)cInv2Assignment_7_12.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cIfKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTrigAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_8_1_0 = (RuleCall)cTrigAssignment_8_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_8_2 = (RuleCall)cGroup_8.eContents().get(2);
		private final Keyword cThenKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Assignment cInvAssignment_8_4 = (Assignment)cGroup_8.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_8_4_0 = (RuleCall)cInvAssignment_8_4.eContents().get(0);
		private final Keyword cWillKeyword_8_5 = (Keyword)cGroup_8.eContents().get(5);
		private final Keyword cBeKeyword_8_6 = (Keyword)cGroup_8.eContents().get(6);
		private final Keyword cForKeyword_8_7 = (Keyword)cGroup_8.eContents().get(7);
		private final Keyword cNowKeyword_8_8 = (Keyword)cGroup_8.eContents().get(8);
		private final RuleCall cCommaParserRuleCall_8_9 = (RuleCall)cGroup_8.eContents().get(9);
		private final Keyword cPerhapsKeyword_8_10 = (Keyword)cGroup_8.eContents().get(10);
		private final Keyword cNotKeyword_8_11 = (Keyword)cGroup_8.eContents().get(11);
		private final Assignment cRelAssignment_8_12 = (Assignment)cGroup_8.eContents().get(12);
		private final RuleCall cRelExprParserRuleCall_8_12_0 = (RuleCall)cRelAssignment_8_12.eContents().get(0);
		private final Keyword cOrKeyword_8_13 = (Keyword)cGroup_8.eContents().get(13);
		private final Assignment cReaAssignment_8_14 = (Assignment)cGroup_8.eContents().get(14);
		private final RuleCall cReaExprParserRuleCall_8_14_0 = (RuleCall)cReaAssignment_8_14.eContents().get(0);
		private final Keyword cAtKeyword_8_15 = (Keyword)cGroup_8.eContents().get(15);
		private final Assignment cInv2Assignment_8_16 = (Assignment)cGroup_8.eContents().get(16);
		private final RuleCall cInv2ExprParserRuleCall_8_16_0 = (RuleCall)cInv2Assignment_8_16.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Keyword cIfKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cTrigAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_9_1_0 = (RuleCall)cTrigAssignment_9_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_9_2 = (RuleCall)cGroup_9.eContents().get(2);
		private final Keyword cThenKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Assignment cNotdelAssignment_9_4 = (Assignment)cGroup_9.eContents().get(4);
		private final RuleCall cNotdelExprParserRuleCall_9_4_0 = (RuleCall)cNotdelAssignment_9_4.eContents().get(0);
		private final Keyword cUntilKeyword_9_5 = (Keyword)cGroup_9.eContents().get(5);
		private final Keyword cPerhapsKeyword_9_6 = (Keyword)cGroup_9.eContents().get(6);
		private final Assignment cRelAssignment_9_7 = (Assignment)cGroup_9.eContents().get(7);
		private final RuleCall cRelExprParserRuleCall_9_7_0 = (RuleCall)cRelAssignment_9_7.eContents().get(0);
		private final Keyword cOrKeyword_9_8 = (Keyword)cGroup_9.eContents().get(8);
		private final Assignment cReaAssignment_9_9 = (Assignment)cGroup_9.eContents().get(9);
		private final RuleCall cReaExprParserRuleCall_9_9_0 = (RuleCall)cReaAssignment_9_9.eContents().get(0);
		private final Keyword cHappensKeyword_9_10 = (Keyword)cGroup_9.eContents().get(10);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Keyword cIfKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cTrigAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_10_1_0 = (RuleCall)cTrigAssignment_10_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_10_2 = (RuleCall)cGroup_10.eContents().get(2);
		private final Keyword cThenKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Keyword cPerhapsKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Assignment cFinAssignment_10_5 = (Assignment)cGroup_10.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_10_5_0 = (RuleCall)cFinAssignment_10_5.eContents().get(0);
		private final Keyword cWillKeyword_10_6 = (Keyword)cGroup_10.eContents().get(6);
		private final Keyword cHappenKeyword_10_7 = (Keyword)cGroup_10.eContents().get(7);
		private final Keyword cAndKeyword_10_8 = (Keyword)cGroup_10.eContents().get(8);
		private final Keyword cThenKeyword_10_9 = (Keyword)cGroup_10.eContents().get(9);
		private final Keyword cImmediatelyKeyword_10_10 = (Keyword)cGroup_10.eContents().get(10);
		private final Keyword cThereKeyword_10_11 = (Keyword)cGroup_10.eContents().get(11);
		private final Keyword cWillKeyword_10_12 = (Keyword)cGroup_10.eContents().get(12);
		private final Keyword cBeKeyword_10_13 = (Keyword)cGroup_10.eContents().get(13);
		private final Assignment cReaAssignment_10_14 = (Assignment)cGroup_10.eContents().get(14);
		private final RuleCall cReaExprParserRuleCall_10_14_0 = (RuleCall)cReaAssignment_10_14.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Keyword cIfKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cTrigAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_11_1_0 = (RuleCall)cTrigAssignment_11_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_11_2 = (RuleCall)cGroup_11.eContents().get(2);
		private final Keyword cThenKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Keyword cPerhapsKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Assignment cRelAssignment_11_5 = (Assignment)cGroup_11.eContents().get(5);
		private final RuleCall cRelExprParserRuleCall_11_5_0 = (RuleCall)cRelAssignment_11_5.eContents().get(0);
		private final Keyword cOrKeyword_11_6 = (Keyword)cGroup_11.eContents().get(6);
		private final Assignment cFinAssignment_11_7 = (Assignment)cGroup_11.eContents().get(7);
		private final RuleCall cFinExprParserRuleCall_11_7_0 = (RuleCall)cFinAssignment_11_7.eContents().get(0);
		private final Keyword cWillKeyword_11_8 = (Keyword)cGroup_11.eContents().get(8);
		private final Keyword cHappenKeyword_11_9 = (Keyword)cGroup_11.eContents().get(9);
		private final Keyword cAlongKeyword_11_10 = (Keyword)cGroup_11.eContents().get(10);
		private final Keyword cWithKeyword_11_11 = (Keyword)cGroup_11.eContents().get(11);
		private final Keyword cAnKeyword_11_12 = (Keyword)cGroup_11.eContents().get(12);
		private final Keyword cImmediateKeyword_11_13 = (Keyword)cGroup_11.eContents().get(13);
		private final Assignment cReaAssignment_11_14 = (Assignment)cGroup_11.eContents().get(14);
		private final RuleCall cReaExprParserRuleCall_11_14_0 = (RuleCall)cReaAssignment_11_14.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Keyword cIfKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cTrigAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_12_1_0 = (RuleCall)cTrigAssignment_12_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_12_2 = (RuleCall)cGroup_12.eContents().get(2);
		private final Keyword cThenKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Assignment cFinAssignment_12_4 = (Assignment)cGroup_12.eContents().get(4);
		private final RuleCall cFinExprParserRuleCall_12_4_0 = (RuleCall)cFinAssignment_12_4.eContents().get(0);
		private final Keyword cWillKeyword_12_5 = (Keyword)cGroup_12.eContents().get(5);
		private final Keyword cProbablyKeyword_12_6 = (Keyword)cGroup_12.eContents().get(6);
		private final Keyword cHappenKeyword_12_7 = (Keyword)cGroup_12.eContents().get(7);
		private final Keyword cAndKeyword_12_8 = (Keyword)cGroup_12.eContents().get(8);
		private final Keyword cFromKeyword_12_9 = (Keyword)cGroup_12.eContents().get(9);
		private final Keyword cThenKeyword_12_10 = (Keyword)cGroup_12.eContents().get(10);
		private final Keyword cOnKeyword_12_11 = (Keyword)cGroup_12.eContents().get(11);
		private final Keyword cThereKeyword_12_12 = (Keyword)cGroup_12.eContents().get(12);
		private final Keyword cWillKeyword_12_13 = (Keyword)cGroup_12.eContents().get(13);
		private final Keyword cAlwaysKeyword_12_14 = (Keyword)cGroup_12.eContents().get(14);
		private final Keyword cBeKeyword_12_15 = (Keyword)cGroup_12.eContents().get(15);
		private final Assignment cNotdelAssignment_12_16 = (Assignment)cGroup_12.eContents().get(16);
		private final RuleCall cNotdelExprParserRuleCall_12_16_0 = (RuleCall)cNotdelAssignment_12_16.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cIfKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cTrigAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_13_1_0 = (RuleCall)cTrigAssignment_13_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_13_2 = (RuleCall)cGroup_13.eContents().get(2);
		private final Keyword cThenKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Keyword cPerhapsKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Assignment cFinAssignment_13_5 = (Assignment)cGroup_13.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_13_5_0 = (RuleCall)cFinAssignment_13_5.eContents().get(0);
		private final Keyword cWillKeyword_13_6 = (Keyword)cGroup_13.eContents().get(6);
		private final Keyword cHappenKeyword_13_7 = (Keyword)cGroup_13.eContents().get(7);
		private final Keyword cAndKeyword_13_8 = (Keyword)cGroup_13.eContents().get(8);
		private final Keyword cFromKeyword_13_9 = (Keyword)cGroup_13.eContents().get(9);
		private final Keyword cThatKeyword_13_10 = (Keyword)cGroup_13.eContents().get(10);
		private final Keyword cPointKeyword_13_11 = (Keyword)cGroup_13.eContents().get(11);
		private final Keyword cOnKeyword_13_12 = (Keyword)cGroup_13.eContents().get(12);
		private final Keyword cThereKeyword_13_13 = (Keyword)cGroup_13.eContents().get(13);
		private final Keyword cWillKeyword_13_14 = (Keyword)cGroup_13.eContents().get(14);
		private final Keyword cBeKeyword_13_15 = (Keyword)cGroup_13.eContents().get(15);
		private final Assignment cNotdelAssignment_13_16 = (Assignment)cGroup_13.eContents().get(16);
		private final RuleCall cNotdelExprParserRuleCall_13_16_0 = (RuleCall)cNotdelAssignment_13_16.eContents().get(0);
		private final Keyword cUntilKeyword_13_17 = (Keyword)cGroup_13.eContents().get(17);
		private final Keyword cPerhapsKeyword_13_18 = (Keyword)cGroup_13.eContents().get(18);
		private final Assignment cReaAssignment_13_19 = (Assignment)cGroup_13.eContents().get(19);
		private final RuleCall cReaExprParserRuleCall_13_19_0 = (RuleCall)cReaAssignment_13_19.eContents().get(0);
		private final Keyword cOccursKeyword_13_20 = (Keyword)cGroup_13.eContents().get(20);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Keyword cIfKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cTrigAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_14_1_0 = (RuleCall)cTrigAssignment_14_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_14_2 = (RuleCall)cGroup_14.eContents().get(2);
		private final Keyword cThenKeyword_14_3 = (Keyword)cGroup_14.eContents().get(3);
		private final Assignment cInvAssignment_14_4 = (Assignment)cGroup_14.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_14_4_0 = (RuleCall)cInvAssignment_14_4.eContents().get(0);
		private final Keyword cAndKeyword_14_5 = (Keyword)cGroup_14.eContents().get(5);
		private final Assignment cNotdelAssignment_14_6 = (Assignment)cGroup_14.eContents().get(6);
		private final RuleCall cNotdelExprParserRuleCall_14_6_0 = (RuleCall)cNotdelAssignment_14_6.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_14_7 = (RuleCall)cGroup_14.eContents().get(7);
		private final Keyword cUntilKeyword_14_8 = (Keyword)cGroup_14.eContents().get(8);
		private final Keyword cPerhapsKeyword_14_9 = (Keyword)cGroup_14.eContents().get(9);
		private final Assignment cReaAssignment_14_10 = (Assignment)cGroup_14.eContents().get(10);
		private final RuleCall cReaExprParserRuleCall_14_10_0 = (RuleCall)cReaAssignment_14_10.eContents().get(0);
		private final Keyword cHappensKeyword_14_11 = (Keyword)cGroup_14.eContents().get(11);
		private final Keyword cToKeyword_14_12 = (Keyword)cGroup_14.eContents().get(12);
		private final Keyword cKeepKeyword_14_13 = (Keyword)cGroup_14.eContents().get(13);
		private final Assignment cInv2Assignment_14_14 = (Assignment)cGroup_14.eContents().get(14);
		private final RuleCall cInv2ExprParserRuleCall_14_14_0 = (RuleCall)cInv2Assignment_14_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Keyword cIfKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cTrigAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_15_1_0 = (RuleCall)cTrigAssignment_15_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_15_2 = (RuleCall)cGroup_15.eContents().get(2);
		private final Keyword cThenKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Assignment cInvAssignment_15_4 = (Assignment)cGroup_15.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_15_4_0 = (RuleCall)cInvAssignment_15_4.eContents().get(0);
		private final Keyword cAndKeyword_15_5 = (Keyword)cGroup_15.eContents().get(5);
		private final Assignment cNotdelAssignment_15_6 = (Assignment)cGroup_15.eContents().get(6);
		private final RuleCall cNotdelExprParserRuleCall_15_6_0 = (RuleCall)cNotdelAssignment_15_6.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_15_7 = (RuleCall)cGroup_15.eContents().get(7);
		private final Keyword cUntilKeyword_15_8 = (Keyword)cGroup_15.eContents().get(8);
		private final Keyword cPerhapsKeyword_15_9 = (Keyword)cGroup_15.eContents().get(9);
		private final Assignment cRelAssignment_15_10 = (Assignment)cGroup_15.eContents().get(10);
		private final RuleCall cRelExprParserRuleCall_15_10_0 = (RuleCall)cRelAssignment_15_10.eContents().get(0);
		private final Keyword cOrKeyword_15_11 = (Keyword)cGroup_15.eContents().get(11);
		private final Assignment cReaAssignment_15_12 = (Assignment)cGroup_15.eContents().get(12);
		private final RuleCall cReaExprParserRuleCall_15_12_0 = (RuleCall)cReaAssignment_15_12.eContents().get(0);
		private final Keyword cHappensKeyword_15_13 = (Keyword)cGroup_15.eContents().get(13);
		private final RuleCall cCommaParserRuleCall_15_14 = (RuleCall)cGroup_15.eContents().get(14);
		private final Keyword cKeepingKeyword_15_15 = (Keyword)cGroup_15.eContents().get(15);
		private final Assignment cInv2Assignment_15_16 = (Assignment)cGroup_15.eContents().get(16);
		private final RuleCall cInv2ExprParserRuleCall_15_16_0 = (RuleCall)cInv2Assignment_15_16.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Keyword cIfKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cTrigAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_16_1_0 = (RuleCall)cTrigAssignment_16_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_16_2 = (RuleCall)cGroup_16.eContents().get(2);
		private final Keyword cThenKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Assignment cInvAssignment_16_4 = (Assignment)cGroup_16.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_16_4_0 = (RuleCall)cInvAssignment_16_4.eContents().get(0);
		private final Keyword cAndKeyword_16_5 = (Keyword)cGroup_16.eContents().get(5);
		private final Keyword cNotKeyword_16_6 = (Keyword)cGroup_16.eContents().get(6);
		private final Assignment cNotfinAssignment_16_7 = (Assignment)cGroup_16.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_16_7_0 = (RuleCall)cNotfinAssignment_16_7.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_16_8 = (RuleCall)cGroup_16.eContents().get(8);
		private final Keyword cUntilKeyword_16_9 = (Keyword)cGroup_16.eContents().get(9);
		private final Keyword cPerhapsKeyword_16_10 = (Keyword)cGroup_16.eContents().get(10);
		private final Assignment cRelAssignment_16_11 = (Assignment)cGroup_16.eContents().get(11);
		private final RuleCall cRelExprParserRuleCall_16_11_0 = (RuleCall)cRelAssignment_16_11.eContents().get(0);
		private final Keyword cOrKeyword_16_12 = (Keyword)cGroup_16.eContents().get(12);
		private final Assignment cFinAssignment_16_13 = (Assignment)cGroup_16.eContents().get(13);
		private final RuleCall cFinExprParserRuleCall_16_13_0 = (RuleCall)cFinAssignment_16_13.eContents().get(0);
		private final Keyword cHappensKeyword_16_14 = (Keyword)cGroup_16.eContents().get(14);
		private final Keyword cToKeyword_16_15 = (Keyword)cGroup_16.eContents().get(15);
		private final Keyword cKeepKeyword_16_16 = (Keyword)cGroup_16.eContents().get(16);
		private final Assignment cInv2Assignment_16_17 = (Assignment)cGroup_16.eContents().get(17);
		private final RuleCall cInv2ExprParserRuleCall_16_17_0 = (RuleCall)cInv2Assignment_16_17.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Keyword cIfKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cTrigAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_17_1_0 = (RuleCall)cTrigAssignment_17_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_17_2 = (RuleCall)cGroup_17.eContents().get(2);
		private final Keyword cThenKeyword_17_3 = (Keyword)cGroup_17.eContents().get(3);
		private final Assignment cInvAssignment_17_4 = (Assignment)cGroup_17.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_17_4_0 = (RuleCall)cInvAssignment_17_4.eContents().get(0);
		private final Keyword cAndKeyword_17_5 = (Keyword)cGroup_17.eContents().get(5);
		private final Keyword cNotKeyword_17_6 = (Keyword)cGroup_17.eContents().get(6);
		private final Assignment cNotfinAssignment_17_7 = (Assignment)cGroup_17.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_17_7_0 = (RuleCall)cNotfinAssignment_17_7.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_17_8 = (RuleCall)cGroup_17.eContents().get(8);
		private final Keyword cUntilKeyword_17_9 = (Keyword)cGroup_17.eContents().get(9);
		private final Keyword cPerhapsKeyword_17_10 = (Keyword)cGroup_17.eContents().get(10);
		private final Assignment cRelAssignment_17_11 = (Assignment)cGroup_17.eContents().get(11);
		private final RuleCall cRelExprParserRuleCall_17_11_0 = (RuleCall)cRelAssignment_17_11.eContents().get(0);
		private final Keyword cOrKeyword_17_12 = (Keyword)cGroup_17.eContents().get(12);
		private final Assignment cFinAssignment_17_13 = (Assignment)cGroup_17.eContents().get(13);
		private final RuleCall cFinExprParserRuleCall_17_13_0 = (RuleCall)cFinAssignment_17_13.eContents().get(0);
		private final Keyword cHappensKeyword_17_14 = (Keyword)cGroup_17.eContents().get(14);
		private final RuleCall cCommaParserRuleCall_17_15 = (RuleCall)cGroup_17.eContents().get(15);
		private final Keyword cKeepingKeyword_17_16 = (Keyword)cGroup_17.eContents().get(16);
		private final Assignment cInv2Assignment_17_17 = (Assignment)cGroup_17.eContents().get(17);
		private final RuleCall cInv2ExprParserRuleCall_17_17_0 = (RuleCall)cInv2Assignment_17_17.eContents().get(0);
		private final Keyword cAndKeyword_17_18 = (Keyword)cGroup_17.eContents().get(18);
		private final Keyword cImmediateKeyword_17_19 = (Keyword)cGroup_17.eContents().get(19);
		private final Assignment cReaAssignment_17_20 = (Assignment)cGroup_17.eContents().get(20);
		private final RuleCall cReaExprParserRuleCall_17_20_0 = (RuleCall)cReaAssignment_17_20.eContents().get(0);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Keyword cIfKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cTrigAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_18_1_0 = (RuleCall)cTrigAssignment_18_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_18_2 = (RuleCall)cGroup_18.eContents().get(2);
		private final Keyword cThenKeyword_18_3 = (Keyword)cGroup_18.eContents().get(3);
		private final Assignment cInvAssignment_18_4 = (Assignment)cGroup_18.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_18_4_0 = (RuleCall)cInvAssignment_18_4.eContents().get(0);
		private final Keyword cAndKeyword_18_5 = (Keyword)cGroup_18.eContents().get(5);
		private final Keyword cNotKeyword_18_6 = (Keyword)cGroup_18.eContents().get(6);
		private final Assignment cNotfinAssignment_18_7 = (Assignment)cGroup_18.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_18_7_0 = (RuleCall)cNotfinAssignment_18_7.eContents().get(0);
		private final Keyword cUntilKeyword_18_8 = (Keyword)cGroup_18.eContents().get(8);
		private final Keyword cPerhapsKeyword_18_9 = (Keyword)cGroup_18.eContents().get(9);
		private final Assignment cFinAssignment_18_10 = (Assignment)cGroup_18.eContents().get(10);
		private final RuleCall cFinExprParserRuleCall_18_10_0 = (RuleCall)cFinAssignment_18_10.eContents().get(0);
		private final Keyword cHappensKeyword_18_11 = (Keyword)cGroup_18.eContents().get(11);
		private final Keyword cToKeyword_18_12 = (Keyword)cGroup_18.eContents().get(12);
		private final Keyword cKeepKeyword_18_13 = (Keyword)cGroup_18.eContents().get(13);
		private final Assignment cInv2Assignment_18_14 = (Assignment)cGroup_18.eContents().get(14);
		private final RuleCall cInv2ExprParserRuleCall_18_14_0 = (RuleCall)cInv2Assignment_18_14.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Keyword cIfKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Assignment cTrigAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_19_1_0 = (RuleCall)cTrigAssignment_19_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_19_2 = (RuleCall)cGroup_19.eContents().get(2);
		private final Keyword cThenKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Assignment cInvAssignment_19_4 = (Assignment)cGroup_19.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_19_4_0 = (RuleCall)cInvAssignment_19_4.eContents().get(0);
		private final Keyword cAndKeyword_19_5 = (Keyword)cGroup_19.eContents().get(5);
		private final Keyword cNotKeyword_19_6 = (Keyword)cGroup_19.eContents().get(6);
		private final Assignment cNotfinAssignment_19_7 = (Assignment)cGroup_19.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_19_7_0 = (RuleCall)cNotfinAssignment_19_7.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_19_8 = (RuleCall)cGroup_19.eContents().get(8);
		private final Keyword cUntilKeyword_19_9 = (Keyword)cGroup_19.eContents().get(9);
		private final Keyword cPerhapsKeyword_19_10 = (Keyword)cGroup_19.eContents().get(10);
		private final Assignment cFinAssignment_19_11 = (Assignment)cGroup_19.eContents().get(11);
		private final RuleCall cFinExprParserRuleCall_19_11_0 = (RuleCall)cFinAssignment_19_11.eContents().get(0);
		private final Keyword cHappensKeyword_19_12 = (Keyword)cGroup_19.eContents().get(12);
		private final Keyword cToKeyword_19_13 = (Keyword)cGroup_19.eContents().get(13);
		private final Keyword cKeepKeyword_19_14 = (Keyword)cGroup_19.eContents().get(14);
		private final Assignment cInv2Assignment_19_15 = (Assignment)cGroup_19.eContents().get(15);
		private final RuleCall cInv2ExprParserRuleCall_19_15_0 = (RuleCall)cInv2Assignment_19_15.eContents().get(0);
		private final Keyword cAndKeyword_19_16 = (Keyword)cGroup_19.eContents().get(16);
		private final Keyword cImmediatelyKeyword_19_17 = (Keyword)cGroup_19.eContents().get(17);
		private final Assignment cReaAssignment_19_18 = (Assignment)cGroup_19.eContents().get(18);
		private final RuleCall cReaExprParserRuleCall_19_18_0 = (RuleCall)cReaAssignment_19_18.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Keyword cIfKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Assignment cTrigAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_20_1_0 = (RuleCall)cTrigAssignment_20_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_20_2 = (RuleCall)cGroup_20.eContents().get(2);
		private final Keyword cThenKeyword_20_3 = (Keyword)cGroup_20.eContents().get(3);
		private final Assignment cInvAssignment_20_4 = (Assignment)cGroup_20.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_20_4_0 = (RuleCall)cInvAssignment_20_4.eContents().get(0);
		private final Keyword cAndKeyword_20_5 = (Keyword)cGroup_20.eContents().get(5);
		private final Keyword cNotKeyword_20_6 = (Keyword)cGroup_20.eContents().get(6);
		private final Assignment cNotfinAssignment_20_7 = (Assignment)cGroup_20.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_20_7_0 = (RuleCall)cNotfinAssignment_20_7.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_20_8 = (RuleCall)cGroup_20.eContents().get(8);
		private final Keyword cUntilKeyword_20_9 = (Keyword)cGroup_20.eContents().get(9);
		private final Keyword cPerhapsKeyword_20_10 = (Keyword)cGroup_20.eContents().get(10);
		private final Assignment cFinAssignment_20_11 = (Assignment)cGroup_20.eContents().get(11);
		private final RuleCall cFinExprParserRuleCall_20_11_0 = (RuleCall)cFinAssignment_20_11.eContents().get(0);
		private final Keyword cHappensKeyword_20_12 = (Keyword)cGroup_20.eContents().get(12);
		private final Keyword cAndKeyword_20_13 = (Keyword)cGroup_20.eContents().get(13);
		private final Keyword cFromKeyword_20_14 = (Keyword)cGroup_20.eContents().get(14);
		private final Keyword cThenKeyword_20_15 = (Keyword)cGroup_20.eContents().get(15);
		private final Keyword cThereKeyword_20_16 = (Keyword)cGroup_20.eContents().get(16);
		private final Keyword cWillKeyword_20_17 = (Keyword)cGroup_20.eContents().get(17);
		private final Keyword cAlwaysKeyword_20_18 = (Keyword)cGroup_20.eContents().get(18);
		private final Keyword cBeKeyword_20_19 = (Keyword)cGroup_20.eContents().get(19);
		private final Assignment cInv2Assignment_20_20 = (Assignment)cGroup_20.eContents().get(20);
		private final RuleCall cInv2ExprParserRuleCall_20_20_0 = (RuleCall)cInv2Assignment_20_20.eContents().get(0);
		private final Keyword cAndKeyword_20_21 = (Keyword)cGroup_20.eContents().get(21);
		private final Assignment cNotdelAssignment_20_22 = (Assignment)cGroup_20.eContents().get(22);
		private final RuleCall cNotdelExprParserRuleCall_20_22_0 = (RuleCall)cNotdelAssignment_20_22.eContents().get(0);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Keyword cIfKeyword_21_0 = (Keyword)cGroup_21.eContents().get(0);
		private final Assignment cTrigAssignment_21_1 = (Assignment)cGroup_21.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_21_1_0 = (RuleCall)cTrigAssignment_21_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_21_2 = (RuleCall)cGroup_21.eContents().get(2);
		private final Keyword cThenKeyword_21_3 = (Keyword)cGroup_21.eContents().get(3);
		private final Assignment cInvAssignment_21_4 = (Assignment)cGroup_21.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_21_4_0 = (RuleCall)cInvAssignment_21_4.eContents().get(0);
		private final Keyword cAndKeyword_21_5 = (Keyword)cGroup_21.eContents().get(5);
		private final Keyword cNotKeyword_21_6 = (Keyword)cGroup_21.eContents().get(6);
		private final Assignment cNotfinAssignment_21_7 = (Assignment)cGroup_21.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_21_7_0 = (RuleCall)cNotfinAssignment_21_7.eContents().get(0);
		private final Keyword cUntilKeyword_21_8 = (Keyword)cGroup_21.eContents().get(8);
		private final Keyword cPerhapsKeyword_21_9 = (Keyword)cGroup_21.eContents().get(9);
		private final Assignment cFin2Assignment_21_10 = (Assignment)cGroup_21.eContents().get(10);
		private final RuleCall cFin2ExprParserRuleCall_21_10_0 = (RuleCall)cFin2Assignment_21_10.eContents().get(0);
		private final Keyword cHappensKeyword_21_11 = (Keyword)cGroup_21.eContents().get(11);
		private final Keyword cAndKeyword_21_12 = (Keyword)cGroup_21.eContents().get(12);
		private final Keyword cFromKeyword_21_13 = (Keyword)cGroup_21.eContents().get(13);
		private final Keyword cThenKeyword_21_14 = (Keyword)cGroup_21.eContents().get(14);
		private final Assignment cInv2Assignment_21_15 = (Assignment)cGroup_21.eContents().get(15);
		private final RuleCall cInv2ExprParserRuleCall_21_15_0 = (RuleCall)cInv2Assignment_21_15.eContents().get(0);
		private final Keyword cWillKeyword_21_16 = (Keyword)cGroup_21.eContents().get(16);
		private final Keyword cBeKeyword_21_17 = (Keyword)cGroup_21.eContents().get(17);
		private final Keyword cUntilKeyword_21_18 = (Keyword)cGroup_21.eContents().get(18);
		private final Keyword cPerhapsKeyword_21_19 = (Keyword)cGroup_21.eContents().get(19);
		private final Assignment cReaAssignment_21_20 = (Assignment)cGroup_21.eContents().get(20);
		private final RuleCall cReaExprParserRuleCall_21_20_0 = (RuleCall)cReaAssignment_21_20.eContents().get(0);
		private final Keyword cHappensKeyword_21_21 = (Keyword)cGroup_21.eContents().get(21);
		private final Keyword cWithKeyword_21_22 = (Keyword)cGroup_21.eContents().get(22);
		private final Assignment cInv3Assignment_21_23 = (Assignment)cGroup_21.eContents().get(23);
		private final RuleCall cInv3ExprParserRuleCall_21_23_0 = (RuleCall)cInv3Assignment_21_23.eContents().get(0);
		private final Keyword cSavedKeyword_21_24 = (Keyword)cGroup_21.eContents().get(24);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Keyword cIfKeyword_22_0 = (Keyword)cGroup_22.eContents().get(0);
		private final Assignment cTrigAssignment_22_1 = (Assignment)cGroup_22.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_22_1_0 = (RuleCall)cTrigAssignment_22_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_22_2 = (RuleCall)cGroup_22.eContents().get(2);
		private final Keyword cThenKeyword_22_3 = (Keyword)cGroup_22.eContents().get(3);
		private final Assignment cInvAssignment_22_4 = (Assignment)cGroup_22.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_22_4_0 = (RuleCall)cInvAssignment_22_4.eContents().get(0);
		private final Keyword cAndKeyword_22_5 = (Keyword)cGroup_22.eContents().get(5);
		private final Keyword cNotKeyword_22_6 = (Keyword)cGroup_22.eContents().get(6);
		private final Assignment cNotfinAssignment_22_7 = (Assignment)cGroup_22.eContents().get(7);
		private final RuleCall cNotfinExprParserRuleCall_22_7_0 = (RuleCall)cNotfinAssignment_22_7.eContents().get(0);
		private final Keyword cUntilKeyword_22_8 = (Keyword)cGroup_22.eContents().get(8);
		private final Keyword cPerhapsKeyword_22_9 = (Keyword)cGroup_22.eContents().get(9);
		private final Assignment cFin2Assignment_22_10 = (Assignment)cGroup_22.eContents().get(10);
		private final RuleCall cFin2ExprParserRuleCall_22_10_0 = (RuleCall)cFin2Assignment_22_10.eContents().get(0);
		private final Keyword cHappensKeyword_22_11 = (Keyword)cGroup_22.eContents().get(11);
		private final Keyword cAndKeyword_22_12 = (Keyword)cGroup_22.eContents().get(12);
		private final Keyword cFromKeyword_22_13 = (Keyword)cGroup_22.eContents().get(13);
		private final Keyword cThenKeyword_22_14 = (Keyword)cGroup_22.eContents().get(14);
		private final Assignment cInv2Assignment_22_15 = (Assignment)cGroup_22.eContents().get(15);
		private final RuleCall cInv2ExprParserRuleCall_22_15_0 = (RuleCall)cInv2Assignment_22_15.eContents().get(0);
		private final Keyword cWillKeyword_22_16 = (Keyword)cGroup_22.eContents().get(16);
		private final Keyword cBeKeyword_22_17 = (Keyword)cGroup_22.eContents().get(17);
		private final Keyword cAlongKeyword_22_18 = (Keyword)cGroup_22.eContents().get(18);
		private final Keyword cWithKeyword_22_19 = (Keyword)cGroup_22.eContents().get(19);
		private final Assignment cNotdelAssignment_22_20 = (Assignment)cGroup_22.eContents().get(20);
		private final RuleCall cNotdelExprParserRuleCall_22_20_0 = (RuleCall)cNotdelAssignment_22_20.eContents().get(0);
		private final Keyword cUntilKeyword_22_21 = (Keyword)cGroup_22.eContents().get(21);
		private final Keyword cPerhapsKeyword_22_22 = (Keyword)cGroup_22.eContents().get(22);
		private final Assignment cReaAssignment_22_23 = (Assignment)cGroup_22.eContents().get(23);
		private final RuleCall cReaExprParserRuleCall_22_23_0 = (RuleCall)cReaAssignment_22_23.eContents().get(0);
		private final Keyword cHappensKeyword_22_24 = (Keyword)cGroup_22.eContents().get(24);
		private final Keyword cWithKeyword_22_25 = (Keyword)cGroup_22.eContents().get(25);
		private final Assignment cInv3Assignment_22_26 = (Assignment)cGroup_22.eContents().get(26);
		private final RuleCall cInv3ExprParserRuleCall_22_26_0 = (RuleCall)cInv3Assignment_22_26.eContents().get(0);
		private final Keyword cSavedKeyword_22_27 = (Keyword)cGroup_22.eContents().get(27);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Keyword cIfKeyword_23_0 = (Keyword)cGroup_23.eContents().get(0);
		private final Assignment cTrigAssignment_23_1 = (Assignment)cGroup_23.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_23_1_0 = (RuleCall)cTrigAssignment_23_1.eContents().get(0);
		private final Keyword cAndKeyword_23_2 = (Keyword)cGroup_23.eContents().get(2);
		private final Keyword cNotKeyword_23_3 = (Keyword)cGroup_23.eContents().get(3);
		private final Assignment cRelAssignment_23_4 = (Assignment)cGroup_23.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_23_4_0 = (RuleCall)cRelAssignment_23_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_23_5 = (RuleCall)cGroup_23.eContents().get(5);
		private final Keyword cThenKeyword_23_6 = (Keyword)cGroup_23.eContents().get(6);
		private final Keyword cPerhapsKeyword_23_7 = (Keyword)cGroup_23.eContents().get(7);
		private final Assignment cFinAssignment_23_8 = (Assignment)cGroup_23.eContents().get(8);
		private final RuleCall cFinExprParserRuleCall_23_8_0 = (RuleCall)cFinAssignment_23_8.eContents().get(0);
		private final Keyword cWillKeyword_23_9 = (Keyword)cGroup_23.eContents().get(9);
		private final Keyword cHappenKeyword_23_10 = (Keyword)cGroup_23.eContents().get(10);
		private final Keyword cAndKeyword_23_11 = (Keyword)cGroup_23.eContents().get(11);
		private final Keyword cFromKeyword_23_12 = (Keyword)cGroup_23.eContents().get(12);
		private final Keyword cThenKeyword_23_13 = (Keyword)cGroup_23.eContents().get(13);
		private final Keyword cThereKeyword_23_14 = (Keyword)cGroup_23.eContents().get(14);
		private final Keyword cWillKeyword_23_15 = (Keyword)cGroup_23.eContents().get(15);
		private final Keyword cBeKeyword_23_16 = (Keyword)cGroup_23.eContents().get(16);
		private final Assignment cNotdelAssignment_23_17 = (Assignment)cGroup_23.eContents().get(17);
		private final RuleCall cNotdelExprParserRuleCall_23_17_0 = (RuleCall)cNotdelAssignment_23_17.eContents().get(0);
		private final Keyword cUntilKeyword_23_18 = (Keyword)cGroup_23.eContents().get(18);
		private final Keyword cPerhapsKeyword_23_19 = (Keyword)cGroup_23.eContents().get(19);
		private final Assignment cRel2Assignment_23_20 = (Assignment)cGroup_23.eContents().get(20);
		private final RuleCall cRel2ExprParserRuleCall_23_20_0 = (RuleCall)cRel2Assignment_23_20.eContents().get(0);
		private final Keyword cOccursKeyword_23_21 = (Keyword)cGroup_23.eContents().get(21);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Keyword cIfKeyword_24_0 = (Keyword)cGroup_24.eContents().get(0);
		private final Assignment cTrigAssignment_24_1 = (Assignment)cGroup_24.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_24_1_0 = (RuleCall)cTrigAssignment_24_1.eContents().get(0);
		private final Keyword cAndKeyword_24_2 = (Keyword)cGroup_24.eContents().get(2);
		private final Keyword cNotKeyword_24_3 = (Keyword)cGroup_24.eContents().get(3);
		private final Assignment cRelAssignment_24_4 = (Assignment)cGroup_24.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_24_4_0 = (RuleCall)cRelAssignment_24_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_24_5 = (RuleCall)cGroup_24.eContents().get(5);
		private final Keyword cThenKeyword_24_6 = (Keyword)cGroup_24.eContents().get(6);
		private final Keyword cPerhapsKeyword_24_7 = (Keyword)cGroup_24.eContents().get(7);
		private final Assignment cFinAssignment_24_8 = (Assignment)cGroup_24.eContents().get(8);
		private final RuleCall cFinExprParserRuleCall_24_8_0 = (RuleCall)cFinAssignment_24_8.eContents().get(0);
		private final Keyword cWillKeyword_24_9 = (Keyword)cGroup_24.eContents().get(9);
		private final Keyword cHappenKeyword_24_10 = (Keyword)cGroup_24.eContents().get(10);
		private final Keyword cAndKeyword_24_11 = (Keyword)cGroup_24.eContents().get(11);
		private final Keyword cFromKeyword_24_12 = (Keyword)cGroup_24.eContents().get(12);
		private final Keyword cThenKeyword_24_13 = (Keyword)cGroup_24.eContents().get(13);
		private final Keyword cItKeyword_24_14 = (Keyword)cGroup_24.eContents().get(14);
		private final Keyword cWillKeyword_24_15 = (Keyword)cGroup_24.eContents().get(15);
		private final Keyword cBeKeyword_24_16 = (Keyword)cGroup_24.eContents().get(16);
		private final Assignment cNotdelAssignment_24_17 = (Assignment)cGroup_24.eContents().get(17);
		private final RuleCall cNotdelExprParserRuleCall_24_17_0 = (RuleCall)cNotdelAssignment_24_17.eContents().get(0);
		private final Keyword cUntilKeyword_24_18 = (Keyword)cGroup_24.eContents().get(18);
		private final Keyword cPerhapsKeyword_24_19 = (Keyword)cGroup_24.eContents().get(19);
		private final Keyword cItKeyword_24_20 = (Keyword)cGroup_24.eContents().get(20);
		private final Keyword cIsKeyword_24_21 = (Keyword)cGroup_24.eContents().get(21);
		private final Assignment cRel2Assignment_24_22 = (Assignment)cGroup_24.eContents().get(22);
		private final RuleCall cRel2ExprParserRuleCall_24_22_0 = (RuleCall)cRel2Assignment_24_22.eContents().get(0);
		private final Keyword cOrKeyword_24_23 = (Keyword)cGroup_24.eContents().get(23);
		private final Assignment cReaAssignment_24_24 = (Assignment)cGroup_24.eContents().get(24);
		private final RuleCall cReaExprParserRuleCall_24_24_0 = (RuleCall)cReaAssignment_24_24.eContents().get(0);
		private final Group cGroup_25 = (Group)cAlternatives.eContents().get(25);
		private final Keyword cIfKeyword_25_0 = (Keyword)cGroup_25.eContents().get(0);
		private final Assignment cTrigAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_25_1_0 = (RuleCall)cTrigAssignment_25_1.eContents().get(0);
		private final Keyword cAndKeyword_25_2 = (Keyword)cGroup_25.eContents().get(2);
		private final Keyword cNotKeyword_25_3 = (Keyword)cGroup_25.eContents().get(3);
		private final Assignment cRelAssignment_25_4 = (Assignment)cGroup_25.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_25_4_0 = (RuleCall)cRelAssignment_25_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_25_5 = (RuleCall)cGroup_25.eContents().get(5);
		private final Keyword cThenKeyword_25_6 = (Keyword)cGroup_25.eContents().get(6);
		private final Assignment cInvAssignment_25_7 = (Assignment)cGroup_25.eContents().get(7);
		private final RuleCall cInvExprParserRuleCall_25_7_0 = (RuleCall)cInvAssignment_25_7.eContents().get(0);
		private final Keyword cAndKeyword_25_8 = (Keyword)cGroup_25.eContents().get(8);
		private final Keyword cNotKeyword_25_9 = (Keyword)cGroup_25.eContents().get(9);
		private final Assignment cNotfinAssignment_25_10 = (Assignment)cGroup_25.eContents().get(10);
		private final RuleCall cNotfinExprParserRuleCall_25_10_0 = (RuleCall)cNotfinAssignment_25_10.eContents().get(0);
		private final Keyword cUntilKeyword_25_11 = (Keyword)cGroup_25.eContents().get(11);
		private final Keyword cPerhapsKeyword_25_12 = (Keyword)cGroup_25.eContents().get(12);
		private final Assignment cFinAssignment_25_13 = (Assignment)cGroup_25.eContents().get(13);
		private final RuleCall cFinExprParserRuleCall_25_13_0 = (RuleCall)cFinAssignment_25_13.eContents().get(0);
		private final Keyword cHappensKeyword_25_14 = (Keyword)cGroup_25.eContents().get(14);
		private final Keyword cAndKeyword_25_15 = (Keyword)cGroup_25.eContents().get(15);
		private final Keyword cFromKeyword_25_16 = (Keyword)cGroup_25.eContents().get(16);
		private final Keyword cThenKeyword_25_17 = (Keyword)cGroup_25.eContents().get(17);
		private final Assignment cInv2Assignment_25_18 = (Assignment)cGroup_25.eContents().get(18);
		private final RuleCall cInv2ExprParserRuleCall_25_18_0 = (RuleCall)cInv2Assignment_25_18.eContents().get(0);
		private final Keyword cWillKeyword_25_19 = (Keyword)cGroup_25.eContents().get(19);
		private final Keyword cBeKeyword_25_20 = (Keyword)cGroup_25.eContents().get(20);
		private final Keyword cUntilKeyword_25_21 = (Keyword)cGroup_25.eContents().get(21);
		private final Keyword cPerhapsKeyword_25_22 = (Keyword)cGroup_25.eContents().get(22);
		private final Assignment cRel2Assignment_25_23 = (Assignment)cGroup_25.eContents().get(23);
		private final RuleCall cRel2ExprParserRuleCall_25_23_0 = (RuleCall)cRel2Assignment_25_23.eContents().get(0);
		private final Keyword cHappensKeyword_25_24 = (Keyword)cGroup_25.eContents().get(24);
		private final Group cGroup_26 = (Group)cAlternatives.eContents().get(26);
		private final Keyword cIfKeyword_26_0 = (Keyword)cGroup_26.eContents().get(0);
		private final Assignment cTrigAssignment_26_1 = (Assignment)cGroup_26.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_26_1_0 = (RuleCall)cTrigAssignment_26_1.eContents().get(0);
		private final Keyword cAndKeyword_26_2 = (Keyword)cGroup_26.eContents().get(2);
		private final Keyword cNotKeyword_26_3 = (Keyword)cGroup_26.eContents().get(3);
		private final Assignment cRelAssignment_26_4 = (Assignment)cGroup_26.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_26_4_0 = (RuleCall)cRelAssignment_26_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_26_5 = (RuleCall)cGroup_26.eContents().get(5);
		private final Keyword cThenKeyword_26_6 = (Keyword)cGroup_26.eContents().get(6);
		private final Assignment cInvAssignment_26_7 = (Assignment)cGroup_26.eContents().get(7);
		private final RuleCall cInvExprParserRuleCall_26_7_0 = (RuleCall)cInvAssignment_26_7.eContents().get(0);
		private final Keyword cAndKeyword_26_8 = (Keyword)cGroup_26.eContents().get(8);
		private final Keyword cNotKeyword_26_9 = (Keyword)cGroup_26.eContents().get(9);
		private final Assignment cNotfinAssignment_26_10 = (Assignment)cGroup_26.eContents().get(10);
		private final RuleCall cNotfinExprParserRuleCall_26_10_0 = (RuleCall)cNotfinAssignment_26_10.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_26_11 = (RuleCall)cGroup_26.eContents().get(11);
		private final Keyword cUntilKeyword_26_12 = (Keyword)cGroup_26.eContents().get(12);
		private final Assignment cFinAssignment_26_13 = (Assignment)cGroup_26.eContents().get(13);
		private final RuleCall cFinExprParserRuleCall_26_13_0 = (RuleCall)cFinAssignment_26_13.eContents().get(0);
		private final Keyword cMayKeyword_26_14 = (Keyword)cGroup_26.eContents().get(14);
		private final Keyword cHappenKeyword_26_15 = (Keyword)cGroup_26.eContents().get(15);
		private final Keyword cAndKeyword_26_16 = (Keyword)cGroup_26.eContents().get(16);
		private final Keyword cFromKeyword_26_17 = (Keyword)cGroup_26.eContents().get(17);
		private final Keyword cThenKeyword_26_18 = (Keyword)cGroup_26.eContents().get(18);
		private final Assignment cInv2Assignment_26_19 = (Assignment)cGroup_26.eContents().get(19);
		private final RuleCall cInv2ExprParserRuleCall_26_19_0 = (RuleCall)cInv2Assignment_26_19.eContents().get(0);
		private final Keyword cWillKeyword_26_20 = (Keyword)cGroup_26.eContents().get(20);
		private final Keyword cBeKeyword_26_21 = (Keyword)cGroup_26.eContents().get(21);
		private final RuleCall cCommaParserRuleCall_26_22 = (RuleCall)cGroup_26.eContents().get(22);
		private final Keyword cUntilKeyword_26_23 = (Keyword)cGroup_26.eContents().get(23);
		private final Keyword cItKeyword_26_24 = (Keyword)cGroup_26.eContents().get(24);
		private final Keyword cMayKeyword_26_25 = (Keyword)cGroup_26.eContents().get(25);
		private final Keyword cBeKeyword_26_26 = (Keyword)cGroup_26.eContents().get(26);
		private final Assignment cRel2Assignment_26_27 = (Assignment)cGroup_26.eContents().get(27);
		private final RuleCall cRel2ExprParserRuleCall_26_27_0 = (RuleCall)cRel2Assignment_26_27.eContents().get(0);
		private final Keyword cOrKeyword_26_28 = (Keyword)cGroup_26.eContents().get(28);
		private final Assignment cReaAssignment_26_29 = (Assignment)cGroup_26.eContents().get(29);
		private final RuleCall cReaExprParserRuleCall_26_29_0 = (RuleCall)cReaAssignment_26_29.eContents().get(0);
		private final Keyword cWithKeyword_26_30 = (Keyword)cGroup_26.eContents().get(30);
		private final Assignment cInv3Assignment_26_31 = (Assignment)cGroup_26.eContents().get(31);
		private final RuleCall cInv3ExprParserRuleCall_26_31_0 = (RuleCall)cInv3Assignment_26_31.eContents().get(0);
		private final Keyword cPreservedKeyword_26_32 = (Keyword)cGroup_26.eContents().get(32);
		private final Group cGroup_27 = (Group)cAlternatives.eContents().get(27);
		private final Keyword cIfKeyword_27_0 = (Keyword)cGroup_27.eContents().get(0);
		private final Assignment cTrigAssignment_27_1 = (Assignment)cGroup_27.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_27_1_0 = (RuleCall)cTrigAssignment_27_1.eContents().get(0);
		private final Keyword cAndKeyword_27_2 = (Keyword)cGroup_27.eContents().get(2);
		private final Keyword cNotKeyword_27_3 = (Keyword)cGroup_27.eContents().get(3);
		private final Assignment cRelAssignment_27_4 = (Assignment)cGroup_27.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_27_4_0 = (RuleCall)cRelAssignment_27_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_27_5 = (RuleCall)cGroup_27.eContents().get(5);
		private final Keyword cThenKeyword_27_6 = (Keyword)cGroup_27.eContents().get(6);
		private final Assignment cInvAssignment_27_7 = (Assignment)cGroup_27.eContents().get(7);
		private final RuleCall cInvExprParserRuleCall_27_7_0 = (RuleCall)cInvAssignment_27_7.eContents().get(0);
		private final Keyword cAndKeyword_27_8 = (Keyword)cGroup_27.eContents().get(8);
		private final Keyword cNotKeyword_27_9 = (Keyword)cGroup_27.eContents().get(9);
		private final Assignment cNotfinAssignment_27_10 = (Assignment)cGroup_27.eContents().get(10);
		private final RuleCall cNotfinExprParserRuleCall_27_10_0 = (RuleCall)cNotfinAssignment_27_10.eContents().get(0);
		private final Keyword cUntilKeyword_27_11 = (Keyword)cGroup_27.eContents().get(11);
		private final Keyword cPerhapsKeyword_27_12 = (Keyword)cGroup_27.eContents().get(12);
		private final Assignment cFinAssignment_27_13 = (Assignment)cGroup_27.eContents().get(13);
		private final RuleCall cFinExprParserRuleCall_27_13_0 = (RuleCall)cFinAssignment_27_13.eContents().get(0);
		private final Keyword cHappensKeyword_27_14 = (Keyword)cGroup_27.eContents().get(14);
		private final Keyword cAndKeyword_27_15 = (Keyword)cGroup_27.eContents().get(15);
		private final Keyword cFromKeyword_27_16 = (Keyword)cGroup_27.eContents().get(16);
		private final Keyword cThenKeyword_27_17 = (Keyword)cGroup_27.eContents().get(17);
		private final Assignment cInv2Assignment_27_18 = (Assignment)cGroup_27.eContents().get(18);
		private final RuleCall cInv2ExprParserRuleCall_27_18_0 = (RuleCall)cInv2Assignment_27_18.eContents().get(0);
		private final Keyword cWillKeyword_27_19 = (Keyword)cGroup_27.eContents().get(19);
		private final Keyword cBeKeyword_27_20 = (Keyword)cGroup_27.eContents().get(20);
		private final Keyword cAlongKeyword_27_21 = (Keyword)cGroup_27.eContents().get(21);
		private final Keyword cWithKeyword_27_22 = (Keyword)cGroup_27.eContents().get(22);
		private final Assignment cNotdelAssignment_27_23 = (Assignment)cGroup_27.eContents().get(23);
		private final RuleCall cNotdelExprParserRuleCall_27_23_0 = (RuleCall)cNotdelAssignment_27_23.eContents().get(0);
		private final Keyword cUntilKeyword_27_24 = (Keyword)cGroup_27.eContents().get(24);
		private final Keyword cPerhapsKeyword_27_25 = (Keyword)cGroup_27.eContents().get(25);
		private final Assignment cRel2Assignment_27_26 = (Assignment)cGroup_27.eContents().get(26);
		private final RuleCall cRel2ExprParserRuleCall_27_26_0 = (RuleCall)cRel2Assignment_27_26.eContents().get(0);
		private final Keyword cHappensKeyword_27_27 = (Keyword)cGroup_27.eContents().get(27);
		private final Group cGroup_28 = (Group)cAlternatives.eContents().get(28);
		private final Keyword cIfKeyword_28_0 = (Keyword)cGroup_28.eContents().get(0);
		private final Assignment cTrigAssignment_28_1 = (Assignment)cGroup_28.eContents().get(1);
		private final RuleCall cTrigExprParserRuleCall_28_1_0 = (RuleCall)cTrigAssignment_28_1.eContents().get(0);
		private final Keyword cAndKeyword_28_2 = (Keyword)cGroup_28.eContents().get(2);
		private final Keyword cNotKeyword_28_3 = (Keyword)cGroup_28.eContents().get(3);
		private final Assignment cRelAssignment_28_4 = (Assignment)cGroup_28.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_28_4_0 = (RuleCall)cRelAssignment_28_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_28_5 = (RuleCall)cGroup_28.eContents().get(5);
		private final Keyword cThenKeyword_28_6 = (Keyword)cGroup_28.eContents().get(6);
		private final Assignment cInvAssignment_28_7 = (Assignment)cGroup_28.eContents().get(7);
		private final RuleCall cInvExprParserRuleCall_28_7_0 = (RuleCall)cInvAssignment_28_7.eContents().get(0);
		private final Keyword cAndKeyword_28_8 = (Keyword)cGroup_28.eContents().get(8);
		private final Keyword cNotKeyword_28_9 = (Keyword)cGroup_28.eContents().get(9);
		private final Assignment cNotfinAssignment_28_10 = (Assignment)cGroup_28.eContents().get(10);
		private final RuleCall cNotfinExprParserRuleCall_28_10_0 = (RuleCall)cNotfinAssignment_28_10.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_28_11 = (RuleCall)cGroup_28.eContents().get(11);
		private final Keyword cUntilKeyword_28_12 = (Keyword)cGroup_28.eContents().get(12);
		private final Keyword cPerhapsKeyword_28_13 = (Keyword)cGroup_28.eContents().get(13);
		private final Assignment cFinAssignment_28_14 = (Assignment)cGroup_28.eContents().get(14);
		private final RuleCall cFinExprParserRuleCall_28_14_0 = (RuleCall)cFinAssignment_28_14.eContents().get(0);
		private final Keyword cHappensKeyword_28_15 = (Keyword)cGroup_28.eContents().get(15);
		private final RuleCall cCommaParserRuleCall_28_16 = (RuleCall)cGroup_28.eContents().get(16);
		private final Keyword cAndKeyword_28_17 = (Keyword)cGroup_28.eContents().get(17);
		private final Keyword cFromKeyword_28_18 = (Keyword)cGroup_28.eContents().get(18);
		private final Keyword cThenKeyword_28_19 = (Keyword)cGroup_28.eContents().get(19);
		private final Assignment cInv2Assignment_28_20 = (Assignment)cGroup_28.eContents().get(20);
		private final RuleCall cInv2ExprParserRuleCall_28_20_0 = (RuleCall)cInv2Assignment_28_20.eContents().get(0);
		private final Keyword cWillKeyword_28_21 = (Keyword)cGroup_28.eContents().get(21);
		private final Keyword cBeKeyword_28_22 = (Keyword)cGroup_28.eContents().get(22);
		private final Keyword cAlongKeyword_28_23 = (Keyword)cGroup_28.eContents().get(23);
		private final Keyword cWithKeyword_28_24 = (Keyword)cGroup_28.eContents().get(24);
		private final Assignment cNotdelAssignment_28_25 = (Assignment)cGroup_28.eContents().get(25);
		private final RuleCall cNotdelExprParserRuleCall_28_25_0 = (RuleCall)cNotdelAssignment_28_25.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_28_26 = (RuleCall)cGroup_28.eContents().get(26);
		private final Keyword cUntilKeyword_28_27 = (Keyword)cGroup_28.eContents().get(27);
		private final Keyword cPerhapsKeyword_28_28 = (Keyword)cGroup_28.eContents().get(28);
		private final Assignment cRel2Assignment_28_29 = (Assignment)cGroup_28.eContents().get(29);
		private final RuleCall cRel2ExprParserRuleCall_28_29_0 = (RuleCall)cRel2Assignment_28_29.eContents().get(0);
		private final Keyword cOrKeyword_28_30 = (Keyword)cGroup_28.eContents().get(30);
		private final Assignment cReaAssignment_28_31 = (Assignment)cGroup_28.eContents().get(31);
		private final RuleCall cReaExprParserRuleCall_28_31_0 = (RuleCall)cReaAssignment_28_31.eContents().get(0);
		private final Keyword cWithKeyword_28_32 = (Keyword)cGroup_28.eContents().get(32);
		private final Assignment cInv3Assignment_28_33 = (Assignment)cGroup_28.eContents().get(33);
		private final RuleCall cInv3ExprParserRuleCall_28_33_0 = (RuleCall)cInv3Assignment_28_33.eContents().get(0);
		private final Keyword cPreservedKeyword_28_34 = (Keyword)cGroup_28.eContents().get(34);
		private final Group cGroup_29 = (Group)cAlternatives.eContents().get(29);
		private final Keyword cAlwaysKeyword_29_0 = (Keyword)cGroup_29.eContents().get(0);
		private final Assignment cInvAssignment_29_1 = (Assignment)cGroup_29.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_29_1_0 = (RuleCall)cInvAssignment_29_1.eContents().get(0);
		private final Group cGroup_30 = (Group)cAlternatives.eContents().get(30);
		private final Keyword cThereKeyword_30_0 = (Keyword)cGroup_30.eContents().get(0);
		private final Keyword cIsKeyword_30_1 = (Keyword)cGroup_30.eContents().get(1);
		private final Keyword cAlwaysKeyword_30_2 = (Keyword)cGroup_30.eContents().get(2);
		private final Keyword cAKeyword_30_3 = (Keyword)cGroup_30.eContents().get(3);
		private final Assignment cReaAssignment_30_4 = (Assignment)cGroup_30.eContents().get(4);
		private final RuleCall cReaExprParserRuleCall_30_4_0 = (RuleCall)cReaAssignment_30_4.eContents().get(0);
		private final Group cGroup_31 = (Group)cAlternatives.eContents().get(31);
		private final Keyword cAlwaysKeyword_31_0 = (Keyword)cGroup_31.eContents().get(0);
		private final Assignment cInvAssignment_31_1 = (Assignment)cGroup_31.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_31_1_0 = (RuleCall)cInvAssignment_31_1.eContents().get(0);
		private final Keyword cAndKeyword_31_2 = (Keyword)cGroup_31.eContents().get(2);
		private final Keyword cImmediatelyKeyword_31_3 = (Keyword)cGroup_31.eContents().get(3);
		private final Keyword cThereKeyword_31_4 = (Keyword)cGroup_31.eContents().get(4);
		private final Keyword cWillKeyword_31_5 = (Keyword)cGroup_31.eContents().get(5);
		private final Keyword cBeKeyword_31_6 = (Keyword)cGroup_31.eContents().get(6);
		private final Assignment cReaAssignment_31_7 = (Assignment)cGroup_31.eContents().get(7);
		private final RuleCall cReaExprParserRuleCall_31_7_0 = (RuleCall)cReaAssignment_31_7.eContents().get(0);
		private final Group cGroup_32 = (Group)cAlternatives.eContents().get(32);
		private final Keyword cAlwaysKeyword_32_0 = (Keyword)cGroup_32.eContents().get(0);
		private final Keyword cEitherKeyword_32_1 = (Keyword)cGroup_32.eContents().get(1);
		private final Assignment cRelAssignment_32_2 = (Assignment)cGroup_32.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_32_2_0 = (RuleCall)cRelAssignment_32_2.eContents().get(0);
		private final Keyword cOrKeyword_32_3 = (Keyword)cGroup_32.eContents().get(3);
		private final Keyword cImmediatelyKeyword_32_4 = (Keyword)cGroup_32.eContents().get(4);
		private final Keyword cWillKeyword_32_5 = (Keyword)cGroup_32.eContents().get(5);
		private final Keyword cBeKeyword_32_6 = (Keyword)cGroup_32.eContents().get(6);
		private final Assignment cReaAssignment_32_7 = (Assignment)cGroup_32.eContents().get(7);
		private final RuleCall cReaExprParserRuleCall_32_7_0 = (RuleCall)cReaAssignment_32_7.eContents().get(0);
		private final Group cGroup_33 = (Group)cAlternatives.eContents().get(33);
		private final Keyword cAlwaysKeyword_33_0 = (Keyword)cGroup_33.eContents().get(0);
		private final Keyword cEitherKeyword_33_1 = (Keyword)cGroup_33.eContents().get(1);
		private final Assignment cRelAssignment_33_2 = (Assignment)cGroup_33.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_33_2_0 = (RuleCall)cRelAssignment_33_2.eContents().get(0);
		private final Keyword cOrKeyword_33_3 = (Keyword)cGroup_33.eContents().get(3);
		private final Assignment cInvAssignment_33_4 = (Assignment)cGroup_33.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_33_4_0 = (RuleCall)cInvAssignment_33_4.eContents().get(0);
		private final Keyword cAndKeyword_33_5 = (Keyword)cGroup_33.eContents().get(5);
		private final Keyword cAtKeyword_33_6 = (Keyword)cGroup_33.eContents().get(6);
		private final Keyword cTheKeyword_33_7 = (Keyword)cGroup_33.eContents().get(7);
		private final Keyword cSameKeyword_33_8 = (Keyword)cGroup_33.eContents().get(8);
		private final Keyword cTimeKeyword_33_9 = (Keyword)cGroup_33.eContents().get(9);
		private final Keyword cItKeyword_33_10 = (Keyword)cGroup_33.eContents().get(10);
		private final Keyword cWillKeyword_33_11 = (Keyword)cGroup_33.eContents().get(11);
		private final Keyword cImmediatelyKeyword_33_12 = (Keyword)cGroup_33.eContents().get(12);
		private final Keyword cBeKeyword_33_13 = (Keyword)cGroup_33.eContents().get(13);
		private final Assignment cReaAssignment_33_14 = (Assignment)cGroup_33.eContents().get(14);
		private final RuleCall cReaExprParserRuleCall_33_14_0 = (RuleCall)cReaAssignment_33_14.eContents().get(0);
		private final Group cGroup_34 = (Group)cAlternatives.eContents().get(34);
		private final Keyword cAlwaysKeyword_34_0 = (Keyword)cGroup_34.eContents().get(0);
		private final Assignment cInvAssignment_34_1 = (Assignment)cGroup_34.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_34_1_0 = (RuleCall)cInvAssignment_34_1.eContents().get(0);
		private final Keyword cOrKeyword_34_2 = (Keyword)cGroup_34.eContents().get(2);
		private final Keyword cItKeyword_34_3 = (Keyword)cGroup_34.eContents().get(3);
		private final Keyword cAlternatesKeyword_34_4 = (Keyword)cGroup_34.eContents().get(4);
		private final Keyword cWithKeyword_34_5 = (Keyword)cGroup_34.eContents().get(5);
		private final Assignment cRelAssignment_34_6 = (Assignment)cGroup_34.eContents().get(6);
		private final RuleCall cRelExprParserRuleCall_34_6_0 = (RuleCall)cRelAssignment_34_6.eContents().get(0);
		private final Group cGroup_35 = (Group)cAlternatives.eContents().get(35);
		private final Keyword cAlwaysKeyword_35_0 = (Keyword)cGroup_35.eContents().get(0);
		private final Assignment cNotdelAssignment_35_1 = (Assignment)cGroup_35.eContents().get(1);
		private final RuleCall cNotdelExprParserRuleCall_35_1_0 = (RuleCall)cNotdelAssignment_35_1.eContents().get(0);
		private final Keyword cAndKeyword_35_2 = (Keyword)cGroup_35.eContents().get(2);
		private final Keyword cMaybeKeyword_35_3 = (Keyword)cGroup_35.eContents().get(3);
		private final Keyword cOccasionallyKeyword_35_4 = (Keyword)cGroup_35.eContents().get(4);
		private final Assignment cRelAssignment_35_5 = (Assignment)cGroup_35.eContents().get(5);
		private final RuleCall cRelExprParserRuleCall_35_5_0 = (RuleCall)cRelAssignment_35_5.eContents().get(0);
		private final Keyword cOrKeyword_35_6 = (Keyword)cGroup_35.eContents().get(6);
		private final Assignment cReaAssignment_35_7 = (Assignment)cGroup_35.eContents().get(7);
		private final RuleCall cReaExprParserRuleCall_35_7_0 = (RuleCall)cReaAssignment_35_7.eContents().get(0);
		private final Group cGroup_36 = (Group)cAlternatives.eContents().get(36);
		private final Keyword cAlwaysKeyword_36_0 = (Keyword)cGroup_36.eContents().get(0);
		private final Assignment cInvAssignment_36_1 = (Assignment)cGroup_36.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_36_1_0 = (RuleCall)cInvAssignment_36_1.eContents().get(0);
		private final Keyword cAndKeyword_36_2 = (Keyword)cGroup_36.eContents().get(2);
		private final Keyword cMaybeKeyword_36_3 = (Keyword)cGroup_36.eContents().get(3);
		private final Keyword cOccasionallyKeyword_36_4 = (Keyword)cGroup_36.eContents().get(4);
		private final Assignment cReaAssignment_36_5 = (Assignment)cGroup_36.eContents().get(5);
		private final RuleCall cReaExprParserRuleCall_36_5_0 = (RuleCall)cReaAssignment_36_5.eContents().get(0);
		private final Group cGroup_37 = (Group)cAlternatives.eContents().get(37);
		private final Keyword cAlwaysKeyword_37_0 = (Keyword)cGroup_37.eContents().get(0);
		private final Assignment cE1Assignment_37_1 = (Assignment)cGroup_37.eContents().get(1);
		private final RuleCall cE1ExprParserRuleCall_37_1_0 = (RuleCall)cE1Assignment_37_1.eContents().get(0);
		private final Keyword cAndKeyword_37_2 = (Keyword)cGroup_37.eContents().get(2);
		private final Keyword cMaybeKeyword_37_3 = (Keyword)cGroup_37.eContents().get(3);
		private final Keyword cFromKeyword_37_4 = (Keyword)cGroup_37.eContents().get(4);
		private final Keyword cTimeKeyword_37_5 = (Keyword)cGroup_37.eContents().get(5);
		private final Keyword cToKeyword_37_6 = (Keyword)cGroup_37.eContents().get(6);
		private final Keyword cTimeKeyword_37_7 = (Keyword)cGroup_37.eContents().get(7);
		private final Assignment cE2Assignment_37_8 = (Assignment)cGroup_37.eContents().get(8);
		private final RuleCall cE2ExprParserRuleCall_37_8_0 = (RuleCall)cE2Assignment_37_8.eContents().get(0);
		private final Keyword cOrKeyword_37_9 = (Keyword)cGroup_37.eContents().get(9);
		private final Assignment cE3Assignment_37_10 = (Assignment)cGroup_37.eContents().get(10);
		private final RuleCall cE3ExprParserRuleCall_37_10_0 = (RuleCall)cE3Assignment_37_10.eContents().get(0);
		private final Group cGroup_38 = (Group)cAlternatives.eContents().get(38);
		private final Keyword cEitherKeyword_38_0 = (Keyword)cGroup_38.eContents().get(0);
		private final Keyword cItKeyword_38_1 = (Keyword)cGroup_38.eContents().get(1);
		private final Keyword cIsKeyword_38_2 = (Keyword)cGroup_38.eContents().get(2);
		private final Keyword cNotKeyword_38_3 = (Keyword)cGroup_38.eContents().get(3);
		private final Keyword cAlwaysKeyword_38_4 = (Keyword)cGroup_38.eContents().get(4);
		private final Assignment cFinAssignment_38_5 = (Assignment)cGroup_38.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_38_5_0 = (RuleCall)cFinAssignment_38_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_38_6 = (RuleCall)cGroup_38.eContents().get(6);
		private final Keyword cOrKeyword_38_7 = (Keyword)cGroup_38.eContents().get(7);
		private final Keyword cItKeyword_38_8 = (Keyword)cGroup_38.eContents().get(8);
		private final Keyword cHappensKeyword_38_9 = (Keyword)cGroup_38.eContents().get(9);
		private final Keyword cAndKeyword_38_10 = (Keyword)cGroup_38.eContents().get(10);
		private final Keyword cThenKeyword_38_11 = (Keyword)cGroup_38.eContents().get(11);
		private final Keyword cItKeyword_38_12 = (Keyword)cGroup_38.eContents().get(12);
		private final Keyword cImmediatelyKeyword_38_13 = (Keyword)cGroup_38.eContents().get(13);
		private final Keyword cBecomesKeyword_38_14 = (Keyword)cGroup_38.eContents().get(14);
		private final Assignment cReaAssignment_38_15 = (Assignment)cGroup_38.eContents().get(15);
		private final RuleCall cReaExprParserRuleCall_38_15_0 = (RuleCall)cReaAssignment_38_15.eContents().get(0);
		private final Group cGroup_39 = (Group)cAlternatives.eContents().get(39);
		private final Keyword cEitherKeyword_39_0 = (Keyword)cGroup_39.eContents().get(0);
		private final Keyword cItKeyword_39_1 = (Keyword)cGroup_39.eContents().get(1);
		private final Keyword cIsKeyword_39_2 = (Keyword)cGroup_39.eContents().get(2);
		private final Keyword cNotKeyword_39_3 = (Keyword)cGroup_39.eContents().get(3);
		private final Keyword cAlwaysKeyword_39_4 = (Keyword)cGroup_39.eContents().get(4);
		private final Assignment cFinAssignment_39_5 = (Assignment)cGroup_39.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_39_5_0 = (RuleCall)cFinAssignment_39_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_39_6 = (RuleCall)cGroup_39.eContents().get(6);
		private final Keyword cOrKeyword_39_7 = (Keyword)cGroup_39.eContents().get(7);
		private final Keyword cItKeyword_39_8 = (Keyword)cGroup_39.eContents().get(8);
		private final Keyword cHappensKeyword_39_9 = (Keyword)cGroup_39.eContents().get(9);
		private final RuleCall cCommaParserRuleCall_39_10 = (RuleCall)cGroup_39.eContents().get(10);
		private final Keyword cAndKeyword_39_11 = (Keyword)cGroup_39.eContents().get(11);
		private final Keyword cThenKeyword_39_12 = (Keyword)cGroup_39.eContents().get(12);
		private final Keyword cItKeyword_39_13 = (Keyword)cGroup_39.eContents().get(13);
		private final Keyword cImmediatelyKeyword_39_14 = (Keyword)cGroup_39.eContents().get(14);
		private final Keyword cBecomesKeyword_39_15 = (Keyword)cGroup_39.eContents().get(15);
		private final Assignment cReaAssignment_39_16 = (Assignment)cGroup_39.eContents().get(16);
		private final RuleCall cReaExprParserRuleCall_39_16_0 = (RuleCall)cReaAssignment_39_16.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_39_17 = (RuleCall)cGroup_39.eContents().get(17);
		private final Keyword cOrKeyword_39_18 = (Keyword)cGroup_39.eContents().get(18);
		private final Assignment cRelAssignment_39_19 = (Assignment)cGroup_39.eContents().get(19);
		private final RuleCall cRelExprParserRuleCall_39_19_0 = (RuleCall)cRelAssignment_39_19.eContents().get(0);
		private final Keyword cHappensKeyword_39_20 = (Keyword)cGroup_39.eContents().get(20);
		private final Group cGroup_40 = (Group)cAlternatives.eContents().get(40);
		private final Keyword cEitherKeyword_40_0 = (Keyword)cGroup_40.eContents().get(0);
		private final Keyword cItKeyword_40_1 = (Keyword)cGroup_40.eContents().get(1);
		private final Keyword cDoesKeyword_40_2 = (Keyword)cGroup_40.eContents().get(2);
		private final Keyword cNotKeyword_40_3 = (Keyword)cGroup_40.eContents().get(3);
		private final Keyword cAlwaysKeyword_40_4 = (Keyword)cGroup_40.eContents().get(4);
		private final Assignment cFinAssignment_40_5 = (Assignment)cGroup_40.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_40_5_0 = (RuleCall)cFinAssignment_40_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_40_6 = (RuleCall)cGroup_40.eContents().get(6);
		private final Keyword cOrKeyword_40_7 = (Keyword)cGroup_40.eContents().get(7);
		private final Keyword cItKeyword_40_8 = (Keyword)cGroup_40.eContents().get(8);
		private final Keyword cHappensKeyword_40_9 = (Keyword)cGroup_40.eContents().get(9);
		private final Keyword cAndKeyword_40_10 = (Keyword)cGroup_40.eContents().get(10);
		private final Keyword cWillKeyword_40_11 = (Keyword)cGroup_40.eContents().get(11);
		private final Keyword cAlwaysKeyword_40_12 = (Keyword)cGroup_40.eContents().get(12);
		private final Keyword cBeKeyword_40_13 = (Keyword)cGroup_40.eContents().get(13);
		private final Assignment cNotdelAssignment_40_14 = (Assignment)cGroup_40.eContents().get(14);
		private final RuleCall cNotdelExprParserRuleCall_40_14_0 = (RuleCall)cNotdelAssignment_40_14.eContents().get(0);
		private final Keyword cFromKeyword_40_15 = (Keyword)cGroup_40.eContents().get(15);
		private final Keyword cNowKeyword_40_16 = (Keyword)cGroup_40.eContents().get(16);
		private final Group cGroup_41 = (Group)cAlternatives.eContents().get(41);
		private final Keyword cEitherKeyword_41_0 = (Keyword)cGroup_41.eContents().get(0);
		private final Keyword cItKeyword_41_1 = (Keyword)cGroup_41.eContents().get(1);
		private final Keyword cIsKeyword_41_2 = (Keyword)cGroup_41.eContents().get(2);
		private final Keyword cNotKeyword_41_3 = (Keyword)cGroup_41.eContents().get(3);
		private final Keyword cAlwaysKeyword_41_4 = (Keyword)cGroup_41.eContents().get(4);
		private final Assignment cFinAssignment_41_5 = (Assignment)cGroup_41.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_41_5_0 = (RuleCall)cFinAssignment_41_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_41_6 = (RuleCall)cGroup_41.eContents().get(6);
		private final Keyword cOrKeyword_41_7 = (Keyword)cGroup_41.eContents().get(7);
		private final Keyword cItKeyword_41_8 = (Keyword)cGroup_41.eContents().get(8);
		private final Keyword cHappensKeyword_41_9 = (Keyword)cGroup_41.eContents().get(9);
		private final Keyword cAndKeyword_41_10 = (Keyword)cGroup_41.eContents().get(10);
		private final Keyword cFromKeyword_41_11 = (Keyword)cGroup_41.eContents().get(11);
		private final Keyword cThenKeyword_41_12 = (Keyword)cGroup_41.eContents().get(12);
		private final Keyword cItKeyword_41_13 = (Keyword)cGroup_41.eContents().get(13);
		private final Keyword cWillKeyword_41_14 = (Keyword)cGroup_41.eContents().get(14);
		private final Keyword cBeKeyword_41_15 = (Keyword)cGroup_41.eContents().get(15);
		private final Assignment cNotdelAssignment_41_16 = (Assignment)cGroup_41.eContents().get(16);
		private final RuleCall cNotdelExprParserRuleCall_41_16_0 = (RuleCall)cNotdelAssignment_41_16.eContents().get(0);
		private final Keyword cUntilKeyword_41_17 = (Keyword)cGroup_41.eContents().get(17);
		private final Keyword cMaybeKeyword_41_18 = (Keyword)cGroup_41.eContents().get(18);
		private final Assignment cReaAssignment_41_19 = (Assignment)cGroup_41.eContents().get(19);
		private final RuleCall cReaExprParserRuleCall_41_19_0 = (RuleCall)cReaAssignment_41_19.eContents().get(0);
		private final Keyword cHappensKeyword_41_20 = (Keyword)cGroup_41.eContents().get(20);
		private final Group cGroup_42 = (Group)cAlternatives.eContents().get(42);
		private final Keyword cAlwaysKeyword_42_0 = (Keyword)cGroup_42.eContents().get(0);
		private final Assignment cInvAssignment_42_1 = (Assignment)cGroup_42.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_42_1_0 = (RuleCall)cInvAssignment_42_1.eContents().get(0);
		private final Keyword cAndKeyword_42_2 = (Keyword)cGroup_42.eContents().get(2);
		private final Assignment cNotdelAssignment_42_3 = (Assignment)cGroup_42.eContents().get(3);
		private final RuleCall cNotdelExprParserRuleCall_42_3_0 = (RuleCall)cNotdelAssignment_42_3.eContents().get(0);
		private final Keyword cUntilKeyword_42_4 = (Keyword)cGroup_42.eContents().get(4);
		private final Keyword cPerhapsKeyword_42_5 = (Keyword)cGroup_42.eContents().get(5);
		private final Assignment cReaAssignment_42_6 = (Assignment)cGroup_42.eContents().get(6);
		private final RuleCall cReaExprParserRuleCall_42_6_0 = (RuleCall)cReaAssignment_42_6.eContents().get(0);
		private final Keyword cHappensKeyword_42_7 = (Keyword)cGroup_42.eContents().get(7);
		private final Group cGroup_43 = (Group)cAlternatives.eContents().get(43);
		private final Keyword cEitherKeyword_43_0 = (Keyword)cGroup_43.eContents().get(0);
		private final Keyword cAlwaysKeyword_43_1 = (Keyword)cGroup_43.eContents().get(1);
		private final Assignment cInvAssignment_43_2 = (Assignment)cGroup_43.eContents().get(2);
		private final RuleCall cInvExprParserRuleCall_43_2_0 = (RuleCall)cInvAssignment_43_2.eContents().get(0);
		private final Keyword cAndKeyword_43_3 = (Keyword)cGroup_43.eContents().get(3);
		private final Keyword cNotKeyword_43_4 = (Keyword)cGroup_43.eContents().get(4);
		private final Assignment cFinAssignment_43_5 = (Assignment)cGroup_43.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_43_5_0 = (RuleCall)cFinAssignment_43_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_43_6 = (RuleCall)cGroup_43.eContents().get(6);
		private final Keyword cOrKeyword_43_7 = (Keyword)cGroup_43.eContents().get(7);
		private final Assignment cRelAssignment_43_8 = (Assignment)cGroup_43.eContents().get(8);
		private final RuleCall cRelExprParserRuleCall_43_8_0 = (RuleCall)cRelAssignment_43_8.eContents().get(0);
		private final Keyword cWillKeyword_43_9 = (Keyword)cGroup_43.eContents().get(9);
		private final Keyword cHappenKeyword_43_10 = (Keyword)cGroup_43.eContents().get(10);
		private final RuleCall cCommaParserRuleCall_43_11 = (RuleCall)cGroup_43.eContents().get(11);
		private final Keyword cOrKeyword_43_12 = (Keyword)cGroup_43.eContents().get(12);
		private final Assignment cFin2Assignment_43_13 = (Assignment)cGroup_43.eContents().get(13);
		private final RuleCall cFin2ExprParserRuleCall_43_13_0 = (RuleCall)cFin2Assignment_43_13.eContents().get(0);
		private final Keyword cWithKeyword_43_14 = (Keyword)cGroup_43.eContents().get(14);
		private final Assignment cInv2Assignment_43_15 = (Assignment)cGroup_43.eContents().get(15);
		private final RuleCall cInv2ExprParserRuleCall_43_15_0 = (RuleCall)cInv2Assignment_43_15.eContents().get(0);
		private final Group cGroup_44 = (Group)cAlternatives.eContents().get(44);
		private final Keyword cAlwaysKeyword_44_0 = (Keyword)cGroup_44.eContents().get(0);
		private final Assignment cInvAssignment_44_1 = (Assignment)cGroup_44.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_44_1_0 = (RuleCall)cInvAssignment_44_1.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_44_2 = (RuleCall)cGroup_44.eContents().get(2);
		private final Keyword cAndKeyword_44_3 = (Keyword)cGroup_44.eContents().get(3);
		private final Assignment cFinAssignment_44_4 = (Assignment)cGroup_44.eContents().get(4);
		private final RuleCall cFinExprParserRuleCall_44_4_0 = (RuleCall)cFinAssignment_44_4.eContents().get(0);
		private final Keyword cPossiblyKeyword_44_5 = (Keyword)cGroup_44.eContents().get(5);
		private final Keyword cComesKeyword_44_6 = (Keyword)cGroup_44.eContents().get(6);
		private final Keyword cWithKeyword_44_7 = (Keyword)cGroup_44.eContents().get(7);
		private final Assignment cReaAssignment_44_8 = (Assignment)cGroup_44.eContents().get(8);
		private final RuleCall cReaExprParserRuleCall_44_8_0 = (RuleCall)cReaAssignment_44_8.eContents().get(0);
		private final Group cGroup_45 = (Group)cAlternatives.eContents().get(45);
		private final Keyword cEitherKeyword_45_0 = (Keyword)cGroup_45.eContents().get(0);
		private final Keyword cAlwaysKeyword_45_1 = (Keyword)cGroup_45.eContents().get(1);
		private final Assignment cInvAssignment_45_2 = (Assignment)cGroup_45.eContents().get(2);
		private final RuleCall cInvExprParserRuleCall_45_2_0 = (RuleCall)cInvAssignment_45_2.eContents().get(0);
		private final Keyword cAndKeyword_45_3 = (Keyword)cGroup_45.eContents().get(3);
		private final Keyword cNotKeyword_45_4 = (Keyword)cGroup_45.eContents().get(4);
		private final Assignment cFinAssignment_45_5 = (Assignment)cGroup_45.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_45_5_0 = (RuleCall)cFinAssignment_45_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_45_6 = (RuleCall)cGroup_45.eContents().get(6);
		private final Keyword cOrKeyword_45_7 = (Keyword)cGroup_45.eContents().get(7);
		private final Assignment cRelAssignment_45_8 = (Assignment)cGroup_45.eContents().get(8);
		private final RuleCall cRelExprParserRuleCall_45_8_0 = (RuleCall)cRelAssignment_45_8.eContents().get(0);
		private final Keyword cWillKeyword_45_9 = (Keyword)cGroup_45.eContents().get(9);
		private final Keyword cHappenKeyword_45_10 = (Keyword)cGroup_45.eContents().get(10);
		private final RuleCall cCommaParserRuleCall_45_11 = (RuleCall)cGroup_45.eContents().get(11);
		private final Keyword cOrKeyword_45_12 = (Keyword)cGroup_45.eContents().get(12);
		private final Assignment cFin2Assignment_45_13 = (Assignment)cGroup_45.eContents().get(13);
		private final RuleCall cFin2ExprParserRuleCall_45_13_0 = (RuleCall)cFin2Assignment_45_13.eContents().get(0);
		private final Keyword cWithKeyword_45_14 = (Keyword)cGroup_45.eContents().get(14);
		private final Assignment cInv2Assignment_45_15 = (Assignment)cGroup_45.eContents().get(15);
		private final RuleCall cInv2ExprParserRuleCall_45_15_0 = (RuleCall)cInv2Assignment_45_15.eContents().get(0);
		private final Keyword cAndKeyword_45_16 = (Keyword)cGroup_45.eContents().get(16);
		private final Keyword cImmediateKeyword_45_17 = (Keyword)cGroup_45.eContents().get(17);
		private final Assignment cReaAssignment_45_18 = (Assignment)cGroup_45.eContents().get(18);
		private final RuleCall cReaExprParserRuleCall_45_18_0 = (RuleCall)cReaAssignment_45_18.eContents().get(0);
		private final Group cGroup_46 = (Group)cAlternatives.eContents().get(46);
		private final Keyword cEitherKeyword_46_0 = (Keyword)cGroup_46.eContents().get(0);
		private final Keyword cAlwaysKeyword_46_1 = (Keyword)cGroup_46.eContents().get(1);
		private final Assignment cInvAssignment_46_2 = (Assignment)cGroup_46.eContents().get(2);
		private final RuleCall cInvExprParserRuleCall_46_2_0 = (RuleCall)cInvAssignment_46_2.eContents().get(0);
		private final Keyword cAndKeyword_46_3 = (Keyword)cGroup_46.eContents().get(3);
		private final Keyword cNotKeyword_46_4 = (Keyword)cGroup_46.eContents().get(4);
		private final Assignment cFinAssignment_46_5 = (Assignment)cGroup_46.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_46_5_0 = (RuleCall)cFinAssignment_46_5.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_46_6 = (RuleCall)cGroup_46.eContents().get(6);
		private final Keyword cOrKeyword_46_7 = (Keyword)cGroup_46.eContents().get(7);
		private final Assignment cFin2Assignment_46_8 = (Assignment)cGroup_46.eContents().get(8);
		private final RuleCall cFin2ExprParserRuleCall_46_8_0 = (RuleCall)cFin2Assignment_46_8.eContents().get(0);
		private final Keyword cWillKeyword_46_9 = (Keyword)cGroup_46.eContents().get(9);
		private final Keyword cHappenKeyword_46_10 = (Keyword)cGroup_46.eContents().get(10);
		private final Keyword cAndKeyword_46_11 = (Keyword)cGroup_46.eContents().get(11);
		private final Keyword cFromKeyword_46_12 = (Keyword)cGroup_46.eContents().get(12);
		private final Keyword cNowKeyword_46_13 = (Keyword)cGroup_46.eContents().get(13);
		private final Keyword cThereKeyword_46_14 = (Keyword)cGroup_46.eContents().get(14);
		private final Keyword cWillKeyword_46_15 = (Keyword)cGroup_46.eContents().get(15);
		private final Keyword cAlwaysKeyword_46_16 = (Keyword)cGroup_46.eContents().get(16);
		private final Keyword cBeKeyword_46_17 = (Keyword)cGroup_46.eContents().get(17);
		private final Assignment cInv2Assignment_46_18 = (Assignment)cGroup_46.eContents().get(18);
		private final RuleCall cInv2ExprParserRuleCall_46_18_0 = (RuleCall)cInv2Assignment_46_18.eContents().get(0);
		private final Keyword cAndKeyword_46_19 = (Keyword)cGroup_46.eContents().get(19);
		private final Assignment cNotdelAssignment_46_20 = (Assignment)cGroup_46.eContents().get(20);
		private final RuleCall cNotdelExprParserRuleCall_46_20_0 = (RuleCall)cNotdelAssignment_46_20.eContents().get(0);
		private final Group cGroup_47 = (Group)cAlternatives.eContents().get(47);
		private final Keyword cAlwaysKeyword_47_0 = (Keyword)cGroup_47.eContents().get(0);
		private final Assignment cInvAssignment_47_1 = (Assignment)cGroup_47.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_47_1_0 = (RuleCall)cInvAssignment_47_1.eContents().get(0);
		private final Keyword cAndKeyword_47_2 = (Keyword)cGroup_47.eContents().get(2);
		private final Keyword cMaybeKeyword_47_3 = (Keyword)cGroup_47.eContents().get(3);
		private final Assignment cFinAssignment_47_4 = (Assignment)cGroup_47.eContents().get(4);
		private final RuleCall cFinExprParserRuleCall_47_4_0 = (RuleCall)cFinAssignment_47_4.eContents().get(0);
		private final Keyword cAndKeyword_47_5 = (Keyword)cGroup_47.eContents().get(5);
		private final Keyword cThenKeyword_47_6 = (Keyword)cGroup_47.eContents().get(6);
		private final Keyword cMaybeKeyword_47_7 = (Keyword)cGroup_47.eContents().get(7);
		private final Assignment cReaAssignment_47_8 = (Assignment)cGroup_47.eContents().get(8);
		private final RuleCall cReaExprParserRuleCall_47_8_0 = (RuleCall)cReaAssignment_47_8.eContents().get(0);
		private final Group cGroup_48 = (Group)cAlternatives.eContents().get(48);
		private final Keyword cAlwaysKeyword_48_0 = (Keyword)cGroup_48.eContents().get(0);
		private final Assignment cInvAssignment_48_1 = (Assignment)cGroup_48.eContents().get(1);
		private final RuleCall cInvExprParserRuleCall_48_1_0 = (RuleCall)cInvAssignment_48_1.eContents().get(0);
		private final Keyword cAndKeyword_48_2 = (Keyword)cGroup_48.eContents().get(2);
		private final Keyword cPossiblyKeyword_48_3 = (Keyword)cGroup_48.eContents().get(3);
		private final Assignment cFinAssignment_48_4 = (Assignment)cGroup_48.eContents().get(4);
		private final RuleCall cFinExprParserRuleCall_48_4_0 = (RuleCall)cFinAssignment_48_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_48_5 = (RuleCall)cGroup_48.eContents().get(5);
		private final Keyword cAndKeyword_48_6 = (Keyword)cGroup_48.eContents().get(6);
		private final Keyword cFromKeyword_48_7 = (Keyword)cGroup_48.eContents().get(7);
		private final Keyword cThenKeyword_48_8 = (Keyword)cGroup_48.eContents().get(8);
		private final Keyword cThereKeyword_48_9 = (Keyword)cGroup_48.eContents().get(9);
		private final Keyword cWillKeyword_48_10 = (Keyword)cGroup_48.eContents().get(10);
		private final Keyword cBeKeyword_48_11 = (Keyword)cGroup_48.eContents().get(11);
		private final Assignment cNotdelAssignment_48_12 = (Assignment)cGroup_48.eContents().get(12);
		private final RuleCall cNotdelExprParserRuleCall_48_12_0 = (RuleCall)cNotdelAssignment_48_12.eContents().get(0);
		private final Keyword cUntilKeyword_48_13 = (Keyword)cGroup_48.eContents().get(13);
		private final Keyword cPerhapsKeyword_48_14 = (Keyword)cGroup_48.eContents().get(14);
		private final Assignment cReaAssignment_48_15 = (Assignment)cGroup_48.eContents().get(15);
		private final RuleCall cReaExprParserRuleCall_48_15_0 = (RuleCall)cReaAssignment_48_15.eContents().get(0);
		private final Group cGroup_49 = (Group)cAlternatives.eContents().get(49);
		private final Keyword cWheneverKeyword_49_0 = (Keyword)cGroup_49.eContents().get(0);
		private final Keyword cItKeyword_49_1 = (Keyword)cGroup_49.eContents().get(1);
		private final Keyword cIsKeyword_49_2 = (Keyword)cGroup_49.eContents().get(2);
		private final Keyword cNotKeyword_49_3 = (Keyword)cGroup_49.eContents().get(3);
		private final Assignment cRelAssignment_49_4 = (Assignment)cGroup_49.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_49_4_0 = (RuleCall)cRelAssignment_49_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_49_5 = (RuleCall)cGroup_49.eContents().get(5);
		private final Assignment cFinAssignment_49_6 = (Assignment)cGroup_49.eContents().get(6);
		private final RuleCall cFinExprParserRuleCall_49_6_0 = (RuleCall)cFinAssignment_49_6.eContents().get(0);
		private final Keyword cWillKeyword_49_7 = (Keyword)cGroup_49.eContents().get(7);
		private final Keyword cProbablyKeyword_49_8 = (Keyword)cGroup_49.eContents().get(8);
		private final Keyword cComeKeyword_49_9 = (Keyword)cGroup_49.eContents().get(9);
		private final RuleCall cCommaParserRuleCall_49_10 = (RuleCall)cGroup_49.eContents().get(10);
		private final Keyword cAndKeyword_49_11 = (Keyword)cGroup_49.eContents().get(11);
		private final Keyword cFromKeyword_49_12 = (Keyword)cGroup_49.eContents().get(12);
		private final Keyword cThatKeyword_49_13 = (Keyword)cGroup_49.eContents().get(13);
		private final Keyword cMomentKeyword_49_14 = (Keyword)cGroup_49.eContents().get(14);
		private final Keyword cThereKeyword_49_15 = (Keyword)cGroup_49.eContents().get(15);
		private final Keyword cWillKeyword_49_16 = (Keyword)cGroup_49.eContents().get(16);
		private final Keyword cBeKeyword_49_17 = (Keyword)cGroup_49.eContents().get(17);
		private final Assignment cNotdelAssignment_49_18 = (Assignment)cGroup_49.eContents().get(18);
		private final RuleCall cNotdelExprParserRuleCall_49_18_0 = (RuleCall)cNotdelAssignment_49_18.eContents().get(0);
		private final Keyword cUntilKeyword_49_19 = (Keyword)cGroup_49.eContents().get(19);
		private final Keyword cMaybeKeyword_49_20 = (Keyword)cGroup_49.eContents().get(20);
		private final Assignment cRel2Assignment_49_21 = (Assignment)cGroup_49.eContents().get(21);
		private final RuleCall cRel2ExprParserRuleCall_49_21_0 = (RuleCall)cRel2Assignment_49_21.eContents().get(0);
		private final Keyword cHappensKeyword_49_22 = (Keyword)cGroup_49.eContents().get(22);
		private final Group cGroup_50 = (Group)cAlternatives.eContents().get(50);
		private final Keyword cWheneverKeyword_50_0 = (Keyword)cGroup_50.eContents().get(0);
		private final Keyword cItKeyword_50_1 = (Keyword)cGroup_50.eContents().get(1);
		private final Keyword cIsKeyword_50_2 = (Keyword)cGroup_50.eContents().get(2);
		private final Keyword cNotKeyword_50_3 = (Keyword)cGroup_50.eContents().get(3);
		private final Assignment cRelAssignment_50_4 = (Assignment)cGroup_50.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_50_4_0 = (RuleCall)cRelAssignment_50_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_50_5 = (RuleCall)cGroup_50.eContents().get(5);
		private final Assignment cFinAssignment_50_6 = (Assignment)cGroup_50.eContents().get(6);
		private final RuleCall cFinExprParserRuleCall_50_6_0 = (RuleCall)cFinAssignment_50_6.eContents().get(0);
		private final Keyword cWillKeyword_50_7 = (Keyword)cGroup_50.eContents().get(7);
		private final Keyword cProbablyKeyword_50_8 = (Keyword)cGroup_50.eContents().get(8);
		private final Keyword cComeKeyword_50_9 = (Keyword)cGroup_50.eContents().get(9);
		private final RuleCall cCommaParserRuleCall_50_10 = (RuleCall)cGroup_50.eContents().get(10);
		private final Keyword cAndKeyword_50_11 = (Keyword)cGroup_50.eContents().get(11);
		private final Keyword cFromKeyword_50_12 = (Keyword)cGroup_50.eContents().get(12);
		private final Keyword cThatKeyword_50_13 = (Keyword)cGroup_50.eContents().get(13);
		private final Keyword cMomentKeyword_50_14 = (Keyword)cGroup_50.eContents().get(14);
		private final Keyword cThereKeyword_50_15 = (Keyword)cGroup_50.eContents().get(15);
		private final Keyword cWillKeyword_50_16 = (Keyword)cGroup_50.eContents().get(16);
		private final Keyword cBeKeyword_50_17 = (Keyword)cGroup_50.eContents().get(17);
		private final Assignment cNotdelAssignment_50_18 = (Assignment)cGroup_50.eContents().get(18);
		private final RuleCall cNotdelExprParserRuleCall_50_18_0 = (RuleCall)cNotdelAssignment_50_18.eContents().get(0);
		private final Keyword cUntilKeyword_50_19 = (Keyword)cGroup_50.eContents().get(19);
		private final Keyword cMaybeKeyword_50_20 = (Keyword)cGroup_50.eContents().get(20);
		private final Assignment cRel2Assignment_50_21 = (Assignment)cGroup_50.eContents().get(21);
		private final RuleCall cRel2ExprParserRuleCall_50_21_0 = (RuleCall)cRel2Assignment_50_21.eContents().get(0);
		private final Keyword cOrKeyword_50_22 = (Keyword)cGroup_50.eContents().get(22);
		private final Assignment cReaAssignment_50_23 = (Assignment)cGroup_50.eContents().get(23);
		private final RuleCall cReaExprParserRuleCall_50_23_0 = (RuleCall)cReaAssignment_50_23.eContents().get(0);
		private final Keyword cHappensKeyword_50_24 = (Keyword)cGroup_50.eContents().get(24);
		private final Group cGroup_51 = (Group)cAlternatives.eContents().get(51);
		private final Keyword cWheneverKeyword_51_0 = (Keyword)cGroup_51.eContents().get(0);
		private final Keyword cNotKeyword_51_1 = (Keyword)cGroup_51.eContents().get(1);
		private final Assignment cRelAssignment_51_2 = (Assignment)cGroup_51.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_51_2_0 = (RuleCall)cRelAssignment_51_2.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_51_3 = (RuleCall)cGroup_51.eContents().get(3);
		private final Keyword cThenKeyword_51_4 = (Keyword)cGroup_51.eContents().get(4);
		private final Assignment cInvAssignment_51_5 = (Assignment)cGroup_51.eContents().get(5);
		private final RuleCall cInvExprParserRuleCall_51_5_0 = (RuleCall)cInvAssignment_51_5.eContents().get(0);
		private final Keyword cAndKeyword_51_6 = (Keyword)cGroup_51.eContents().get(6);
		private final Keyword cNotKeyword_51_7 = (Keyword)cGroup_51.eContents().get(7);
		private final Assignment cFinAssignment_51_8 = (Assignment)cGroup_51.eContents().get(8);
		private final RuleCall cFinExprParserRuleCall_51_8_0 = (RuleCall)cFinAssignment_51_8.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_51_9 = (RuleCall)cGroup_51.eContents().get(9);
		private final Keyword cUntilKeyword_51_10 = (Keyword)cGroup_51.eContents().get(10);
		private final Keyword cPerhapsKeyword_51_11 = (Keyword)cGroup_51.eContents().get(11);
		private final Assignment cFin2Assignment_51_12 = (Assignment)cGroup_51.eContents().get(12);
		private final RuleCall cFin2ExprParserRuleCall_51_12_0 = (RuleCall)cFin2Assignment_51_12.eContents().get(0);
		private final Keyword cHappensKeyword_51_13 = (Keyword)cGroup_51.eContents().get(13);
		private final RuleCall cCommaParserRuleCall_51_14 = (RuleCall)cGroup_51.eContents().get(14);
		private final Keyword cAndKeyword_51_15 = (Keyword)cGroup_51.eContents().get(15);
		private final Keyword cFromKeyword_51_16 = (Keyword)cGroup_51.eContents().get(16);
		private final Keyword cThatKeyword_51_17 = (Keyword)cGroup_51.eContents().get(17);
		private final Keyword cMomentKeyword_51_18 = (Keyword)cGroup_51.eContents().get(18);
		private final RuleCall cCommaParserRuleCall_51_19 = (RuleCall)cGroup_51.eContents().get(19);
		private final Assignment cInv2Assignment_51_20 = (Assignment)cGroup_51.eContents().get(20);
		private final RuleCall cInv2ExprParserRuleCall_51_20_0 = (RuleCall)cInv2Assignment_51_20.eContents().get(0);
		private final Keyword cWillKeyword_51_21 = (Keyword)cGroup_51.eContents().get(21);
		private final Keyword cBeKeyword_51_22 = (Keyword)cGroup_51.eContents().get(22);
		private final RuleCall cCommaParserRuleCall_51_23 = (RuleCall)cGroup_51.eContents().get(23);
		private final Keyword cUntilKeyword_51_24 = (Keyword)cGroup_51.eContents().get(24);
		private final Keyword cPerhapsKeyword_51_25 = (Keyword)cGroup_51.eContents().get(25);
		private final Assignment cRel2Assignment_51_26 = (Assignment)cGroup_51.eContents().get(26);
		private final RuleCall cRel2ExprParserRuleCall_51_26_0 = (RuleCall)cRel2Assignment_51_26.eContents().get(0);
		private final Keyword cHappensKeyword_51_27 = (Keyword)cGroup_51.eContents().get(27);
		private final Group cGroup_52 = (Group)cAlternatives.eContents().get(52);
		private final Keyword cWheneverKeyword_52_0 = (Keyword)cGroup_52.eContents().get(0);
		private final Keyword cItKeyword_52_1 = (Keyword)cGroup_52.eContents().get(1);
		private final Keyword cIsKeyword_52_2 = (Keyword)cGroup_52.eContents().get(2);
		private final Keyword cNotKeyword_52_3 = (Keyword)cGroup_52.eContents().get(3);
		private final Assignment cRelAssignment_52_4 = (Assignment)cGroup_52.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_52_4_0 = (RuleCall)cRelAssignment_52_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_52_5 = (RuleCall)cGroup_52.eContents().get(5);
		private final Keyword cThenKeyword_52_6 = (Keyword)cGroup_52.eContents().get(6);
		private final Assignment cInvAssignment_52_7 = (Assignment)cGroup_52.eContents().get(7);
		private final RuleCall cInvExprParserRuleCall_52_7_0 = (RuleCall)cInvAssignment_52_7.eContents().get(0);
		private final Keyword cAndKeyword_52_8 = (Keyword)cGroup_52.eContents().get(8);
		private final Keyword cNotKeyword_52_9 = (Keyword)cGroup_52.eContents().get(9);
		private final Assignment cFinAssignment_52_10 = (Assignment)cGroup_52.eContents().get(10);
		private final RuleCall cFinExprParserRuleCall_52_10_0 = (RuleCall)cFinAssignment_52_10.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_52_11 = (RuleCall)cGroup_52.eContents().get(11);
		private final Keyword cUntilKeyword_52_12 = (Keyword)cGroup_52.eContents().get(12);
		private final Keyword cPerhapsKeyword_52_13 = (Keyword)cGroup_52.eContents().get(13);
		private final Assignment cFin2Assignment_52_14 = (Assignment)cGroup_52.eContents().get(14);
		private final RuleCall cFin2ExprParserRuleCall_52_14_0 = (RuleCall)cFin2Assignment_52_14.eContents().get(0);
		private final Keyword cHappensKeyword_52_15 = (Keyword)cGroup_52.eContents().get(15);
		private final RuleCall cCommaParserRuleCall_52_16 = (RuleCall)cGroup_52.eContents().get(16);
		private final Keyword cAndKeyword_52_17 = (Keyword)cGroup_52.eContents().get(17);
		private final Keyword cFromKeyword_52_18 = (Keyword)cGroup_52.eContents().get(18);
		private final Keyword cThatKeyword_52_19 = (Keyword)cGroup_52.eContents().get(19);
		private final Keyword cMomentKeyword_52_20 = (Keyword)cGroup_52.eContents().get(20);
		private final RuleCall cCommaParserRuleCall_52_21 = (RuleCall)cGroup_52.eContents().get(21);
		private final Assignment cInv2Assignment_52_22 = (Assignment)cGroup_52.eContents().get(22);
		private final RuleCall cInv2ExprParserRuleCall_52_22_0 = (RuleCall)cInv2Assignment_52_22.eContents().get(0);
		private final Keyword cWillKeyword_52_23 = (Keyword)cGroup_52.eContents().get(23);
		private final Keyword cBeKeyword_52_24 = (Keyword)cGroup_52.eContents().get(24);
		private final RuleCall cCommaParserRuleCall_52_25 = (RuleCall)cGroup_52.eContents().get(25);
		private final Keyword cUntilKeyword_52_26 = (Keyword)cGroup_52.eContents().get(26);
		private final Keyword cPerhapsKeyword_52_27 = (Keyword)cGroup_52.eContents().get(27);
		private final Keyword cItKeyword_52_28 = (Keyword)cGroup_52.eContents().get(28);
		private final Keyword cIsKeyword_52_29 = (Keyword)cGroup_52.eContents().get(29);
		private final Assignment cRel2Assignment_52_30 = (Assignment)cGroup_52.eContents().get(30);
		private final RuleCall cRel2ExprParserRuleCall_52_30_0 = (RuleCall)cRel2Assignment_52_30.eContents().get(0);
		private final Keyword cOrKeyword_52_31 = (Keyword)cGroup_52.eContents().get(31);
		private final Assignment cRea2Assignment_52_32 = (Assignment)cGroup_52.eContents().get(32);
		private final RuleCall cRea2ExprParserRuleCall_52_32_0 = (RuleCall)cRea2Assignment_52_32.eContents().get(0);
		private final Keyword cWithKeyword_52_33 = (Keyword)cGroup_52.eContents().get(33);
		private final Assignment cInv3Assignment_52_34 = (Assignment)cGroup_52.eContents().get(34);
		private final RuleCall cInv3ExprParserRuleCall_52_34_0 = (RuleCall)cInv3Assignment_52_34.eContents().get(0);
		private final Keyword cPreservedKeyword_52_35 = (Keyword)cGroup_52.eContents().get(35);
		private final Group cGroup_53 = (Group)cAlternatives.eContents().get(53);
		private final Keyword cWheneverKeyword_53_0 = (Keyword)cGroup_53.eContents().get(0);
		private final Keyword cItKeyword_53_1 = (Keyword)cGroup_53.eContents().get(1);
		private final Keyword cIsKeyword_53_2 = (Keyword)cGroup_53.eContents().get(2);
		private final Keyword cNotKeyword_53_3 = (Keyword)cGroup_53.eContents().get(3);
		private final Assignment cRelAssignment_53_4 = (Assignment)cGroup_53.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_53_4_0 = (RuleCall)cRelAssignment_53_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_53_5 = (RuleCall)cGroup_53.eContents().get(5);
		private final Keyword cItKeyword_53_6 = (Keyword)cGroup_53.eContents().get(6);
		private final Keyword cIsKeyword_53_7 = (Keyword)cGroup_53.eContents().get(7);
		private final Assignment cInvAssignment_53_8 = (Assignment)cGroup_53.eContents().get(8);
		private final RuleCall cInvExprParserRuleCall_53_8_0 = (RuleCall)cInvAssignment_53_8.eContents().get(0);
		private final Keyword cAndKeyword_53_9 = (Keyword)cGroup_53.eContents().get(9);
		private final Keyword cNotKeyword_53_10 = (Keyword)cGroup_53.eContents().get(10);
		private final Assignment cFinAssignment_53_11 = (Assignment)cGroup_53.eContents().get(11);
		private final RuleCall cFinExprParserRuleCall_53_11_0 = (RuleCall)cFinAssignment_53_11.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_53_12 = (RuleCall)cGroup_53.eContents().get(12);
		private final Keyword cUntilKeyword_53_13 = (Keyword)cGroup_53.eContents().get(13);
		private final Keyword cPerhapsKeyword_53_14 = (Keyword)cGroup_53.eContents().get(14);
		private final Assignment cFin2Assignment_53_15 = (Assignment)cGroup_53.eContents().get(15);
		private final RuleCall cFin2ExprParserRuleCall_53_15_0 = (RuleCall)cFin2Assignment_53_15.eContents().get(0);
		private final Keyword cHappensKeyword_53_16 = (Keyword)cGroup_53.eContents().get(16);
		private final RuleCall cCommaParserRuleCall_53_17 = (RuleCall)cGroup_53.eContents().get(17);
		private final Keyword cAndKeyword_53_18 = (Keyword)cGroup_53.eContents().get(18);
		private final Keyword cFromKeyword_53_19 = (Keyword)cGroup_53.eContents().get(19);
		private final Keyword cThatKeyword_53_20 = (Keyword)cGroup_53.eContents().get(20);
		private final Keyword cMomentKeyword_53_21 = (Keyword)cGroup_53.eContents().get(21);
		private final RuleCall cCommaParserRuleCall_53_22 = (RuleCall)cGroup_53.eContents().get(22);
		private final Assignment cInv2Assignment_53_23 = (Assignment)cGroup_53.eContents().get(23);
		private final RuleCall cInv2ExprParserRuleCall_53_23_0 = (RuleCall)cInv2Assignment_53_23.eContents().get(0);
		private final Keyword cAndKeyword_53_24 = (Keyword)cGroup_53.eContents().get(24);
		private final Assignment cNotdelAssignment_53_25 = (Assignment)cGroup_53.eContents().get(25);
		private final RuleCall cNotdelExprParserRuleCall_53_25_0 = (RuleCall)cNotdelAssignment_53_25.eContents().get(0);
		private final Keyword cWillKeyword_53_26 = (Keyword)cGroup_53.eContents().get(26);
		private final Keyword cBeKeyword_53_27 = (Keyword)cGroup_53.eContents().get(27);
		private final RuleCall cCommaParserRuleCall_53_28 = (RuleCall)cGroup_53.eContents().get(28);
		private final Keyword cUntilKeyword_53_29 = (Keyword)cGroup_53.eContents().get(29);
		private final Keyword cPerhapsKeyword_53_30 = (Keyword)cGroup_53.eContents().get(30);
		private final Assignment cRel2Assignment_53_31 = (Assignment)cGroup_53.eContents().get(31);
		private final RuleCall cRel2ExprParserRuleCall_53_31_0 = (RuleCall)cRel2Assignment_53_31.eContents().get(0);
		private final Group cGroup_54 = (Group)cAlternatives.eContents().get(54);
		private final Keyword cWheneverKeyword_54_0 = (Keyword)cGroup_54.eContents().get(0);
		private final Keyword cItKeyword_54_1 = (Keyword)cGroup_54.eContents().get(1);
		private final Keyword cIsKeyword_54_2 = (Keyword)cGroup_54.eContents().get(2);
		private final Keyword cNotKeyword_54_3 = (Keyword)cGroup_54.eContents().get(3);
		private final Assignment cRelAssignment_54_4 = (Assignment)cGroup_54.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_54_4_0 = (RuleCall)cRelAssignment_54_4.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_54_5 = (RuleCall)cGroup_54.eContents().get(5);
		private final Keyword cItKeyword_54_6 = (Keyword)cGroup_54.eContents().get(6);
		private final Keyword cIsKeyword_54_7 = (Keyword)cGroup_54.eContents().get(7);
		private final Assignment cInvAssignment_54_8 = (Assignment)cGroup_54.eContents().get(8);
		private final RuleCall cInvExprParserRuleCall_54_8_0 = (RuleCall)cInvAssignment_54_8.eContents().get(0);
		private final Keyword cAndKeyword_54_9 = (Keyword)cGroup_54.eContents().get(9);
		private final Keyword cNotKeyword_54_10 = (Keyword)cGroup_54.eContents().get(10);
		private final Assignment cFinAssignment_54_11 = (Assignment)cGroup_54.eContents().get(11);
		private final RuleCall cFinExprParserRuleCall_54_11_0 = (RuleCall)cFinAssignment_54_11.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_54_12 = (RuleCall)cGroup_54.eContents().get(12);
		private final Keyword cUntilKeyword_54_13 = (Keyword)cGroup_54.eContents().get(13);
		private final Keyword cPerhapsKeyword_54_14 = (Keyword)cGroup_54.eContents().get(14);
		private final Assignment cFin2Assignment_54_15 = (Assignment)cGroup_54.eContents().get(15);
		private final RuleCall cFin2ExprParserRuleCall_54_15_0 = (RuleCall)cFin2Assignment_54_15.eContents().get(0);
		private final Keyword cHappensKeyword_54_16 = (Keyword)cGroup_54.eContents().get(16);
		private final RuleCall cCommaParserRuleCall_54_17 = (RuleCall)cGroup_54.eContents().get(17);
		private final Keyword cAndKeyword_54_18 = (Keyword)cGroup_54.eContents().get(18);
		private final Keyword cFromKeyword_54_19 = (Keyword)cGroup_54.eContents().get(19);
		private final Keyword cThatKeyword_54_20 = (Keyword)cGroup_54.eContents().get(20);
		private final Keyword cMomentKeyword_54_21 = (Keyword)cGroup_54.eContents().get(21);
		private final RuleCall cCommaParserRuleCall_54_22 = (RuleCall)cGroup_54.eContents().get(22);
		private final Assignment cInv2Assignment_54_23 = (Assignment)cGroup_54.eContents().get(23);
		private final RuleCall cInv2ExprParserRuleCall_54_23_0 = (RuleCall)cInv2Assignment_54_23.eContents().get(0);
		private final Keyword cAndKeyword_54_24 = (Keyword)cGroup_54.eContents().get(24);
		private final Assignment cNotdelAssignment_54_25 = (Assignment)cGroup_54.eContents().get(25);
		private final RuleCall cNotdelExprParserRuleCall_54_25_0 = (RuleCall)cNotdelAssignment_54_25.eContents().get(0);
		private final Keyword cWillKeyword_54_26 = (Keyword)cGroup_54.eContents().get(26);
		private final Keyword cBeKeyword_54_27 = (Keyword)cGroup_54.eContents().get(27);
		private final RuleCall cCommaParserRuleCall_54_28 = (RuleCall)cGroup_54.eContents().get(28);
		private final Keyword cUntilKeyword_54_29 = (Keyword)cGroup_54.eContents().get(29);
		private final Keyword cPerhapsKeyword_54_30 = (Keyword)cGroup_54.eContents().get(30);
		private final Assignment cRel2Assignment_54_31 = (Assignment)cGroup_54.eContents().get(31);
		private final RuleCall cRel2ExprParserRuleCall_54_31_0 = (RuleCall)cRel2Assignment_54_31.eContents().get(0);
		private final Keyword cOrKeyword_54_32 = (Keyword)cGroup_54.eContents().get(32);
		private final Assignment cReaAssignment_54_33 = (Assignment)cGroup_54.eContents().get(33);
		private final RuleCall cReaExprParserRuleCall_54_33_0 = (RuleCall)cReaAssignment_54_33.eContents().get(0);
		private final Keyword cWithKeyword_54_34 = (Keyword)cGroup_54.eContents().get(34);
		private final Assignment cInv3Assignment_54_35 = (Assignment)cGroup_54.eContents().get(35);
		private final RuleCall cInv3ExprParserRuleCall_54_35_0 = (RuleCall)cInv3Assignment_54_35.eContents().get(0);
		private final Keyword cPreservedKeyword_54_36 = (Keyword)cGroup_54.eContents().get(36);
		private final Group cGroup_55 = (Group)cAlternatives.eContents().get(55);
		private final Keyword cAlwaysKeyword_55_0 = (Keyword)cGroup_55.eContents().get(0);
		private final Keyword cEitherKeyword_55_1 = (Keyword)cGroup_55.eContents().get(1);
		private final Assignment cRelAssignment_55_2 = (Assignment)cGroup_55.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_55_2_0 = (RuleCall)cRelAssignment_55_2.eContents().get(0);
		private final Keyword cOrKeyword_55_3 = (Keyword)cGroup_55.eContents().get(3);
		private final Keyword cMaybeKeyword_55_4 = (Keyword)cGroup_55.eContents().get(4);
		private final Assignment cFinAssignment_55_5 = (Assignment)cGroup_55.eContents().get(5);
		private final RuleCall cFinExprParserRuleCall_55_5_0 = (RuleCall)cFinAssignment_55_5.eContents().get(0);
		private final Keyword cWillKeyword_55_6 = (Keyword)cGroup_55.eContents().get(6);
		private final Keyword cHappenKeyword_55_7 = (Keyword)cGroup_55.eContents().get(7);
		private final RuleCall cCommaParserRuleCall_55_8 = (RuleCall)cGroup_55.eContents().get(8);
		private final Keyword cAndKeyword_55_9 = (Keyword)cGroup_55.eContents().get(9);
		private final Keyword cFromKeyword_55_10 = (Keyword)cGroup_55.eContents().get(10);
		private final Keyword cThatKeyword_55_11 = (Keyword)cGroup_55.eContents().get(11);
		private final Keyword cMomentKeyword_55_12 = (Keyword)cGroup_55.eContents().get(12);
		private final Keyword cThereKeyword_55_13 = (Keyword)cGroup_55.eContents().get(13);
		private final Keyword cWillKeyword_55_14 = (Keyword)cGroup_55.eContents().get(14);
		private final Keyword cBeKeyword_55_15 = (Keyword)cGroup_55.eContents().get(15);
		private final Assignment cNotdelAssignment_55_16 = (Assignment)cGroup_55.eContents().get(16);
		private final RuleCall cNotdelExprParserRuleCall_55_16_0 = (RuleCall)cNotdelAssignment_55_16.eContents().get(0);
		private final Keyword cUntilKeyword_55_17 = (Keyword)cGroup_55.eContents().get(17);
		private final Keyword cMaybeKeyword_55_18 = (Keyword)cGroup_55.eContents().get(18);
		private final Assignment cRel2Assignment_55_19 = (Assignment)cGroup_55.eContents().get(19);
		private final RuleCall cRel2ExprParserRuleCall_55_19_0 = (RuleCall)cRel2Assignment_55_19.eContents().get(0);
		private final Keyword cHappensKeyword_55_20 = (Keyword)cGroup_55.eContents().get(20);
		private final Group cGroup_56 = (Group)cAlternatives.eContents().get(56);
		private final Keyword cItKeyword_56_0 = (Keyword)cGroup_56.eContents().get(0);
		private final Keyword cIsKeyword_56_1 = (Keyword)cGroup_56.eContents().get(1);
		private final Keyword cAlwaysKeyword_56_2 = (Keyword)cGroup_56.eContents().get(2);
		private final Keyword cEitherKeyword_56_3 = (Keyword)cGroup_56.eContents().get(3);
		private final Assignment cRelAssignment_56_4 = (Assignment)cGroup_56.eContents().get(4);
		private final RuleCall cRelExprParserRuleCall_56_4_0 = (RuleCall)cRelAssignment_56_4.eContents().get(0);
		private final Keyword cOrKeyword_56_5 = (Keyword)cGroup_56.eContents().get(5);
		private final Keyword cMaybeKeyword_56_6 = (Keyword)cGroup_56.eContents().get(6);
		private final Assignment cFinAssignment_56_7 = (Assignment)cGroup_56.eContents().get(7);
		private final RuleCall cFinExprParserRuleCall_56_7_0 = (RuleCall)cFinAssignment_56_7.eContents().get(0);
		private final Keyword cHappensKeyword_56_8 = (Keyword)cGroup_56.eContents().get(8);
		private final RuleCall cCommaParserRuleCall_56_9 = (RuleCall)cGroup_56.eContents().get(9);
		private final Keyword cAndKeyword_56_10 = (Keyword)cGroup_56.eContents().get(10);
		private final Keyword cFromKeyword_56_11 = (Keyword)cGroup_56.eContents().get(11);
		private final Keyword cThatKeyword_56_12 = (Keyword)cGroup_56.eContents().get(12);
		private final Keyword cMomentKeyword_56_13 = (Keyword)cGroup_56.eContents().get(13);
		private final Keyword cThereKeyword_56_14 = (Keyword)cGroup_56.eContents().get(14);
		private final Keyword cIsKeyword_56_15 = (Keyword)cGroup_56.eContents().get(15);
		private final Assignment cNotdelAssignment_56_16 = (Assignment)cGroup_56.eContents().get(16);
		private final RuleCall cNotdelExprParserRuleCall_56_16_0 = (RuleCall)cNotdelAssignment_56_16.eContents().get(0);
		private final Keyword cUntilKeyword_56_17 = (Keyword)cGroup_56.eContents().get(17);
		private final Keyword cMaybeKeyword_56_18 = (Keyword)cGroup_56.eContents().get(18);
		private final Assignment cRel2Assignment_56_19 = (Assignment)cGroup_56.eContents().get(19);
		private final RuleCall cRel2ExprParserRuleCall_56_19_0 = (RuleCall)cRel2Assignment_56_19.eContents().get(0);
		private final Keyword cOrKeyword_56_20 = (Keyword)cGroup_56.eContents().get(20);
		private final Assignment cReaAssignment_56_21 = (Assignment)cGroup_56.eContents().get(21);
		private final RuleCall cReaExprParserRuleCall_56_21_0 = (RuleCall)cReaAssignment_56_21.eContents().get(0);
		private final Keyword cHappensKeyword_56_22 = (Keyword)cGroup_56.eContents().get(22);
		private final Group cGroup_57 = (Group)cAlternatives.eContents().get(57);
		private final Keyword cAlwaysKeyword_57_0 = (Keyword)cGroup_57.eContents().get(0);
		private final Keyword cEitherKeyword_57_1 = (Keyword)cGroup_57.eContents().get(1);
		private final Assignment cRelAssignment_57_2 = (Assignment)cGroup_57.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_57_2_0 = (RuleCall)cRelAssignment_57_2.eContents().get(0);
		private final Keyword cOrKeyword_57_3 = (Keyword)cGroup_57.eContents().get(3);
		private final Assignment cInvAssignment_57_4 = (Assignment)cGroup_57.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_57_4_0 = (RuleCall)cInvAssignment_57_4.eContents().get(0);
		private final Keyword cAndKeyword_57_5 = (Keyword)cGroup_57.eContents().get(5);
		private final Keyword cNotKeyword_57_6 = (Keyword)cGroup_57.eContents().get(6);
		private final Assignment cFinAssignment_57_7 = (Assignment)cGroup_57.eContents().get(7);
		private final RuleCall cFinExprParserRuleCall_57_7_0 = (RuleCall)cFinAssignment_57_7.eContents().get(0);
		private final Keyword cUntilKeyword_57_8 = (Keyword)cGroup_57.eContents().get(8);
		private final Keyword cPerhapsKeyword_57_9 = (Keyword)cGroup_57.eContents().get(9);
		private final Assignment cFin2Assignment_57_10 = (Assignment)cGroup_57.eContents().get(10);
		private final RuleCall cFin2ExprParserRuleCall_57_10_0 = (RuleCall)cFin2Assignment_57_10.eContents().get(0);
		private final Keyword cHappensKeyword_57_11 = (Keyword)cGroup_57.eContents().get(11);
		private final Keyword cAndKeyword_57_12 = (Keyword)cGroup_57.eContents().get(12);
		private final Keyword cFromKeyword_57_13 = (Keyword)cGroup_57.eContents().get(13);
		private final Keyword cThatKeyword_57_14 = (Keyword)cGroup_57.eContents().get(14);
		private final Keyword cMomentKeyword_57_15 = (Keyword)cGroup_57.eContents().get(15);
		private final Assignment cInv2Assignment_57_16 = (Assignment)cGroup_57.eContents().get(16);
		private final RuleCall cInv2ExprParserRuleCall_57_16_0 = (RuleCall)cInv2Assignment_57_16.eContents().get(0);
		private final Keyword cWillKeyword_57_17 = (Keyword)cGroup_57.eContents().get(17);
		private final Keyword cBeKeyword_57_18 = (Keyword)cGroup_57.eContents().get(18);
		private final Keyword cUntilKeyword_57_19 = (Keyword)cGroup_57.eContents().get(19);
		private final Keyword cPerhapsKeyword_57_20 = (Keyword)cGroup_57.eContents().get(20);
		private final Assignment cRel2Assignment_57_21 = (Assignment)cGroup_57.eContents().get(21);
		private final RuleCall cRel2ExprParserRuleCall_57_21_0 = (RuleCall)cRel2Assignment_57_21.eContents().get(0);
		private final Keyword cHappensKeyword_57_22 = (Keyword)cGroup_57.eContents().get(22);
		private final Group cGroup_58 = (Group)cAlternatives.eContents().get(58);
		private final Keyword cAlwaysKeyword_58_0 = (Keyword)cGroup_58.eContents().get(0);
		private final Keyword cEitherKeyword_58_1 = (Keyword)cGroup_58.eContents().get(1);
		private final Assignment cRelAssignment_58_2 = (Assignment)cGroup_58.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_58_2_0 = (RuleCall)cRelAssignment_58_2.eContents().get(0);
		private final Keyword cOrKeyword_58_3 = (Keyword)cGroup_58.eContents().get(3);
		private final Assignment cInvAssignment_58_4 = (Assignment)cGroup_58.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_58_4_0 = (RuleCall)cInvAssignment_58_4.eContents().get(0);
		private final Keyword cAndKeyword_58_5 = (Keyword)cGroup_58.eContents().get(5);
		private final Keyword cNotKeyword_58_6 = (Keyword)cGroup_58.eContents().get(6);
		private final Assignment cFinAssignment_58_7 = (Assignment)cGroup_58.eContents().get(7);
		private final RuleCall cFinExprParserRuleCall_58_7_0 = (RuleCall)cFinAssignment_58_7.eContents().get(0);
		private final Keyword cUntilKeyword_58_8 = (Keyword)cGroup_58.eContents().get(8);
		private final Keyword cPerhapsKeyword_58_9 = (Keyword)cGroup_58.eContents().get(9);
		private final Assignment cFin2Assignment_58_10 = (Assignment)cGroup_58.eContents().get(10);
		private final RuleCall cFin2ExprParserRuleCall_58_10_0 = (RuleCall)cFin2Assignment_58_10.eContents().get(0);
		private final Keyword cHappensKeyword_58_11 = (Keyword)cGroup_58.eContents().get(11);
		private final Keyword cAndKeyword_58_12 = (Keyword)cGroup_58.eContents().get(12);
		private final Keyword cFromKeyword_58_13 = (Keyword)cGroup_58.eContents().get(13);
		private final Keyword cThatKeyword_58_14 = (Keyword)cGroup_58.eContents().get(14);
		private final Keyword cMomentKeyword_58_15 = (Keyword)cGroup_58.eContents().get(15);
		private final Assignment cInv2Assignment_58_16 = (Assignment)cGroup_58.eContents().get(16);
		private final RuleCall cInv2ExprParserRuleCall_58_16_0 = (RuleCall)cInv2Assignment_58_16.eContents().get(0);
		private final Keyword cWillKeyword_58_17 = (Keyword)cGroup_58.eContents().get(17);
		private final Keyword cBeKeyword_58_18 = (Keyword)cGroup_58.eContents().get(18);
		private final Keyword cUntilKeyword_58_19 = (Keyword)cGroup_58.eContents().get(19);
		private final Keyword cPerhapsKeyword_58_20 = (Keyword)cGroup_58.eContents().get(20);
		private final Assignment cRel2Assignment_58_21 = (Assignment)cGroup_58.eContents().get(21);
		private final RuleCall cRel2ExprParserRuleCall_58_21_0 = (RuleCall)cRel2Assignment_58_21.eContents().get(0);
		private final Keyword cOrKeyword_58_22 = (Keyword)cGroup_58.eContents().get(22);
		private final Assignment cReaAssignment_58_23 = (Assignment)cGroup_58.eContents().get(23);
		private final RuleCall cReaExprParserRuleCall_58_23_0 = (RuleCall)cReaAssignment_58_23.eContents().get(0);
		private final Keyword cWithKeyword_58_24 = (Keyword)cGroup_58.eContents().get(24);
		private final Assignment cInv3Assignment_58_25 = (Assignment)cGroup_58.eContents().get(25);
		private final RuleCall cInv3ExprParserRuleCall_58_25_0 = (RuleCall)cInv3Assignment_58_25.eContents().get(0);
		private final Keyword cRemainingKeyword_58_26 = (Keyword)cGroup_58.eContents().get(26);
		private final Group cGroup_59 = (Group)cAlternatives.eContents().get(59);
		private final Keyword cAlwaysKeyword_59_0 = (Keyword)cGroup_59.eContents().get(0);
		private final Keyword cEitherKeyword_59_1 = (Keyword)cGroup_59.eContents().get(1);
		private final Assignment cRelAssignment_59_2 = (Assignment)cGroup_59.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_59_2_0 = (RuleCall)cRelAssignment_59_2.eContents().get(0);
		private final Keyword cOrKeyword_59_3 = (Keyword)cGroup_59.eContents().get(3);
		private final Assignment cInvAssignment_59_4 = (Assignment)cGroup_59.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_59_4_0 = (RuleCall)cInvAssignment_59_4.eContents().get(0);
		private final Keyword cAndKeyword_59_5 = (Keyword)cGroup_59.eContents().get(5);
		private final Keyword cNotKeyword_59_6 = (Keyword)cGroup_59.eContents().get(6);
		private final Assignment cFinAssignment_59_7 = (Assignment)cGroup_59.eContents().get(7);
		private final RuleCall cFinExprParserRuleCall_59_7_0 = (RuleCall)cFinAssignment_59_7.eContents().get(0);
		private final Keyword cUntilKeyword_59_8 = (Keyword)cGroup_59.eContents().get(8);
		private final Assignment cFin2Assignment_59_9 = (Assignment)cGroup_59.eContents().get(9);
		private final RuleCall cFin2ExprParserRuleCall_59_9_0 = (RuleCall)cFin2Assignment_59_9.eContents().get(0);
		private final Keyword cMightKeyword_59_10 = (Keyword)cGroup_59.eContents().get(10);
		private final Keyword cHappenKeyword_59_11 = (Keyword)cGroup_59.eContents().get(11);
		private final Keyword cAndKeyword_59_12 = (Keyword)cGroup_59.eContents().get(12);
		private final Keyword cFromKeyword_59_13 = (Keyword)cGroup_59.eContents().get(13);
		private final Keyword cThatKeyword_59_14 = (Keyword)cGroup_59.eContents().get(14);
		private final Keyword cMomentKeyword_59_15 = (Keyword)cGroup_59.eContents().get(15);
		private final Assignment cInv2Assignment_59_16 = (Assignment)cGroup_59.eContents().get(16);
		private final RuleCall cInv2ExprParserRuleCall_59_16_0 = (RuleCall)cInv2Assignment_59_16.eContents().get(0);
		private final Keyword cAndKeyword_59_17 = (Keyword)cGroup_59.eContents().get(17);
		private final Assignment cNotdelAssignment_59_18 = (Assignment)cGroup_59.eContents().get(18);
		private final RuleCall cNotdelExprParserRuleCall_59_18_0 = (RuleCall)cNotdelAssignment_59_18.eContents().get(0);
		private final Keyword cWillKeyword_59_19 = (Keyword)cGroup_59.eContents().get(19);
		private final Keyword cBeKeyword_59_20 = (Keyword)cGroup_59.eContents().get(20);
		private final Keyword cUntilKeyword_59_21 = (Keyword)cGroup_59.eContents().get(21);
		private final Keyword cMaybeKeyword_59_22 = (Keyword)cGroup_59.eContents().get(22);
		private final Assignment cRel2Assignment_59_23 = (Assignment)cGroup_59.eContents().get(23);
		private final RuleCall cRel2ExprParserRuleCall_59_23_0 = (RuleCall)cRel2Assignment_59_23.eContents().get(0);
		private final Keyword cHappensKeyword_59_24 = (Keyword)cGroup_59.eContents().get(24);
		private final Group cGroup_60 = (Group)cAlternatives.eContents().get(60);
		private final Keyword cAlwaysKeyword_60_0 = (Keyword)cGroup_60.eContents().get(0);
		private final Keyword cEitherKeyword_60_1 = (Keyword)cGroup_60.eContents().get(1);
		private final Assignment cRelAssignment_60_2 = (Assignment)cGroup_60.eContents().get(2);
		private final RuleCall cRelExprParserRuleCall_60_2_0 = (RuleCall)cRelAssignment_60_2.eContents().get(0);
		private final Keyword cOrKeyword_60_3 = (Keyword)cGroup_60.eContents().get(3);
		private final Assignment cInvAssignment_60_4 = (Assignment)cGroup_60.eContents().get(4);
		private final RuleCall cInvExprParserRuleCall_60_4_0 = (RuleCall)cInvAssignment_60_4.eContents().get(0);
		private final Keyword cAndKeyword_60_5 = (Keyword)cGroup_60.eContents().get(5);
		private final Keyword cNotKeyword_60_6 = (Keyword)cGroup_60.eContents().get(6);
		private final Assignment cFinAssignment_60_7 = (Assignment)cGroup_60.eContents().get(7);
		private final RuleCall cFinExprParserRuleCall_60_7_0 = (RuleCall)cFinAssignment_60_7.eContents().get(0);
		private final RuleCall cCommaParserRuleCall_60_8 = (RuleCall)cGroup_60.eContents().get(8);
		private final Keyword cUntilKeyword_60_9 = (Keyword)cGroup_60.eContents().get(9);
		private final Keyword cPerhapsKeyword_60_10 = (Keyword)cGroup_60.eContents().get(10);
		private final Assignment cFin2Assignment_60_11 = (Assignment)cGroup_60.eContents().get(11);
		private final RuleCall cFin2ExprParserRuleCall_60_11_0 = (RuleCall)cFin2Assignment_60_11.eContents().get(0);
		private final Keyword cHappensKeyword_60_12 = (Keyword)cGroup_60.eContents().get(12);
		private final Keyword cAndKeyword_60_13 = (Keyword)cGroup_60.eContents().get(13);
		private final Keyword cFromKeyword_60_14 = (Keyword)cGroup_60.eContents().get(14);
		private final Keyword cThatKeyword_60_15 = (Keyword)cGroup_60.eContents().get(15);
		private final Keyword cMomentKeyword_60_16 = (Keyword)cGroup_60.eContents().get(16);
		private final Assignment cInv2Assignment_60_17 = (Assignment)cGroup_60.eContents().get(17);
		private final RuleCall cInv2ExprParserRuleCall_60_17_0 = (RuleCall)cInv2Assignment_60_17.eContents().get(0);
		private final Keyword cAndKeyword_60_18 = (Keyword)cGroup_60.eContents().get(18);
		private final Assignment cNotdelAssignment_60_19 = (Assignment)cGroup_60.eContents().get(19);
		private final RuleCall cNotdelExprParserRuleCall_60_19_0 = (RuleCall)cNotdelAssignment_60_19.eContents().get(0);
		private final Keyword cWillKeyword_60_20 = (Keyword)cGroup_60.eContents().get(20);
		private final Keyword cBeKeyword_60_21 = (Keyword)cGroup_60.eContents().get(21);
		private final RuleCall cCommaParserRuleCall_60_22 = (RuleCall)cGroup_60.eContents().get(22);
		private final Keyword cUntilKeyword_60_23 = (Keyword)cGroup_60.eContents().get(23);
		private final Keyword cPerhapsKeyword_60_24 = (Keyword)cGroup_60.eContents().get(24);
		private final Assignment cRel2Assignment_60_25 = (Assignment)cGroup_60.eContents().get(25);
		private final RuleCall cRel2ExprParserRuleCall_60_25_0 = (RuleCall)cRel2Assignment_60_25.eContents().get(0);
		private final Keyword cOrKeyword_60_26 = (Keyword)cGroup_60.eContents().get(26);
		private final Assignment cReaAssignment_60_27 = (Assignment)cGroup_60.eContents().get(27);
		private final RuleCall cReaExprParserRuleCall_60_27_0 = (RuleCall)cReaAssignment_60_27.eContents().get(0);
		private final Keyword cWithKeyword_60_28 = (Keyword)cGroup_60.eContents().get(28);
		private final Assignment cInv3Assignment_60_29 = (Assignment)cGroup_60.eContents().get(29);
		private final RuleCall cInv3ExprParserRuleCall_60_29_0 = (RuleCall)cInv3Assignment_60_29.eContents().get(0);
		private final Keyword cPreservedKeyword_60_30 = (Keyword)cGroup_60.eContents().get(30);
		
		//Requirement:
		//'if' trig=Expr Comma 'then' inv=Expr |
		//'if' trig=Expr Comma 'then' 'immediately' 'there' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'immediately' 'it' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' 'it' 'will' 'always' 'be' inv=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rel=Expr 'happens' |
		//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'will' 'be' 'for' 'now' Comma 'perhaps' 'not' rel=Expr 'or' rea=Expr 'at' inv2=Expr |
		//'if' trig=Expr Comma 'then' notdel=Expr 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' |
		//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'then' 'immediately' 'there' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' 'perhaps' rel=Expr 'or' fin=Expr 'will' 'happen' 'along' 'with' 'an' 'immediate' rea=Expr |
		//'if' trig=Expr Comma 'then' fin=Expr 'will' 'probably' 'happen' 'and' 'from' 'then' 'on' 'there' 'will' 'always' 'be' notdel=Expr |
		//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'that' 'point' 'on' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr 'occurs' |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' Comma 'keeping' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' Comma 'keeping' inv2=Expr 'and' 'immediate' rea=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr 'and' 'immediately' rea=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved' |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rel2=Expr 'occurs' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea=Expr |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' fin=Expr 'may' 'happen' 'and' 'from' 'then' inv2=Expr 'will' 'be' Comma 'until' 'it' 'may' 'be' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rel2=Expr 'happens' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' Comma 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
		//'always' inv=Expr |
		//'there' 'is' 'always' 'a' rea=Expr |
		//'always' inv=Expr 'and' 'immediately' 'there' 'will' 'be' rea=Expr |
		//'always' 'either' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr |
		//'always' inv=Expr 'or' 'it' 'alternates' 'with' rel=Expr |
		//'always' notdel=Expr 'and' 'maybe' 'occasionally' rel=Expr 'or' rea=Expr |
		//'always' inv=Expr 'and' 'maybe' 'occasionally' rea=Expr |
		//'always' e1=Expr 'and' 'maybe' 'from' 'time' 'to' 'time' e2=Expr 'or' e3=Expr |
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr |
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' Comma 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr Comma 'or' rel=Expr 'happens' |
		//'either' 'it' 'does' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'will' 'always' 'be' notdel=Expr 'from' 'now' |
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'maybe' rea=Expr 'happens' |
		//'always' inv=Expr 'and' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' |
		////inv=Expr 'and' notdel=Expr 'until' 'perhaps' rel=Expr 'happens' Comma 'or' rea=Expr 'keeps' inv=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr |
		//'always' inv=Expr Comma 'and' fin=Expr 'possibly' 'comes' 'with' rea=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr 'and' 'immediate' rea=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' fin2=Expr 'will' 'happen' 'and' 'from' 'now' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr |
		//'always' inv=Expr 'and' 'maybe' fin=Expr 'and' 'then' 'maybe' rea=Expr |
		//'always' inv=Expr 'and' 'possibly' fin=Expr Comma 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens' |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens' |
		//'whenever' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'happens' |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea2=Expr 'with' inv3=Expr 'preserved' |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
		//'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'will' 'happen' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens' |
		//'it' 'is' 'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'happens' Comma 'and' 'from' 'that' 'moment' 'there' 'is' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'remaining' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' fin2=Expr 'might' 'happen' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' 'until' 'maybe' rel2=Expr 'happens' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'if' trig=Expr Comma 'then' inv=Expr |
		//'if' trig=Expr Comma 'then' 'immediately' 'there' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'immediately' 'it' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' 'it' 'will' 'always' 'be' inv=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rel=Expr 'happens' |
		//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'will' 'be' 'for' 'now' Comma 'perhaps' 'not' rel=Expr 'or' rea=Expr 'at' inv2=Expr |
		//'if' trig=Expr Comma 'then' notdel=Expr 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' |
		//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'then' 'immediately' 'there' 'will' 'be' rea=Expr |
		//'if' trig=Expr Comma 'then' 'perhaps' rel=Expr 'or' fin=Expr 'will' 'happen' 'along' 'with' 'an' 'immediate' rea=Expr |
		//'if' trig=Expr Comma 'then' fin=Expr 'will' 'probably' 'happen' 'and' 'from' 'then' 'on' 'there' 'will' 'always' 'be' notdel=Expr |
		//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'that' 'point' 'on' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr 'occurs' |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' Comma 'keeping' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' Comma 'keeping' inv2=Expr 'and' 'immediate' rea=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr 'and' 'immediately' rea=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved' |
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rel2=Expr 'occurs' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea=Expr |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' fin=Expr 'may' 'happen' 'and' 'from' 'then' inv2=Expr 'will' 'be' Comma 'until' 'it' 'may' 'be' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rel2=Expr 'happens' |
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' Comma 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
		//'always' inv=Expr |
		//'there' 'is' 'always' 'a' rea=Expr |
		//'always' inv=Expr 'and' 'immediately' 'there' 'will' 'be' rea=Expr |
		//'always' 'either' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr |
		//'always' inv=Expr 'or' 'it' 'alternates' 'with' rel=Expr |
		//'always' notdel=Expr 'and' 'maybe' 'occasionally' rel=Expr 'or' rea=Expr |
		//'always' inv=Expr 'and' 'maybe' 'occasionally' rea=Expr |
		//'always' e1=Expr 'and' 'maybe' 'from' 'time' 'to' 'time' e2=Expr 'or' e3=Expr |
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr |
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' Comma 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr Comma 'or' rel=Expr 'happens' |
		//'either' 'it' 'does' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'will' 'always' 'be' notdel=Expr 'from' 'now' |
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'maybe' rea=Expr 'happens' |
		//'always' inv=Expr 'and' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' |
		////inv=Expr 'and' notdel=Expr 'until' 'perhaps' rel=Expr 'happens' Comma 'or' rea=Expr 'keeps' inv=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr |
		//'always' inv=Expr Comma 'and' fin=Expr 'possibly' 'comes' 'with' rea=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr 'and' 'immediate' rea=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' fin2=Expr 'will' 'happen' 'and' 'from' 'now' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr |
		//'always' inv=Expr 'and' 'maybe' fin=Expr 'and' 'then' 'maybe' rea=Expr |
		//'always' inv=Expr 'and' 'possibly' fin=Expr Comma 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens' |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens' |
		//'whenever' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'happens' |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea2=Expr 'with' inv3=Expr 'preserved' |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr |
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
		//'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'will' 'happen' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens' |
		//'it' 'is' 'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'happens' Comma 'and' 'from' 'that' 'moment' 'there' 'is' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'remaining' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' fin2=Expr 'might' 'happen' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' 'until' 'maybe' rel2=Expr 'happens' |
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'if' trig=Expr Comma 'then' inv=Expr
		public Group getGroup_0() { return cGroup_0; }
		
		//'if'
		public Keyword getIfKeyword_0_0() { return cIfKeyword_0_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_0_1() { return cTrigAssignment_0_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_0_1_0() { return cTrigExprParserRuleCall_0_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_0_2() { return cCommaParserRuleCall_0_2; }
		
		//'then'
		public Keyword getThenKeyword_0_3() { return cThenKeyword_0_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_0_4() { return cInvAssignment_0_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_0_4_0() { return cInvExprParserRuleCall_0_4_0; }
		
		//'if' trig=Expr Comma 'then' 'immediately' 'there' 'will' 'be' rea=Expr
		public Group getGroup_1() { return cGroup_1; }
		
		//'if'
		public Keyword getIfKeyword_1_0() { return cIfKeyword_1_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_1_1() { return cTrigAssignment_1_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_1_1_0() { return cTrigExprParserRuleCall_1_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_1_2() { return cCommaParserRuleCall_1_2; }
		
		//'then'
		public Keyword getThenKeyword_1_3() { return cThenKeyword_1_3; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_1_4() { return cImmediatelyKeyword_1_4; }
		
		//'there'
		public Keyword getThereKeyword_1_5() { return cThereKeyword_1_5; }
		
		//'will'
		public Keyword getWillKeyword_1_6() { return cWillKeyword_1_6; }
		
		//'be'
		public Keyword getBeKeyword_1_7() { return cBeKeyword_1_7; }
		
		//rea=Expr
		public Assignment getReaAssignment_1_8() { return cReaAssignment_1_8; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_1_8_0() { return cReaExprParserRuleCall_1_8_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'immediately' 'it' 'will' 'be' rea=Expr
		public Group getGroup_2() { return cGroup_2; }
		
		//'if'
		public Keyword getIfKeyword_2_0() { return cIfKeyword_2_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_2_1() { return cTrigAssignment_2_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_2_1_0() { return cTrigExprParserRuleCall_2_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_2_2() { return cCommaParserRuleCall_2_2; }
		
		//'then'
		public Keyword getThenKeyword_2_3() { return cThenKeyword_2_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_2_4() { return cInvAssignment_2_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_2_4_0() { return cInvExprParserRuleCall_2_4_0; }
		
		//'and'
		public Keyword getAndKeyword_2_5() { return cAndKeyword_2_5; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_2_6() { return cImmediatelyKeyword_2_6; }
		
		//'it'
		public Keyword getItKeyword_2_7() { return cItKeyword_2_7; }
		
		//'will'
		public Keyword getWillKeyword_2_8() { return cWillKeyword_2_8; }
		
		//'be'
		public Keyword getBeKeyword_2_9() { return cBeKeyword_2_9; }
		
		//rea=Expr
		public Assignment getReaAssignment_2_10() { return cReaAssignment_2_10; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_2_10_0() { return cReaExprParserRuleCall_2_10_0; }
		
		//'if' trig=Expr Comma 'then' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr
		public Group getGroup_3() { return cGroup_3; }
		
		//'if'
		public Keyword getIfKeyword_3_0() { return cIfKeyword_3_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_3_1() { return cTrigAssignment_3_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_3_1_0() { return cTrigExprParserRuleCall_3_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_3_2() { return cCommaParserRuleCall_3_2; }
		
		//'then'
		public Keyword getThenKeyword_3_3() { return cThenKeyword_3_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_3_4() { return cRelAssignment_3_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_3_4_0() { return cRelExprParserRuleCall_3_4_0; }
		
		//'or'
		public Keyword getOrKeyword_3_5() { return cOrKeyword_3_5; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_3_6() { return cImmediatelyKeyword_3_6; }
		
		//'will'
		public Keyword getWillKeyword_3_7() { return cWillKeyword_3_7; }
		
		//'be'
		public Keyword getBeKeyword_3_8() { return cBeKeyword_3_8; }
		
		//rea=Expr
		public Assignment getReaAssignment_3_9() { return cReaAssignment_3_9; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_3_9_0() { return cReaExprParserRuleCall_3_9_0; }
		
		//'if' trig=Expr Comma 'then' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr
		public Group getGroup_4() { return cGroup_4; }
		
		//'if'
		public Keyword getIfKeyword_4_0() { return cIfKeyword_4_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_4_1() { return cTrigAssignment_4_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_4_1_0() { return cTrigExprParserRuleCall_4_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_4_2() { return cCommaParserRuleCall_4_2; }
		
		//'then'
		public Keyword getThenKeyword_4_3() { return cThenKeyword_4_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_4_4() { return cRelAssignment_4_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_4_4_0() { return cRelExprParserRuleCall_4_4_0; }
		
		//'or'
		public Keyword getOrKeyword_4_5() { return cOrKeyword_4_5; }
		
		//inv=Expr
		public Assignment getInvAssignment_4_6() { return cInvAssignment_4_6; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_4_6_0() { return cInvExprParserRuleCall_4_6_0; }
		
		//'and'
		public Keyword getAndKeyword_4_7() { return cAndKeyword_4_7; }
		
		//'at'
		public Keyword getAtKeyword_4_8() { return cAtKeyword_4_8; }
		
		//'the'
		public Keyword getTheKeyword_4_9() { return cTheKeyword_4_9; }
		
		//'same'
		public Keyword getSameKeyword_4_10() { return cSameKeyword_4_10; }
		
		//'time'
		public Keyword getTimeKeyword_4_11() { return cTimeKeyword_4_11; }
		
		//'it'
		public Keyword getItKeyword_4_12() { return cItKeyword_4_12; }
		
		//'will'
		public Keyword getWillKeyword_4_13() { return cWillKeyword_4_13; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_4_14() { return cImmediatelyKeyword_4_14; }
		
		//'be'
		public Keyword getBeKeyword_4_15() { return cBeKeyword_4_15; }
		
		//rea=Expr
		public Assignment getReaAssignment_4_16() { return cReaAssignment_4_16; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_4_16_0() { return cReaExprParserRuleCall_4_16_0; }
		
		//'if' trig=Expr Comma 'then' 'it' 'will' 'always' 'be' inv=Expr
		public Group getGroup_5() { return cGroup_5; }
		
		//'if'
		public Keyword getIfKeyword_5_0() { return cIfKeyword_5_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_5_1() { return cTrigAssignment_5_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_5_1_0() { return cTrigExprParserRuleCall_5_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_5_2() { return cCommaParserRuleCall_5_2; }
		
		//'then'
		public Keyword getThenKeyword_5_3() { return cThenKeyword_5_3; }
		
		//'it'
		public Keyword getItKeyword_5_4() { return cItKeyword_5_4; }
		
		//'will'
		public Keyword getWillKeyword_5_5() { return cWillKeyword_5_5; }
		
		//'always'
		public Keyword getAlwaysKeyword_5_6() { return cAlwaysKeyword_5_6; }
		
		//'be'
		public Keyword getBeKeyword_5_7() { return cBeKeyword_5_7; }
		
		//inv=Expr
		public Assignment getInvAssignment_5_8() { return cInvAssignment_5_8; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_5_8_0() { return cInvExprParserRuleCall_5_8_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rel=Expr 'happens'
		public Group getGroup_6() { return cGroup_6; }
		
		//'if'
		public Keyword getIfKeyword_6_0() { return cIfKeyword_6_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_6_1() { return cTrigAssignment_6_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_6_1_0() { return cTrigExprParserRuleCall_6_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_6_2() { return cCommaParserRuleCall_6_2; }
		
		//'then'
		public Keyword getThenKeyword_6_3() { return cThenKeyword_6_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_6_4() { return cInvAssignment_6_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_6_4_0() { return cInvExprParserRuleCall_6_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_6_5() { return cCommaParserRuleCall_6_5; }
		
		//'until'
		public Keyword getUntilKeyword_6_6() { return cUntilKeyword_6_6; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_6_7() { return cPerhapsKeyword_6_7; }
		
		//rel=Expr
		public Assignment getRelAssignment_6_8() { return cRelAssignment_6_8; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_6_8_0() { return cRelExprParserRuleCall_6_8_0; }
		
		//'happens'
		public Keyword getHappensKeyword_6_9() { return cHappensKeyword_6_9; }
		
		//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr
		public Group getGroup_7() { return cGroup_7; }
		
		//'if'
		public Keyword getIfKeyword_7_0() { return cIfKeyword_7_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_7_1() { return cTrigAssignment_7_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_7_1_0() { return cTrigExprParserRuleCall_7_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_7_2() { return cCommaParserRuleCall_7_2; }
		
		//'then'
		public Keyword getThenKeyword_7_3() { return cThenKeyword_7_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_7_4() { return cInvAssignment_7_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_7_4_0() { return cInvExprParserRuleCall_7_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_7_5() { return cCommaParserRuleCall_7_5; }
		
		//'until'
		public Keyword getUntilKeyword_7_6() { return cUntilKeyword_7_6; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_7_7() { return cPerhapsKeyword_7_7; }
		
		//rea=Expr
		public Assignment getReaAssignment_7_8() { return cReaAssignment_7_8; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_7_8_0() { return cReaExprParserRuleCall_7_8_0; }
		
		//'happens'
		public Keyword getHappensKeyword_7_9() { return cHappensKeyword_7_9; }
		
		//'to'
		public Keyword getToKeyword_7_10() { return cToKeyword_7_10; }
		
		//'keep'
		public Keyword getKeepKeyword_7_11() { return cKeepKeyword_7_11; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_7_12() { return cInv2Assignment_7_12; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_7_12_0() { return cInv2ExprParserRuleCall_7_12_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'will' 'be' 'for' 'now' Comma 'perhaps' 'not' rel=Expr 'or' rea=Expr 'at' inv2=Expr
		public Group getGroup_8() { return cGroup_8; }
		
		//'if'
		public Keyword getIfKeyword_8_0() { return cIfKeyword_8_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_8_1() { return cTrigAssignment_8_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_8_1_0() { return cTrigExprParserRuleCall_8_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_8_2() { return cCommaParserRuleCall_8_2; }
		
		//'then'
		public Keyword getThenKeyword_8_3() { return cThenKeyword_8_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_8_4() { return cInvAssignment_8_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_8_4_0() { return cInvExprParserRuleCall_8_4_0; }
		
		//'will'
		public Keyword getWillKeyword_8_5() { return cWillKeyword_8_5; }
		
		//'be'
		public Keyword getBeKeyword_8_6() { return cBeKeyword_8_6; }
		
		//'for'
		public Keyword getForKeyword_8_7() { return cForKeyword_8_7; }
		
		//'now'
		public Keyword getNowKeyword_8_8() { return cNowKeyword_8_8; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_8_9() { return cCommaParserRuleCall_8_9; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_8_10() { return cPerhapsKeyword_8_10; }
		
		//'not'
		public Keyword getNotKeyword_8_11() { return cNotKeyword_8_11; }
		
		//rel=Expr
		public Assignment getRelAssignment_8_12() { return cRelAssignment_8_12; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_8_12_0() { return cRelExprParserRuleCall_8_12_0; }
		
		//'or'
		public Keyword getOrKeyword_8_13() { return cOrKeyword_8_13; }
		
		//rea=Expr
		public Assignment getReaAssignment_8_14() { return cReaAssignment_8_14; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_8_14_0() { return cReaExprParserRuleCall_8_14_0; }
		
		//'at'
		public Keyword getAtKeyword_8_15() { return cAtKeyword_8_15; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_8_16() { return cInv2Assignment_8_16; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_8_16_0() { return cInv2ExprParserRuleCall_8_16_0; }
		
		//'if' trig=Expr Comma 'then' notdel=Expr 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens'
		public Group getGroup_9() { return cGroup_9; }
		
		//'if'
		public Keyword getIfKeyword_9_0() { return cIfKeyword_9_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_9_1() { return cTrigAssignment_9_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_9_1_0() { return cTrigExprParserRuleCall_9_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_9_2() { return cCommaParserRuleCall_9_2; }
		
		//'then'
		public Keyword getThenKeyword_9_3() { return cThenKeyword_9_3; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_9_4() { return cNotdelAssignment_9_4; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_9_4_0() { return cNotdelExprParserRuleCall_9_4_0; }
		
		//'until'
		public Keyword getUntilKeyword_9_5() { return cUntilKeyword_9_5; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_9_6() { return cPerhapsKeyword_9_6; }
		
		//rel=Expr
		public Assignment getRelAssignment_9_7() { return cRelAssignment_9_7; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_9_7_0() { return cRelExprParserRuleCall_9_7_0; }
		
		//'or'
		public Keyword getOrKeyword_9_8() { return cOrKeyword_9_8; }
		
		//rea=Expr
		public Assignment getReaAssignment_9_9() { return cReaAssignment_9_9; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_9_9_0() { return cReaExprParserRuleCall_9_9_0; }
		
		//'happens'
		public Keyword getHappensKeyword_9_10() { return cHappensKeyword_9_10; }
		
		//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'then' 'immediately' 'there' 'will' 'be' rea=Expr
		public Group getGroup_10() { return cGroup_10; }
		
		//'if'
		public Keyword getIfKeyword_10_0() { return cIfKeyword_10_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_10_1() { return cTrigAssignment_10_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_10_1_0() { return cTrigExprParserRuleCall_10_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_10_2() { return cCommaParserRuleCall_10_2; }
		
		//'then'
		public Keyword getThenKeyword_10_3() { return cThenKeyword_10_3; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_10_4() { return cPerhapsKeyword_10_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_10_5() { return cFinAssignment_10_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_10_5_0() { return cFinExprParserRuleCall_10_5_0; }
		
		//'will'
		public Keyword getWillKeyword_10_6() { return cWillKeyword_10_6; }
		
		//'happen'
		public Keyword getHappenKeyword_10_7() { return cHappenKeyword_10_7; }
		
		//'and'
		public Keyword getAndKeyword_10_8() { return cAndKeyword_10_8; }
		
		//'then'
		public Keyword getThenKeyword_10_9() { return cThenKeyword_10_9; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_10_10() { return cImmediatelyKeyword_10_10; }
		
		//'there'
		public Keyword getThereKeyword_10_11() { return cThereKeyword_10_11; }
		
		//'will'
		public Keyword getWillKeyword_10_12() { return cWillKeyword_10_12; }
		
		//'be'
		public Keyword getBeKeyword_10_13() { return cBeKeyword_10_13; }
		
		//rea=Expr
		public Assignment getReaAssignment_10_14() { return cReaAssignment_10_14; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_10_14_0() { return cReaExprParserRuleCall_10_14_0; }
		
		//'if' trig=Expr Comma 'then' 'perhaps' rel=Expr 'or' fin=Expr 'will' 'happen' 'along' 'with' 'an' 'immediate' rea=Expr
		public Group getGroup_11() { return cGroup_11; }
		
		//'if'
		public Keyword getIfKeyword_11_0() { return cIfKeyword_11_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_11_1() { return cTrigAssignment_11_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_11_1_0() { return cTrigExprParserRuleCall_11_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_11_2() { return cCommaParserRuleCall_11_2; }
		
		//'then'
		public Keyword getThenKeyword_11_3() { return cThenKeyword_11_3; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_11_4() { return cPerhapsKeyword_11_4; }
		
		//rel=Expr
		public Assignment getRelAssignment_11_5() { return cRelAssignment_11_5; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_11_5_0() { return cRelExprParserRuleCall_11_5_0; }
		
		//'or'
		public Keyword getOrKeyword_11_6() { return cOrKeyword_11_6; }
		
		//fin=Expr
		public Assignment getFinAssignment_11_7() { return cFinAssignment_11_7; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_11_7_0() { return cFinExprParserRuleCall_11_7_0; }
		
		//'will'
		public Keyword getWillKeyword_11_8() { return cWillKeyword_11_8; }
		
		//'happen'
		public Keyword getHappenKeyword_11_9() { return cHappenKeyword_11_9; }
		
		//'along'
		public Keyword getAlongKeyword_11_10() { return cAlongKeyword_11_10; }
		
		//'with'
		public Keyword getWithKeyword_11_11() { return cWithKeyword_11_11; }
		
		//'an'
		public Keyword getAnKeyword_11_12() { return cAnKeyword_11_12; }
		
		//'immediate'
		public Keyword getImmediateKeyword_11_13() { return cImmediateKeyword_11_13; }
		
		//rea=Expr
		public Assignment getReaAssignment_11_14() { return cReaAssignment_11_14; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_11_14_0() { return cReaExprParserRuleCall_11_14_0; }
		
		//'if' trig=Expr Comma 'then' fin=Expr 'will' 'probably' 'happen' 'and' 'from' 'then' 'on' 'there' 'will' 'always' 'be' notdel=Expr
		public Group getGroup_12() { return cGroup_12; }
		
		//'if'
		public Keyword getIfKeyword_12_0() { return cIfKeyword_12_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_12_1() { return cTrigAssignment_12_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_12_1_0() { return cTrigExprParserRuleCall_12_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_12_2() { return cCommaParserRuleCall_12_2; }
		
		//'then'
		public Keyword getThenKeyword_12_3() { return cThenKeyword_12_3; }
		
		//fin=Expr
		public Assignment getFinAssignment_12_4() { return cFinAssignment_12_4; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_12_4_0() { return cFinExprParserRuleCall_12_4_0; }
		
		//'will'
		public Keyword getWillKeyword_12_5() { return cWillKeyword_12_5; }
		
		//'probably'
		public Keyword getProbablyKeyword_12_6() { return cProbablyKeyword_12_6; }
		
		//'happen'
		public Keyword getHappenKeyword_12_7() { return cHappenKeyword_12_7; }
		
		//'and'
		public Keyword getAndKeyword_12_8() { return cAndKeyword_12_8; }
		
		//'from'
		public Keyword getFromKeyword_12_9() { return cFromKeyword_12_9; }
		
		//'then'
		public Keyword getThenKeyword_12_10() { return cThenKeyword_12_10; }
		
		//'on'
		public Keyword getOnKeyword_12_11() { return cOnKeyword_12_11; }
		
		//'there'
		public Keyword getThereKeyword_12_12() { return cThereKeyword_12_12; }
		
		//'will'
		public Keyword getWillKeyword_12_13() { return cWillKeyword_12_13; }
		
		//'always'
		public Keyword getAlwaysKeyword_12_14() { return cAlwaysKeyword_12_14; }
		
		//'be'
		public Keyword getBeKeyword_12_15() { return cBeKeyword_12_15; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_12_16() { return cNotdelAssignment_12_16; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_12_16_0() { return cNotdelExprParserRuleCall_12_16_0; }
		
		//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'that' 'point' 'on' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr 'occurs'
		public Group getGroup_13() { return cGroup_13; }
		
		//'if'
		public Keyword getIfKeyword_13_0() { return cIfKeyword_13_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_13_1() { return cTrigAssignment_13_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_13_1_0() { return cTrigExprParserRuleCall_13_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_13_2() { return cCommaParserRuleCall_13_2; }
		
		//'then'
		public Keyword getThenKeyword_13_3() { return cThenKeyword_13_3; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_13_4() { return cPerhapsKeyword_13_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_13_5() { return cFinAssignment_13_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_13_5_0() { return cFinExprParserRuleCall_13_5_0; }
		
		//'will'
		public Keyword getWillKeyword_13_6() { return cWillKeyword_13_6; }
		
		//'happen'
		public Keyword getHappenKeyword_13_7() { return cHappenKeyword_13_7; }
		
		//'and'
		public Keyword getAndKeyword_13_8() { return cAndKeyword_13_8; }
		
		//'from'
		public Keyword getFromKeyword_13_9() { return cFromKeyword_13_9; }
		
		//'that'
		public Keyword getThatKeyword_13_10() { return cThatKeyword_13_10; }
		
		//'point'
		public Keyword getPointKeyword_13_11() { return cPointKeyword_13_11; }
		
		//'on'
		public Keyword getOnKeyword_13_12() { return cOnKeyword_13_12; }
		
		//'there'
		public Keyword getThereKeyword_13_13() { return cThereKeyword_13_13; }
		
		//'will'
		public Keyword getWillKeyword_13_14() { return cWillKeyword_13_14; }
		
		//'be'
		public Keyword getBeKeyword_13_15() { return cBeKeyword_13_15; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_13_16() { return cNotdelAssignment_13_16; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_13_16_0() { return cNotdelExprParserRuleCall_13_16_0; }
		
		//'until'
		public Keyword getUntilKeyword_13_17() { return cUntilKeyword_13_17; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_13_18() { return cPerhapsKeyword_13_18; }
		
		//rea=Expr
		public Assignment getReaAssignment_13_19() { return cReaAssignment_13_19; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_13_19_0() { return cReaExprParserRuleCall_13_19_0; }
		
		//'occurs'
		public Keyword getOccursKeyword_13_20() { return cOccursKeyword_13_20; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr
		public Group getGroup_14() { return cGroup_14; }
		
		//'if'
		public Keyword getIfKeyword_14_0() { return cIfKeyword_14_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_14_1() { return cTrigAssignment_14_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_14_1_0() { return cTrigExprParserRuleCall_14_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_14_2() { return cCommaParserRuleCall_14_2; }
		
		//'then'
		public Keyword getThenKeyword_14_3() { return cThenKeyword_14_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_14_4() { return cInvAssignment_14_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_14_4_0() { return cInvExprParserRuleCall_14_4_0; }
		
		//'and'
		public Keyword getAndKeyword_14_5() { return cAndKeyword_14_5; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_14_6() { return cNotdelAssignment_14_6; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_14_6_0() { return cNotdelExprParserRuleCall_14_6_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_14_7() { return cCommaParserRuleCall_14_7; }
		
		//'until'
		public Keyword getUntilKeyword_14_8() { return cUntilKeyword_14_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_14_9() { return cPerhapsKeyword_14_9; }
		
		//rea=Expr
		public Assignment getReaAssignment_14_10() { return cReaAssignment_14_10; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_14_10_0() { return cReaExprParserRuleCall_14_10_0; }
		
		//'happens'
		public Keyword getHappensKeyword_14_11() { return cHappensKeyword_14_11; }
		
		//'to'
		public Keyword getToKeyword_14_12() { return cToKeyword_14_12; }
		
		//'keep'
		public Keyword getKeepKeyword_14_13() { return cKeepKeyword_14_13; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_14_14() { return cInv2Assignment_14_14; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_14_14_0() { return cInv2ExprParserRuleCall_14_14_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' Comma 'keeping' inv2=Expr
		public Group getGroup_15() { return cGroup_15; }
		
		//'if'
		public Keyword getIfKeyword_15_0() { return cIfKeyword_15_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_15_1() { return cTrigAssignment_15_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_15_1_0() { return cTrigExprParserRuleCall_15_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_15_2() { return cCommaParserRuleCall_15_2; }
		
		//'then'
		public Keyword getThenKeyword_15_3() { return cThenKeyword_15_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_15_4() { return cInvAssignment_15_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_15_4_0() { return cInvExprParserRuleCall_15_4_0; }
		
		//'and'
		public Keyword getAndKeyword_15_5() { return cAndKeyword_15_5; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_15_6() { return cNotdelAssignment_15_6; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_15_6_0() { return cNotdelExprParserRuleCall_15_6_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_15_7() { return cCommaParserRuleCall_15_7; }
		
		//'until'
		public Keyword getUntilKeyword_15_8() { return cUntilKeyword_15_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_15_9() { return cPerhapsKeyword_15_9; }
		
		//rel=Expr
		public Assignment getRelAssignment_15_10() { return cRelAssignment_15_10; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_15_10_0() { return cRelExprParserRuleCall_15_10_0; }
		
		//'or'
		public Keyword getOrKeyword_15_11() { return cOrKeyword_15_11; }
		
		//rea=Expr
		public Assignment getReaAssignment_15_12() { return cReaAssignment_15_12; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_15_12_0() { return cReaExprParserRuleCall_15_12_0; }
		
		//'happens'
		public Keyword getHappensKeyword_15_13() { return cHappensKeyword_15_13; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_15_14() { return cCommaParserRuleCall_15_14; }
		
		//'keeping'
		public Keyword getKeepingKeyword_15_15() { return cKeepingKeyword_15_15; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_15_16() { return cInv2Assignment_15_16; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_15_16_0() { return cInv2ExprParserRuleCall_15_16_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' 'to' 'keep' inv2=Expr
		public Group getGroup_16() { return cGroup_16; }
		
		//'if'
		public Keyword getIfKeyword_16_0() { return cIfKeyword_16_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_16_1() { return cTrigAssignment_16_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_16_1_0() { return cTrigExprParserRuleCall_16_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_16_2() { return cCommaParserRuleCall_16_2; }
		
		//'then'
		public Keyword getThenKeyword_16_3() { return cThenKeyword_16_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_16_4() { return cInvAssignment_16_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_16_4_0() { return cInvExprParserRuleCall_16_4_0; }
		
		//'and'
		public Keyword getAndKeyword_16_5() { return cAndKeyword_16_5; }
		
		//'not'
		public Keyword getNotKeyword_16_6() { return cNotKeyword_16_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_16_7() { return cNotfinAssignment_16_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_16_7_0() { return cNotfinExprParserRuleCall_16_7_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_16_8() { return cCommaParserRuleCall_16_8; }
		
		//'until'
		public Keyword getUntilKeyword_16_9() { return cUntilKeyword_16_9; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_16_10() { return cPerhapsKeyword_16_10; }
		
		//rel=Expr
		public Assignment getRelAssignment_16_11() { return cRelAssignment_16_11; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_16_11_0() { return cRelExprParserRuleCall_16_11_0; }
		
		//'or'
		public Keyword getOrKeyword_16_12() { return cOrKeyword_16_12; }
		
		//fin=Expr
		public Assignment getFinAssignment_16_13() { return cFinAssignment_16_13; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_16_13_0() { return cFinExprParserRuleCall_16_13_0; }
		
		//'happens'
		public Keyword getHappensKeyword_16_14() { return cHappensKeyword_16_14; }
		
		//'to'
		public Keyword getToKeyword_16_15() { return cToKeyword_16_15; }
		
		//'keep'
		public Keyword getKeepKeyword_16_16() { return cKeepKeyword_16_16; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_16_17() { return cInv2Assignment_16_17; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_16_17_0() { return cInv2ExprParserRuleCall_16_17_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' Comma 'keeping' inv2=Expr 'and' 'immediate' rea=Expr
		public Group getGroup_17() { return cGroup_17; }
		
		//'if'
		public Keyword getIfKeyword_17_0() { return cIfKeyword_17_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_17_1() { return cTrigAssignment_17_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_17_1_0() { return cTrigExprParserRuleCall_17_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_17_2() { return cCommaParserRuleCall_17_2; }
		
		//'then'
		public Keyword getThenKeyword_17_3() { return cThenKeyword_17_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_17_4() { return cInvAssignment_17_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_17_4_0() { return cInvExprParserRuleCall_17_4_0; }
		
		//'and'
		public Keyword getAndKeyword_17_5() { return cAndKeyword_17_5; }
		
		//'not'
		public Keyword getNotKeyword_17_6() { return cNotKeyword_17_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_17_7() { return cNotfinAssignment_17_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_17_7_0() { return cNotfinExprParserRuleCall_17_7_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_17_8() { return cCommaParserRuleCall_17_8; }
		
		//'until'
		public Keyword getUntilKeyword_17_9() { return cUntilKeyword_17_9; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_17_10() { return cPerhapsKeyword_17_10; }
		
		//rel=Expr
		public Assignment getRelAssignment_17_11() { return cRelAssignment_17_11; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_17_11_0() { return cRelExprParserRuleCall_17_11_0; }
		
		//'or'
		public Keyword getOrKeyword_17_12() { return cOrKeyword_17_12; }
		
		//fin=Expr
		public Assignment getFinAssignment_17_13() { return cFinAssignment_17_13; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_17_13_0() { return cFinExprParserRuleCall_17_13_0; }
		
		//'happens'
		public Keyword getHappensKeyword_17_14() { return cHappensKeyword_17_14; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_17_15() { return cCommaParserRuleCall_17_15; }
		
		//'keeping'
		public Keyword getKeepingKeyword_17_16() { return cKeepingKeyword_17_16; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_17_17() { return cInv2Assignment_17_17; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_17_17_0() { return cInv2ExprParserRuleCall_17_17_0; }
		
		//'and'
		public Keyword getAndKeyword_17_18() { return cAndKeyword_17_18; }
		
		//'immediate'
		public Keyword getImmediateKeyword_17_19() { return cImmediateKeyword_17_19; }
		
		//rea=Expr
		public Assignment getReaAssignment_17_20() { return cReaAssignment_17_20; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_17_20_0() { return cReaExprParserRuleCall_17_20_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr
		public Group getGroup_18() { return cGroup_18; }
		
		//'if'
		public Keyword getIfKeyword_18_0() { return cIfKeyword_18_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_18_1() { return cTrigAssignment_18_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_18_1_0() { return cTrigExprParserRuleCall_18_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_18_2() { return cCommaParserRuleCall_18_2; }
		
		//'then'
		public Keyword getThenKeyword_18_3() { return cThenKeyword_18_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_18_4() { return cInvAssignment_18_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_18_4_0() { return cInvExprParserRuleCall_18_4_0; }
		
		//'and'
		public Keyword getAndKeyword_18_5() { return cAndKeyword_18_5; }
		
		//'not'
		public Keyword getNotKeyword_18_6() { return cNotKeyword_18_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_18_7() { return cNotfinAssignment_18_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_18_7_0() { return cNotfinExprParserRuleCall_18_7_0; }
		
		//'until'
		public Keyword getUntilKeyword_18_8() { return cUntilKeyword_18_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_18_9() { return cPerhapsKeyword_18_9; }
		
		//fin=Expr
		public Assignment getFinAssignment_18_10() { return cFinAssignment_18_10; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_18_10_0() { return cFinExprParserRuleCall_18_10_0; }
		
		//'happens'
		public Keyword getHappensKeyword_18_11() { return cHappensKeyword_18_11; }
		
		//'to'
		public Keyword getToKeyword_18_12() { return cToKeyword_18_12; }
		
		//'keep'
		public Keyword getKeepKeyword_18_13() { return cKeepKeyword_18_13; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_18_14() { return cInv2Assignment_18_14; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_18_14_0() { return cInv2ExprParserRuleCall_18_14_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr 'and' 'immediately' rea=Expr
		public Group getGroup_19() { return cGroup_19; }
		
		//'if'
		public Keyword getIfKeyword_19_0() { return cIfKeyword_19_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_19_1() { return cTrigAssignment_19_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_19_1_0() { return cTrigExprParserRuleCall_19_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_19_2() { return cCommaParserRuleCall_19_2; }
		
		//'then'
		public Keyword getThenKeyword_19_3() { return cThenKeyword_19_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_19_4() { return cInvAssignment_19_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_19_4_0() { return cInvExprParserRuleCall_19_4_0; }
		
		//'and'
		public Keyword getAndKeyword_19_5() { return cAndKeyword_19_5; }
		
		//'not'
		public Keyword getNotKeyword_19_6() { return cNotKeyword_19_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_19_7() { return cNotfinAssignment_19_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_19_7_0() { return cNotfinExprParserRuleCall_19_7_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_19_8() { return cCommaParserRuleCall_19_8; }
		
		//'until'
		public Keyword getUntilKeyword_19_9() { return cUntilKeyword_19_9; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_19_10() { return cPerhapsKeyword_19_10; }
		
		//fin=Expr
		public Assignment getFinAssignment_19_11() { return cFinAssignment_19_11; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_19_11_0() { return cFinExprParserRuleCall_19_11_0; }
		
		//'happens'
		public Keyword getHappensKeyword_19_12() { return cHappensKeyword_19_12; }
		
		//'to'
		public Keyword getToKeyword_19_13() { return cToKeyword_19_13; }
		
		//'keep'
		public Keyword getKeepKeyword_19_14() { return cKeepKeyword_19_14; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_19_15() { return cInv2Assignment_19_15; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_19_15_0() { return cInv2ExprParserRuleCall_19_15_0; }
		
		//'and'
		public Keyword getAndKeyword_19_16() { return cAndKeyword_19_16; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_19_17() { return cImmediatelyKeyword_19_17; }
		
		//rea=Expr
		public Assignment getReaAssignment_19_18() { return cReaAssignment_19_18; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_19_18_0() { return cReaExprParserRuleCall_19_18_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr
		public Group getGroup_20() { return cGroup_20; }
		
		//'if'
		public Keyword getIfKeyword_20_0() { return cIfKeyword_20_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_20_1() { return cTrigAssignment_20_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_20_1_0() { return cTrigExprParserRuleCall_20_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_20_2() { return cCommaParserRuleCall_20_2; }
		
		//'then'
		public Keyword getThenKeyword_20_3() { return cThenKeyword_20_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_20_4() { return cInvAssignment_20_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_20_4_0() { return cInvExprParserRuleCall_20_4_0; }
		
		//'and'
		public Keyword getAndKeyword_20_5() { return cAndKeyword_20_5; }
		
		//'not'
		public Keyword getNotKeyword_20_6() { return cNotKeyword_20_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_20_7() { return cNotfinAssignment_20_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_20_7_0() { return cNotfinExprParserRuleCall_20_7_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_20_8() { return cCommaParserRuleCall_20_8; }
		
		//'until'
		public Keyword getUntilKeyword_20_9() { return cUntilKeyword_20_9; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_20_10() { return cPerhapsKeyword_20_10; }
		
		//fin=Expr
		public Assignment getFinAssignment_20_11() { return cFinAssignment_20_11; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_20_11_0() { return cFinExprParserRuleCall_20_11_0; }
		
		//'happens'
		public Keyword getHappensKeyword_20_12() { return cHappensKeyword_20_12; }
		
		//'and'
		public Keyword getAndKeyword_20_13() { return cAndKeyword_20_13; }
		
		//'from'
		public Keyword getFromKeyword_20_14() { return cFromKeyword_20_14; }
		
		//'then'
		public Keyword getThenKeyword_20_15() { return cThenKeyword_20_15; }
		
		//'there'
		public Keyword getThereKeyword_20_16() { return cThereKeyword_20_16; }
		
		//'will'
		public Keyword getWillKeyword_20_17() { return cWillKeyword_20_17; }
		
		//'always'
		public Keyword getAlwaysKeyword_20_18() { return cAlwaysKeyword_20_18; }
		
		//'be'
		public Keyword getBeKeyword_20_19() { return cBeKeyword_20_19; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_20_20() { return cInv2Assignment_20_20; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_20_20_0() { return cInv2ExprParserRuleCall_20_20_0; }
		
		//'and'
		public Keyword getAndKeyword_20_21() { return cAndKeyword_20_21; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_20_22() { return cNotdelAssignment_20_22; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_20_22_0() { return cNotdelExprParserRuleCall_20_22_0; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved'
		public Group getGroup_21() { return cGroup_21; }
		
		//'if'
		public Keyword getIfKeyword_21_0() { return cIfKeyword_21_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_21_1() { return cTrigAssignment_21_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_21_1_0() { return cTrigExprParserRuleCall_21_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_21_2() { return cCommaParserRuleCall_21_2; }
		
		//'then'
		public Keyword getThenKeyword_21_3() { return cThenKeyword_21_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_21_4() { return cInvAssignment_21_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_21_4_0() { return cInvExprParserRuleCall_21_4_0; }
		
		//'and'
		public Keyword getAndKeyword_21_5() { return cAndKeyword_21_5; }
		
		//'not'
		public Keyword getNotKeyword_21_6() { return cNotKeyword_21_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_21_7() { return cNotfinAssignment_21_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_21_7_0() { return cNotfinExprParserRuleCall_21_7_0; }
		
		//'until'
		public Keyword getUntilKeyword_21_8() { return cUntilKeyword_21_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_21_9() { return cPerhapsKeyword_21_9; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_21_10() { return cFin2Assignment_21_10; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_21_10_0() { return cFin2ExprParserRuleCall_21_10_0; }
		
		//'happens'
		public Keyword getHappensKeyword_21_11() { return cHappensKeyword_21_11; }
		
		//'and'
		public Keyword getAndKeyword_21_12() { return cAndKeyword_21_12; }
		
		//'from'
		public Keyword getFromKeyword_21_13() { return cFromKeyword_21_13; }
		
		//'then'
		public Keyword getThenKeyword_21_14() { return cThenKeyword_21_14; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_21_15() { return cInv2Assignment_21_15; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_21_15_0() { return cInv2ExprParserRuleCall_21_15_0; }
		
		//'will'
		public Keyword getWillKeyword_21_16() { return cWillKeyword_21_16; }
		
		//'be'
		public Keyword getBeKeyword_21_17() { return cBeKeyword_21_17; }
		
		//'until'
		public Keyword getUntilKeyword_21_18() { return cUntilKeyword_21_18; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_21_19() { return cPerhapsKeyword_21_19; }
		
		//rea=Expr
		public Assignment getReaAssignment_21_20() { return cReaAssignment_21_20; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_21_20_0() { return cReaExprParserRuleCall_21_20_0; }
		
		//'happens'
		public Keyword getHappensKeyword_21_21() { return cHappensKeyword_21_21; }
		
		//'with'
		public Keyword getWithKeyword_21_22() { return cWithKeyword_21_22; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_21_23() { return cInv3Assignment_21_23; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_21_23_0() { return cInv3ExprParserRuleCall_21_23_0; }
		
		//'saved'
		public Keyword getSavedKeyword_21_24() { return cSavedKeyword_21_24; }
		
		//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved'
		public Group getGroup_22() { return cGroup_22; }
		
		//'if'
		public Keyword getIfKeyword_22_0() { return cIfKeyword_22_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_22_1() { return cTrigAssignment_22_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_22_1_0() { return cTrigExprParserRuleCall_22_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_22_2() { return cCommaParserRuleCall_22_2; }
		
		//'then'
		public Keyword getThenKeyword_22_3() { return cThenKeyword_22_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_22_4() { return cInvAssignment_22_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_22_4_0() { return cInvExprParserRuleCall_22_4_0; }
		
		//'and'
		public Keyword getAndKeyword_22_5() { return cAndKeyword_22_5; }
		
		//'not'
		public Keyword getNotKeyword_22_6() { return cNotKeyword_22_6; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_22_7() { return cNotfinAssignment_22_7; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_22_7_0() { return cNotfinExprParserRuleCall_22_7_0; }
		
		//'until'
		public Keyword getUntilKeyword_22_8() { return cUntilKeyword_22_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_22_9() { return cPerhapsKeyword_22_9; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_22_10() { return cFin2Assignment_22_10; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_22_10_0() { return cFin2ExprParserRuleCall_22_10_0; }
		
		//'happens'
		public Keyword getHappensKeyword_22_11() { return cHappensKeyword_22_11; }
		
		//'and'
		public Keyword getAndKeyword_22_12() { return cAndKeyword_22_12; }
		
		//'from'
		public Keyword getFromKeyword_22_13() { return cFromKeyword_22_13; }
		
		//'then'
		public Keyword getThenKeyword_22_14() { return cThenKeyword_22_14; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_22_15() { return cInv2Assignment_22_15; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_22_15_0() { return cInv2ExprParserRuleCall_22_15_0; }
		
		//'will'
		public Keyword getWillKeyword_22_16() { return cWillKeyword_22_16; }
		
		//'be'
		public Keyword getBeKeyword_22_17() { return cBeKeyword_22_17; }
		
		//'along'
		public Keyword getAlongKeyword_22_18() { return cAlongKeyword_22_18; }
		
		//'with'
		public Keyword getWithKeyword_22_19() { return cWithKeyword_22_19; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_22_20() { return cNotdelAssignment_22_20; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_22_20_0() { return cNotdelExprParserRuleCall_22_20_0; }
		
		//'until'
		public Keyword getUntilKeyword_22_21() { return cUntilKeyword_22_21; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_22_22() { return cPerhapsKeyword_22_22; }
		
		//rea=Expr
		public Assignment getReaAssignment_22_23() { return cReaAssignment_22_23; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_22_23_0() { return cReaExprParserRuleCall_22_23_0; }
		
		//'happens'
		public Keyword getHappensKeyword_22_24() { return cHappensKeyword_22_24; }
		
		//'with'
		public Keyword getWithKeyword_22_25() { return cWithKeyword_22_25; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_22_26() { return cInv3Assignment_22_26; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_22_26_0() { return cInv3ExprParserRuleCall_22_26_0; }
		
		//'saved'
		public Keyword getSavedKeyword_22_27() { return cSavedKeyword_22_27; }
		
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rel2=Expr 'occurs'
		public Group getGroup_23() { return cGroup_23; }
		
		//'if'
		public Keyword getIfKeyword_23_0() { return cIfKeyword_23_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_23_1() { return cTrigAssignment_23_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_23_1_0() { return cTrigExprParserRuleCall_23_1_0; }
		
		//'and'
		public Keyword getAndKeyword_23_2() { return cAndKeyword_23_2; }
		
		//'not'
		public Keyword getNotKeyword_23_3() { return cNotKeyword_23_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_23_4() { return cRelAssignment_23_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_23_4_0() { return cRelExprParserRuleCall_23_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_23_5() { return cCommaParserRuleCall_23_5; }
		
		//'then'
		public Keyword getThenKeyword_23_6() { return cThenKeyword_23_6; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_23_7() { return cPerhapsKeyword_23_7; }
		
		//fin=Expr
		public Assignment getFinAssignment_23_8() { return cFinAssignment_23_8; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_23_8_0() { return cFinExprParserRuleCall_23_8_0; }
		
		//'will'
		public Keyword getWillKeyword_23_9() { return cWillKeyword_23_9; }
		
		//'happen'
		public Keyword getHappenKeyword_23_10() { return cHappenKeyword_23_10; }
		
		//'and'
		public Keyword getAndKeyword_23_11() { return cAndKeyword_23_11; }
		
		//'from'
		public Keyword getFromKeyword_23_12() { return cFromKeyword_23_12; }
		
		//'then'
		public Keyword getThenKeyword_23_13() { return cThenKeyword_23_13; }
		
		//'there'
		public Keyword getThereKeyword_23_14() { return cThereKeyword_23_14; }
		
		//'will'
		public Keyword getWillKeyword_23_15() { return cWillKeyword_23_15; }
		
		//'be'
		public Keyword getBeKeyword_23_16() { return cBeKeyword_23_16; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_23_17() { return cNotdelAssignment_23_17; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_23_17_0() { return cNotdelExprParserRuleCall_23_17_0; }
		
		//'until'
		public Keyword getUntilKeyword_23_18() { return cUntilKeyword_23_18; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_23_19() { return cPerhapsKeyword_23_19; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_23_20() { return cRel2Assignment_23_20; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_23_20_0() { return cRel2ExprParserRuleCall_23_20_0; }
		
		//'occurs'
		public Keyword getOccursKeyword_23_21() { return cOccursKeyword_23_21; }
		
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea=Expr
		public Group getGroup_24() { return cGroup_24; }
		
		//'if'
		public Keyword getIfKeyword_24_0() { return cIfKeyword_24_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_24_1() { return cTrigAssignment_24_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_24_1_0() { return cTrigExprParserRuleCall_24_1_0; }
		
		//'and'
		public Keyword getAndKeyword_24_2() { return cAndKeyword_24_2; }
		
		//'not'
		public Keyword getNotKeyword_24_3() { return cNotKeyword_24_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_24_4() { return cRelAssignment_24_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_24_4_0() { return cRelExprParserRuleCall_24_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_24_5() { return cCommaParserRuleCall_24_5; }
		
		//'then'
		public Keyword getThenKeyword_24_6() { return cThenKeyword_24_6; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_24_7() { return cPerhapsKeyword_24_7; }
		
		//fin=Expr
		public Assignment getFinAssignment_24_8() { return cFinAssignment_24_8; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_24_8_0() { return cFinExprParserRuleCall_24_8_0; }
		
		//'will'
		public Keyword getWillKeyword_24_9() { return cWillKeyword_24_9; }
		
		//'happen'
		public Keyword getHappenKeyword_24_10() { return cHappenKeyword_24_10; }
		
		//'and'
		public Keyword getAndKeyword_24_11() { return cAndKeyword_24_11; }
		
		//'from'
		public Keyword getFromKeyword_24_12() { return cFromKeyword_24_12; }
		
		//'then'
		public Keyword getThenKeyword_24_13() { return cThenKeyword_24_13; }
		
		//'it'
		public Keyword getItKeyword_24_14() { return cItKeyword_24_14; }
		
		//'will'
		public Keyword getWillKeyword_24_15() { return cWillKeyword_24_15; }
		
		//'be'
		public Keyword getBeKeyword_24_16() { return cBeKeyword_24_16; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_24_17() { return cNotdelAssignment_24_17; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_24_17_0() { return cNotdelExprParserRuleCall_24_17_0; }
		
		//'until'
		public Keyword getUntilKeyword_24_18() { return cUntilKeyword_24_18; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_24_19() { return cPerhapsKeyword_24_19; }
		
		//'it'
		public Keyword getItKeyword_24_20() { return cItKeyword_24_20; }
		
		//'is'
		public Keyword getIsKeyword_24_21() { return cIsKeyword_24_21; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_24_22() { return cRel2Assignment_24_22; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_24_22_0() { return cRel2ExprParserRuleCall_24_22_0; }
		
		//'or'
		public Keyword getOrKeyword_24_23() { return cOrKeyword_24_23; }
		
		//rea=Expr
		public Assignment getReaAssignment_24_24() { return cReaAssignment_24_24; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_24_24_0() { return cReaExprParserRuleCall_24_24_0; }
		
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens'
		public Group getGroup_25() { return cGroup_25; }
		
		//'if'
		public Keyword getIfKeyword_25_0() { return cIfKeyword_25_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_25_1() { return cTrigAssignment_25_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_25_1_0() { return cTrigExprParserRuleCall_25_1_0; }
		
		//'and'
		public Keyword getAndKeyword_25_2() { return cAndKeyword_25_2; }
		
		//'not'
		public Keyword getNotKeyword_25_3() { return cNotKeyword_25_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_25_4() { return cRelAssignment_25_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_25_4_0() { return cRelExprParserRuleCall_25_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_25_5() { return cCommaParserRuleCall_25_5; }
		
		//'then'
		public Keyword getThenKeyword_25_6() { return cThenKeyword_25_6; }
		
		//inv=Expr
		public Assignment getInvAssignment_25_7() { return cInvAssignment_25_7; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_25_7_0() { return cInvExprParserRuleCall_25_7_0; }
		
		//'and'
		public Keyword getAndKeyword_25_8() { return cAndKeyword_25_8; }
		
		//'not'
		public Keyword getNotKeyword_25_9() { return cNotKeyword_25_9; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_25_10() { return cNotfinAssignment_25_10; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_25_10_0() { return cNotfinExprParserRuleCall_25_10_0; }
		
		//'until'
		public Keyword getUntilKeyword_25_11() { return cUntilKeyword_25_11; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_25_12() { return cPerhapsKeyword_25_12; }
		
		//fin=Expr
		public Assignment getFinAssignment_25_13() { return cFinAssignment_25_13; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_25_13_0() { return cFinExprParserRuleCall_25_13_0; }
		
		//'happens'
		public Keyword getHappensKeyword_25_14() { return cHappensKeyword_25_14; }
		
		//'and'
		public Keyword getAndKeyword_25_15() { return cAndKeyword_25_15; }
		
		//'from'
		public Keyword getFromKeyword_25_16() { return cFromKeyword_25_16; }
		
		//'then'
		public Keyword getThenKeyword_25_17() { return cThenKeyword_25_17; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_25_18() { return cInv2Assignment_25_18; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_25_18_0() { return cInv2ExprParserRuleCall_25_18_0; }
		
		//'will'
		public Keyword getWillKeyword_25_19() { return cWillKeyword_25_19; }
		
		//'be'
		public Keyword getBeKeyword_25_20() { return cBeKeyword_25_20; }
		
		//'until'
		public Keyword getUntilKeyword_25_21() { return cUntilKeyword_25_21; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_25_22() { return cPerhapsKeyword_25_22; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_25_23() { return cRel2Assignment_25_23; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_25_23_0() { return cRel2ExprParserRuleCall_25_23_0; }
		
		//'happens'
		public Keyword getHappensKeyword_25_24() { return cHappensKeyword_25_24; }
		
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' fin=Expr 'may' 'happen' 'and' 'from' 'then' inv2=Expr 'will' 'be' Comma 'until' 'it' 'may' 'be' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
		public Group getGroup_26() { return cGroup_26; }
		
		//'if'
		public Keyword getIfKeyword_26_0() { return cIfKeyword_26_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_26_1() { return cTrigAssignment_26_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_26_1_0() { return cTrigExprParserRuleCall_26_1_0; }
		
		//'and'
		public Keyword getAndKeyword_26_2() { return cAndKeyword_26_2; }
		
		//'not'
		public Keyword getNotKeyword_26_3() { return cNotKeyword_26_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_26_4() { return cRelAssignment_26_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_26_4_0() { return cRelExprParserRuleCall_26_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_26_5() { return cCommaParserRuleCall_26_5; }
		
		//'then'
		public Keyword getThenKeyword_26_6() { return cThenKeyword_26_6; }
		
		//inv=Expr
		public Assignment getInvAssignment_26_7() { return cInvAssignment_26_7; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_26_7_0() { return cInvExprParserRuleCall_26_7_0; }
		
		//'and'
		public Keyword getAndKeyword_26_8() { return cAndKeyword_26_8; }
		
		//'not'
		public Keyword getNotKeyword_26_9() { return cNotKeyword_26_9; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_26_10() { return cNotfinAssignment_26_10; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_26_10_0() { return cNotfinExprParserRuleCall_26_10_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_26_11() { return cCommaParserRuleCall_26_11; }
		
		//'until'
		public Keyword getUntilKeyword_26_12() { return cUntilKeyword_26_12; }
		
		//fin=Expr
		public Assignment getFinAssignment_26_13() { return cFinAssignment_26_13; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_26_13_0() { return cFinExprParserRuleCall_26_13_0; }
		
		//'may'
		public Keyword getMayKeyword_26_14() { return cMayKeyword_26_14; }
		
		//'happen'
		public Keyword getHappenKeyword_26_15() { return cHappenKeyword_26_15; }
		
		//'and'
		public Keyword getAndKeyword_26_16() { return cAndKeyword_26_16; }
		
		//'from'
		public Keyword getFromKeyword_26_17() { return cFromKeyword_26_17; }
		
		//'then'
		public Keyword getThenKeyword_26_18() { return cThenKeyword_26_18; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_26_19() { return cInv2Assignment_26_19; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_26_19_0() { return cInv2ExprParserRuleCall_26_19_0; }
		
		//'will'
		public Keyword getWillKeyword_26_20() { return cWillKeyword_26_20; }
		
		//'be'
		public Keyword getBeKeyword_26_21() { return cBeKeyword_26_21; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_26_22() { return cCommaParserRuleCall_26_22; }
		
		//'until'
		public Keyword getUntilKeyword_26_23() { return cUntilKeyword_26_23; }
		
		//'it'
		public Keyword getItKeyword_26_24() { return cItKeyword_26_24; }
		
		//'may'
		public Keyword getMayKeyword_26_25() { return cMayKeyword_26_25; }
		
		//'be'
		public Keyword getBeKeyword_26_26() { return cBeKeyword_26_26; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_26_27() { return cRel2Assignment_26_27; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_26_27_0() { return cRel2ExprParserRuleCall_26_27_0; }
		
		//'or'
		public Keyword getOrKeyword_26_28() { return cOrKeyword_26_28; }
		
		//rea=Expr
		public Assignment getReaAssignment_26_29() { return cReaAssignment_26_29; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_26_29_0() { return cReaExprParserRuleCall_26_29_0; }
		
		//'with'
		public Keyword getWithKeyword_26_30() { return cWithKeyword_26_30; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_26_31() { return cInv3Assignment_26_31; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_26_31_0() { return cInv3ExprParserRuleCall_26_31_0; }
		
		//'preserved'
		public Keyword getPreservedKeyword_26_32() { return cPreservedKeyword_26_32; }
		
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rel2=Expr 'happens'
		public Group getGroup_27() { return cGroup_27; }
		
		//'if'
		public Keyword getIfKeyword_27_0() { return cIfKeyword_27_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_27_1() { return cTrigAssignment_27_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_27_1_0() { return cTrigExprParserRuleCall_27_1_0; }
		
		//'and'
		public Keyword getAndKeyword_27_2() { return cAndKeyword_27_2; }
		
		//'not'
		public Keyword getNotKeyword_27_3() { return cNotKeyword_27_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_27_4() { return cRelAssignment_27_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_27_4_0() { return cRelExprParserRuleCall_27_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_27_5() { return cCommaParserRuleCall_27_5; }
		
		//'then'
		public Keyword getThenKeyword_27_6() { return cThenKeyword_27_6; }
		
		//inv=Expr
		public Assignment getInvAssignment_27_7() { return cInvAssignment_27_7; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_27_7_0() { return cInvExprParserRuleCall_27_7_0; }
		
		//'and'
		public Keyword getAndKeyword_27_8() { return cAndKeyword_27_8; }
		
		//'not'
		public Keyword getNotKeyword_27_9() { return cNotKeyword_27_9; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_27_10() { return cNotfinAssignment_27_10; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_27_10_0() { return cNotfinExprParserRuleCall_27_10_0; }
		
		//'until'
		public Keyword getUntilKeyword_27_11() { return cUntilKeyword_27_11; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_27_12() { return cPerhapsKeyword_27_12; }
		
		//fin=Expr
		public Assignment getFinAssignment_27_13() { return cFinAssignment_27_13; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_27_13_0() { return cFinExprParserRuleCall_27_13_0; }
		
		//'happens'
		public Keyword getHappensKeyword_27_14() { return cHappensKeyword_27_14; }
		
		//'and'
		public Keyword getAndKeyword_27_15() { return cAndKeyword_27_15; }
		
		//'from'
		public Keyword getFromKeyword_27_16() { return cFromKeyword_27_16; }
		
		//'then'
		public Keyword getThenKeyword_27_17() { return cThenKeyword_27_17; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_27_18() { return cInv2Assignment_27_18; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_27_18_0() { return cInv2ExprParserRuleCall_27_18_0; }
		
		//'will'
		public Keyword getWillKeyword_27_19() { return cWillKeyword_27_19; }
		
		//'be'
		public Keyword getBeKeyword_27_20() { return cBeKeyword_27_20; }
		
		//'along'
		public Keyword getAlongKeyword_27_21() { return cAlongKeyword_27_21; }
		
		//'with'
		public Keyword getWithKeyword_27_22() { return cWithKeyword_27_22; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_27_23() { return cNotdelAssignment_27_23; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_27_23_0() { return cNotdelExprParserRuleCall_27_23_0; }
		
		//'until'
		public Keyword getUntilKeyword_27_24() { return cUntilKeyword_27_24; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_27_25() { return cPerhapsKeyword_27_25; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_27_26() { return cRel2Assignment_27_26; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_27_26_0() { return cRel2ExprParserRuleCall_27_26_0; }
		
		//'happens'
		public Keyword getHappensKeyword_27_27() { return cHappensKeyword_27_27; }
		
		//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' Comma 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
		public Group getGroup_28() { return cGroup_28; }
		
		//'if'
		public Keyword getIfKeyword_28_0() { return cIfKeyword_28_0; }
		
		//trig=Expr
		public Assignment getTrigAssignment_28_1() { return cTrigAssignment_28_1; }
		
		//Expr
		public RuleCall getTrigExprParserRuleCall_28_1_0() { return cTrigExprParserRuleCall_28_1_0; }
		
		//'and'
		public Keyword getAndKeyword_28_2() { return cAndKeyword_28_2; }
		
		//'not'
		public Keyword getNotKeyword_28_3() { return cNotKeyword_28_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_28_4() { return cRelAssignment_28_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_28_4_0() { return cRelExprParserRuleCall_28_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_28_5() { return cCommaParserRuleCall_28_5; }
		
		//'then'
		public Keyword getThenKeyword_28_6() { return cThenKeyword_28_6; }
		
		//inv=Expr
		public Assignment getInvAssignment_28_7() { return cInvAssignment_28_7; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_28_7_0() { return cInvExprParserRuleCall_28_7_0; }
		
		//'and'
		public Keyword getAndKeyword_28_8() { return cAndKeyword_28_8; }
		
		//'not'
		public Keyword getNotKeyword_28_9() { return cNotKeyword_28_9; }
		
		//notfin=Expr
		public Assignment getNotfinAssignment_28_10() { return cNotfinAssignment_28_10; }
		
		//Expr
		public RuleCall getNotfinExprParserRuleCall_28_10_0() { return cNotfinExprParserRuleCall_28_10_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_28_11() { return cCommaParserRuleCall_28_11; }
		
		//'until'
		public Keyword getUntilKeyword_28_12() { return cUntilKeyword_28_12; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_28_13() { return cPerhapsKeyword_28_13; }
		
		//fin=Expr
		public Assignment getFinAssignment_28_14() { return cFinAssignment_28_14; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_28_14_0() { return cFinExprParserRuleCall_28_14_0; }
		
		//'happens'
		public Keyword getHappensKeyword_28_15() { return cHappensKeyword_28_15; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_28_16() { return cCommaParserRuleCall_28_16; }
		
		//'and'
		public Keyword getAndKeyword_28_17() { return cAndKeyword_28_17; }
		
		//'from'
		public Keyword getFromKeyword_28_18() { return cFromKeyword_28_18; }
		
		//'then'
		public Keyword getThenKeyword_28_19() { return cThenKeyword_28_19; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_28_20() { return cInv2Assignment_28_20; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_28_20_0() { return cInv2ExprParserRuleCall_28_20_0; }
		
		//'will'
		public Keyword getWillKeyword_28_21() { return cWillKeyword_28_21; }
		
		//'be'
		public Keyword getBeKeyword_28_22() { return cBeKeyword_28_22; }
		
		//'along'
		public Keyword getAlongKeyword_28_23() { return cAlongKeyword_28_23; }
		
		//'with'
		public Keyword getWithKeyword_28_24() { return cWithKeyword_28_24; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_28_25() { return cNotdelAssignment_28_25; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_28_25_0() { return cNotdelExprParserRuleCall_28_25_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_28_26() { return cCommaParserRuleCall_28_26; }
		
		//'until'
		public Keyword getUntilKeyword_28_27() { return cUntilKeyword_28_27; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_28_28() { return cPerhapsKeyword_28_28; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_28_29() { return cRel2Assignment_28_29; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_28_29_0() { return cRel2ExprParserRuleCall_28_29_0; }
		
		//'or'
		public Keyword getOrKeyword_28_30() { return cOrKeyword_28_30; }
		
		//rea=Expr
		public Assignment getReaAssignment_28_31() { return cReaAssignment_28_31; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_28_31_0() { return cReaExprParserRuleCall_28_31_0; }
		
		//'with'
		public Keyword getWithKeyword_28_32() { return cWithKeyword_28_32; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_28_33() { return cInv3Assignment_28_33; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_28_33_0() { return cInv3ExprParserRuleCall_28_33_0; }
		
		//'preserved'
		public Keyword getPreservedKeyword_28_34() { return cPreservedKeyword_28_34; }
		
		//'always' inv=Expr
		public Group getGroup_29() { return cGroup_29; }
		
		//'always'
		public Keyword getAlwaysKeyword_29_0() { return cAlwaysKeyword_29_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_29_1() { return cInvAssignment_29_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_29_1_0() { return cInvExprParserRuleCall_29_1_0; }
		
		//'there' 'is' 'always' 'a' rea=Expr
		public Group getGroup_30() { return cGroup_30; }
		
		//'there'
		public Keyword getThereKeyword_30_0() { return cThereKeyword_30_0; }
		
		//'is'
		public Keyword getIsKeyword_30_1() { return cIsKeyword_30_1; }
		
		//'always'
		public Keyword getAlwaysKeyword_30_2() { return cAlwaysKeyword_30_2; }
		
		//'a'
		public Keyword getAKeyword_30_3() { return cAKeyword_30_3; }
		
		//rea=Expr
		public Assignment getReaAssignment_30_4() { return cReaAssignment_30_4; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_30_4_0() { return cReaExprParserRuleCall_30_4_0; }
		
		//'always' inv=Expr 'and' 'immediately' 'there' 'will' 'be' rea=Expr
		public Group getGroup_31() { return cGroup_31; }
		
		//'always'
		public Keyword getAlwaysKeyword_31_0() { return cAlwaysKeyword_31_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_31_1() { return cInvAssignment_31_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_31_1_0() { return cInvExprParserRuleCall_31_1_0; }
		
		//'and'
		public Keyword getAndKeyword_31_2() { return cAndKeyword_31_2; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_31_3() { return cImmediatelyKeyword_31_3; }
		
		//'there'
		public Keyword getThereKeyword_31_4() { return cThereKeyword_31_4; }
		
		//'will'
		public Keyword getWillKeyword_31_5() { return cWillKeyword_31_5; }
		
		//'be'
		public Keyword getBeKeyword_31_6() { return cBeKeyword_31_6; }
		
		//rea=Expr
		public Assignment getReaAssignment_31_7() { return cReaAssignment_31_7; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_31_7_0() { return cReaExprParserRuleCall_31_7_0; }
		
		//'always' 'either' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr
		public Group getGroup_32() { return cGroup_32; }
		
		//'always'
		public Keyword getAlwaysKeyword_32_0() { return cAlwaysKeyword_32_0; }
		
		//'either'
		public Keyword getEitherKeyword_32_1() { return cEitherKeyword_32_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_32_2() { return cRelAssignment_32_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_32_2_0() { return cRelExprParserRuleCall_32_2_0; }
		
		//'or'
		public Keyword getOrKeyword_32_3() { return cOrKeyword_32_3; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_32_4() { return cImmediatelyKeyword_32_4; }
		
		//'will'
		public Keyword getWillKeyword_32_5() { return cWillKeyword_32_5; }
		
		//'be'
		public Keyword getBeKeyword_32_6() { return cBeKeyword_32_6; }
		
		//rea=Expr
		public Assignment getReaAssignment_32_7() { return cReaAssignment_32_7; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_32_7_0() { return cReaExprParserRuleCall_32_7_0; }
		
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr
		public Group getGroup_33() { return cGroup_33; }
		
		//'always'
		public Keyword getAlwaysKeyword_33_0() { return cAlwaysKeyword_33_0; }
		
		//'either'
		public Keyword getEitherKeyword_33_1() { return cEitherKeyword_33_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_33_2() { return cRelAssignment_33_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_33_2_0() { return cRelExprParserRuleCall_33_2_0; }
		
		//'or'
		public Keyword getOrKeyword_33_3() { return cOrKeyword_33_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_33_4() { return cInvAssignment_33_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_33_4_0() { return cInvExprParserRuleCall_33_4_0; }
		
		//'and'
		public Keyword getAndKeyword_33_5() { return cAndKeyword_33_5; }
		
		//'at'
		public Keyword getAtKeyword_33_6() { return cAtKeyword_33_6; }
		
		//'the'
		public Keyword getTheKeyword_33_7() { return cTheKeyword_33_7; }
		
		//'same'
		public Keyword getSameKeyword_33_8() { return cSameKeyword_33_8; }
		
		//'time'
		public Keyword getTimeKeyword_33_9() { return cTimeKeyword_33_9; }
		
		//'it'
		public Keyword getItKeyword_33_10() { return cItKeyword_33_10; }
		
		//'will'
		public Keyword getWillKeyword_33_11() { return cWillKeyword_33_11; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_33_12() { return cImmediatelyKeyword_33_12; }
		
		//'be'
		public Keyword getBeKeyword_33_13() { return cBeKeyword_33_13; }
		
		//rea=Expr
		public Assignment getReaAssignment_33_14() { return cReaAssignment_33_14; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_33_14_0() { return cReaExprParserRuleCall_33_14_0; }
		
		//'always' inv=Expr 'or' 'it' 'alternates' 'with' rel=Expr
		public Group getGroup_34() { return cGroup_34; }
		
		//'always'
		public Keyword getAlwaysKeyword_34_0() { return cAlwaysKeyword_34_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_34_1() { return cInvAssignment_34_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_34_1_0() { return cInvExprParserRuleCall_34_1_0; }
		
		//'or'
		public Keyword getOrKeyword_34_2() { return cOrKeyword_34_2; }
		
		//'it'
		public Keyword getItKeyword_34_3() { return cItKeyword_34_3; }
		
		//'alternates'
		public Keyword getAlternatesKeyword_34_4() { return cAlternatesKeyword_34_4; }
		
		//'with'
		public Keyword getWithKeyword_34_5() { return cWithKeyword_34_5; }
		
		//rel=Expr
		public Assignment getRelAssignment_34_6() { return cRelAssignment_34_6; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_34_6_0() { return cRelExprParserRuleCall_34_6_0; }
		
		//'always' notdel=Expr 'and' 'maybe' 'occasionally' rel=Expr 'or' rea=Expr
		public Group getGroup_35() { return cGroup_35; }
		
		//'always'
		public Keyword getAlwaysKeyword_35_0() { return cAlwaysKeyword_35_0; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_35_1() { return cNotdelAssignment_35_1; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_35_1_0() { return cNotdelExprParserRuleCall_35_1_0; }
		
		//'and'
		public Keyword getAndKeyword_35_2() { return cAndKeyword_35_2; }
		
		//'maybe'
		public Keyword getMaybeKeyword_35_3() { return cMaybeKeyword_35_3; }
		
		//'occasionally'
		public Keyword getOccasionallyKeyword_35_4() { return cOccasionallyKeyword_35_4; }
		
		//rel=Expr
		public Assignment getRelAssignment_35_5() { return cRelAssignment_35_5; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_35_5_0() { return cRelExprParserRuleCall_35_5_0; }
		
		//'or'
		public Keyword getOrKeyword_35_6() { return cOrKeyword_35_6; }
		
		//rea=Expr
		public Assignment getReaAssignment_35_7() { return cReaAssignment_35_7; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_35_7_0() { return cReaExprParserRuleCall_35_7_0; }
		
		//'always' inv=Expr 'and' 'maybe' 'occasionally' rea=Expr
		public Group getGroup_36() { return cGroup_36; }
		
		//'always'
		public Keyword getAlwaysKeyword_36_0() { return cAlwaysKeyword_36_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_36_1() { return cInvAssignment_36_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_36_1_0() { return cInvExprParserRuleCall_36_1_0; }
		
		//'and'
		public Keyword getAndKeyword_36_2() { return cAndKeyword_36_2; }
		
		//'maybe'
		public Keyword getMaybeKeyword_36_3() { return cMaybeKeyword_36_3; }
		
		//'occasionally'
		public Keyword getOccasionallyKeyword_36_4() { return cOccasionallyKeyword_36_4; }
		
		//rea=Expr
		public Assignment getReaAssignment_36_5() { return cReaAssignment_36_5; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_36_5_0() { return cReaExprParserRuleCall_36_5_0; }
		
		//'always' e1=Expr 'and' 'maybe' 'from' 'time' 'to' 'time' e2=Expr 'or' e3=Expr
		public Group getGroup_37() { return cGroup_37; }
		
		//'always'
		public Keyword getAlwaysKeyword_37_0() { return cAlwaysKeyword_37_0; }
		
		//e1=Expr
		public Assignment getE1Assignment_37_1() { return cE1Assignment_37_1; }
		
		//Expr
		public RuleCall getE1ExprParserRuleCall_37_1_0() { return cE1ExprParserRuleCall_37_1_0; }
		
		//'and'
		public Keyword getAndKeyword_37_2() { return cAndKeyword_37_2; }
		
		//'maybe'
		public Keyword getMaybeKeyword_37_3() { return cMaybeKeyword_37_3; }
		
		//'from'
		public Keyword getFromKeyword_37_4() { return cFromKeyword_37_4; }
		
		//'time'
		public Keyword getTimeKeyword_37_5() { return cTimeKeyword_37_5; }
		
		//'to'
		public Keyword getToKeyword_37_6() { return cToKeyword_37_6; }
		
		//'time'
		public Keyword getTimeKeyword_37_7() { return cTimeKeyword_37_7; }
		
		//e2=Expr
		public Assignment getE2Assignment_37_8() { return cE2Assignment_37_8; }
		
		//Expr
		public RuleCall getE2ExprParserRuleCall_37_8_0() { return cE2ExprParserRuleCall_37_8_0; }
		
		//'or'
		public Keyword getOrKeyword_37_9() { return cOrKeyword_37_9; }
		
		//e3=Expr
		public Assignment getE3Assignment_37_10() { return cE3Assignment_37_10; }
		
		//Expr
		public RuleCall getE3ExprParserRuleCall_37_10_0() { return cE3ExprParserRuleCall_37_10_0; }
		
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr
		public Group getGroup_38() { return cGroup_38; }
		
		//'either'
		public Keyword getEitherKeyword_38_0() { return cEitherKeyword_38_0; }
		
		//'it'
		public Keyword getItKeyword_38_1() { return cItKeyword_38_1; }
		
		//'is'
		public Keyword getIsKeyword_38_2() { return cIsKeyword_38_2; }
		
		//'not'
		public Keyword getNotKeyword_38_3() { return cNotKeyword_38_3; }
		
		//'always'
		public Keyword getAlwaysKeyword_38_4() { return cAlwaysKeyword_38_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_38_5() { return cFinAssignment_38_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_38_5_0() { return cFinExprParserRuleCall_38_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_38_6() { return cCommaParserRuleCall_38_6; }
		
		//'or'
		public Keyword getOrKeyword_38_7() { return cOrKeyword_38_7; }
		
		//'it'
		public Keyword getItKeyword_38_8() { return cItKeyword_38_8; }
		
		//'happens'
		public Keyword getHappensKeyword_38_9() { return cHappensKeyword_38_9; }
		
		//'and'
		public Keyword getAndKeyword_38_10() { return cAndKeyword_38_10; }
		
		//'then'
		public Keyword getThenKeyword_38_11() { return cThenKeyword_38_11; }
		
		//'it'
		public Keyword getItKeyword_38_12() { return cItKeyword_38_12; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_38_13() { return cImmediatelyKeyword_38_13; }
		
		//'becomes'
		public Keyword getBecomesKeyword_38_14() { return cBecomesKeyword_38_14; }
		
		//rea=Expr
		public Assignment getReaAssignment_38_15() { return cReaAssignment_38_15; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_38_15_0() { return cReaExprParserRuleCall_38_15_0; }
		
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' Comma 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr Comma 'or' rel=Expr 'happens'
		public Group getGroup_39() { return cGroup_39; }
		
		//'either'
		public Keyword getEitherKeyword_39_0() { return cEitherKeyword_39_0; }
		
		//'it'
		public Keyword getItKeyword_39_1() { return cItKeyword_39_1; }
		
		//'is'
		public Keyword getIsKeyword_39_2() { return cIsKeyword_39_2; }
		
		//'not'
		public Keyword getNotKeyword_39_3() { return cNotKeyword_39_3; }
		
		//'always'
		public Keyword getAlwaysKeyword_39_4() { return cAlwaysKeyword_39_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_39_5() { return cFinAssignment_39_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_39_5_0() { return cFinExprParserRuleCall_39_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_39_6() { return cCommaParserRuleCall_39_6; }
		
		//'or'
		public Keyword getOrKeyword_39_7() { return cOrKeyword_39_7; }
		
		//'it'
		public Keyword getItKeyword_39_8() { return cItKeyword_39_8; }
		
		//'happens'
		public Keyword getHappensKeyword_39_9() { return cHappensKeyword_39_9; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_39_10() { return cCommaParserRuleCall_39_10; }
		
		//'and'
		public Keyword getAndKeyword_39_11() { return cAndKeyword_39_11; }
		
		//'then'
		public Keyword getThenKeyword_39_12() { return cThenKeyword_39_12; }
		
		//'it'
		public Keyword getItKeyword_39_13() { return cItKeyword_39_13; }
		
		//'immediately'
		public Keyword getImmediatelyKeyword_39_14() { return cImmediatelyKeyword_39_14; }
		
		//'becomes'
		public Keyword getBecomesKeyword_39_15() { return cBecomesKeyword_39_15; }
		
		//rea=Expr
		public Assignment getReaAssignment_39_16() { return cReaAssignment_39_16; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_39_16_0() { return cReaExprParserRuleCall_39_16_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_39_17() { return cCommaParserRuleCall_39_17; }
		
		//'or'
		public Keyword getOrKeyword_39_18() { return cOrKeyword_39_18; }
		
		//rel=Expr
		public Assignment getRelAssignment_39_19() { return cRelAssignment_39_19; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_39_19_0() { return cRelExprParserRuleCall_39_19_0; }
		
		//'happens'
		public Keyword getHappensKeyword_39_20() { return cHappensKeyword_39_20; }
		
		//'either' 'it' 'does' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'will' 'always' 'be' notdel=Expr 'from' 'now'
		public Group getGroup_40() { return cGroup_40; }
		
		//'either'
		public Keyword getEitherKeyword_40_0() { return cEitherKeyword_40_0; }
		
		//'it'
		public Keyword getItKeyword_40_1() { return cItKeyword_40_1; }
		
		//'does'
		public Keyword getDoesKeyword_40_2() { return cDoesKeyword_40_2; }
		
		//'not'
		public Keyword getNotKeyword_40_3() { return cNotKeyword_40_3; }
		
		//'always'
		public Keyword getAlwaysKeyword_40_4() { return cAlwaysKeyword_40_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_40_5() { return cFinAssignment_40_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_40_5_0() { return cFinExprParserRuleCall_40_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_40_6() { return cCommaParserRuleCall_40_6; }
		
		//'or'
		public Keyword getOrKeyword_40_7() { return cOrKeyword_40_7; }
		
		//'it'
		public Keyword getItKeyword_40_8() { return cItKeyword_40_8; }
		
		//'happens'
		public Keyword getHappensKeyword_40_9() { return cHappensKeyword_40_9; }
		
		//'and'
		public Keyword getAndKeyword_40_10() { return cAndKeyword_40_10; }
		
		//'will'
		public Keyword getWillKeyword_40_11() { return cWillKeyword_40_11; }
		
		//'always'
		public Keyword getAlwaysKeyword_40_12() { return cAlwaysKeyword_40_12; }
		
		//'be'
		public Keyword getBeKeyword_40_13() { return cBeKeyword_40_13; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_40_14() { return cNotdelAssignment_40_14; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_40_14_0() { return cNotdelExprParserRuleCall_40_14_0; }
		
		//'from'
		public Keyword getFromKeyword_40_15() { return cFromKeyword_40_15; }
		
		//'now'
		public Keyword getNowKeyword_40_16() { return cNowKeyword_40_16; }
		
		//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'maybe' rea=Expr 'happens'
		public Group getGroup_41() { return cGroup_41; }
		
		//'either'
		public Keyword getEitherKeyword_41_0() { return cEitherKeyword_41_0; }
		
		//'it'
		public Keyword getItKeyword_41_1() { return cItKeyword_41_1; }
		
		//'is'
		public Keyword getIsKeyword_41_2() { return cIsKeyword_41_2; }
		
		//'not'
		public Keyword getNotKeyword_41_3() { return cNotKeyword_41_3; }
		
		//'always'
		public Keyword getAlwaysKeyword_41_4() { return cAlwaysKeyword_41_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_41_5() { return cFinAssignment_41_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_41_5_0() { return cFinExprParserRuleCall_41_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_41_6() { return cCommaParserRuleCall_41_6; }
		
		//'or'
		public Keyword getOrKeyword_41_7() { return cOrKeyword_41_7; }
		
		//'it'
		public Keyword getItKeyword_41_8() { return cItKeyword_41_8; }
		
		//'happens'
		public Keyword getHappensKeyword_41_9() { return cHappensKeyword_41_9; }
		
		//'and'
		public Keyword getAndKeyword_41_10() { return cAndKeyword_41_10; }
		
		//'from'
		public Keyword getFromKeyword_41_11() { return cFromKeyword_41_11; }
		
		//'then'
		public Keyword getThenKeyword_41_12() { return cThenKeyword_41_12; }
		
		//'it'
		public Keyword getItKeyword_41_13() { return cItKeyword_41_13; }
		
		//'will'
		public Keyword getWillKeyword_41_14() { return cWillKeyword_41_14; }
		
		//'be'
		public Keyword getBeKeyword_41_15() { return cBeKeyword_41_15; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_41_16() { return cNotdelAssignment_41_16; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_41_16_0() { return cNotdelExprParserRuleCall_41_16_0; }
		
		//'until'
		public Keyword getUntilKeyword_41_17() { return cUntilKeyword_41_17; }
		
		//'maybe'
		public Keyword getMaybeKeyword_41_18() { return cMaybeKeyword_41_18; }
		
		//rea=Expr
		public Assignment getReaAssignment_41_19() { return cReaAssignment_41_19; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_41_19_0() { return cReaExprParserRuleCall_41_19_0; }
		
		//'happens'
		public Keyword getHappensKeyword_41_20() { return cHappensKeyword_41_20; }
		
		//'always' inv=Expr 'and' notdel=Expr 'until' 'perhaps' rea=Expr 'happens'
		public Group getGroup_42() { return cGroup_42; }
		
		//'always'
		public Keyword getAlwaysKeyword_42_0() { return cAlwaysKeyword_42_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_42_1() { return cInvAssignment_42_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_42_1_0() { return cInvExprParserRuleCall_42_1_0; }
		
		//'and'
		public Keyword getAndKeyword_42_2() { return cAndKeyword_42_2; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_42_3() { return cNotdelAssignment_42_3; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_42_3_0() { return cNotdelExprParserRuleCall_42_3_0; }
		
		//'until'
		public Keyword getUntilKeyword_42_4() { return cUntilKeyword_42_4; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_42_5() { return cPerhapsKeyword_42_5; }
		
		//rea=Expr
		public Assignment getReaAssignment_42_6() { return cReaAssignment_42_6; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_42_6_0() { return cReaExprParserRuleCall_42_6_0; }
		
		//'happens'
		public Keyword getHappensKeyword_42_7() { return cHappensKeyword_42_7; }
		
		////inv=Expr 'and' notdel=Expr 'until' 'perhaps' rel=Expr 'happens' Comma 'or' rea=Expr 'keeps' inv=Expr |
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr
		public Group getGroup_43() { return cGroup_43; }
		
		////inv=Expr 'and' notdel=Expr 'until' 'perhaps' rel=Expr 'happens' Comma 'or' rea=Expr 'keeps' inv=Expr |
		//'either'
		public Keyword getEitherKeyword_43_0() { return cEitherKeyword_43_0; }
		
		//'always'
		public Keyword getAlwaysKeyword_43_1() { return cAlwaysKeyword_43_1; }
		
		//inv=Expr
		public Assignment getInvAssignment_43_2() { return cInvAssignment_43_2; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_43_2_0() { return cInvExprParserRuleCall_43_2_0; }
		
		//'and'
		public Keyword getAndKeyword_43_3() { return cAndKeyword_43_3; }
		
		//'not'
		public Keyword getNotKeyword_43_4() { return cNotKeyword_43_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_43_5() { return cFinAssignment_43_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_43_5_0() { return cFinExprParserRuleCall_43_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_43_6() { return cCommaParserRuleCall_43_6; }
		
		//'or'
		public Keyword getOrKeyword_43_7() { return cOrKeyword_43_7; }
		
		//rel=Expr
		public Assignment getRelAssignment_43_8() { return cRelAssignment_43_8; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_43_8_0() { return cRelExprParserRuleCall_43_8_0; }
		
		//'will'
		public Keyword getWillKeyword_43_9() { return cWillKeyword_43_9; }
		
		//'happen'
		public Keyword getHappenKeyword_43_10() { return cHappenKeyword_43_10; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_43_11() { return cCommaParserRuleCall_43_11; }
		
		//'or'
		public Keyword getOrKeyword_43_12() { return cOrKeyword_43_12; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_43_13() { return cFin2Assignment_43_13; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_43_13_0() { return cFin2ExprParserRuleCall_43_13_0; }
		
		//'with'
		public Keyword getWithKeyword_43_14() { return cWithKeyword_43_14; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_43_15() { return cInv2Assignment_43_15; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_43_15_0() { return cInv2ExprParserRuleCall_43_15_0; }
		
		//'always' inv=Expr Comma 'and' fin=Expr 'possibly' 'comes' 'with' rea=Expr
		public Group getGroup_44() { return cGroup_44; }
		
		//'always'
		public Keyword getAlwaysKeyword_44_0() { return cAlwaysKeyword_44_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_44_1() { return cInvAssignment_44_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_44_1_0() { return cInvExprParserRuleCall_44_1_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_44_2() { return cCommaParserRuleCall_44_2; }
		
		//'and'
		public Keyword getAndKeyword_44_3() { return cAndKeyword_44_3; }
		
		//fin=Expr
		public Assignment getFinAssignment_44_4() { return cFinAssignment_44_4; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_44_4_0() { return cFinExprParserRuleCall_44_4_0; }
		
		//'possibly'
		public Keyword getPossiblyKeyword_44_5() { return cPossiblyKeyword_44_5; }
		
		//'comes'
		public Keyword getComesKeyword_44_6() { return cComesKeyword_44_6; }
		
		//'with'
		public Keyword getWithKeyword_44_7() { return cWithKeyword_44_7; }
		
		//rea=Expr
		public Assignment getReaAssignment_44_8() { return cReaAssignment_44_8; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_44_8_0() { return cReaExprParserRuleCall_44_8_0; }
		
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr 'and' 'immediate' rea=Expr
		public Group getGroup_45() { return cGroup_45; }
		
		//'either'
		public Keyword getEitherKeyword_45_0() { return cEitherKeyword_45_0; }
		
		//'always'
		public Keyword getAlwaysKeyword_45_1() { return cAlwaysKeyword_45_1; }
		
		//inv=Expr
		public Assignment getInvAssignment_45_2() { return cInvAssignment_45_2; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_45_2_0() { return cInvExprParserRuleCall_45_2_0; }
		
		//'and'
		public Keyword getAndKeyword_45_3() { return cAndKeyword_45_3; }
		
		//'not'
		public Keyword getNotKeyword_45_4() { return cNotKeyword_45_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_45_5() { return cFinAssignment_45_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_45_5_0() { return cFinExprParserRuleCall_45_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_45_6() { return cCommaParserRuleCall_45_6; }
		
		//'or'
		public Keyword getOrKeyword_45_7() { return cOrKeyword_45_7; }
		
		//rel=Expr
		public Assignment getRelAssignment_45_8() { return cRelAssignment_45_8; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_45_8_0() { return cRelExprParserRuleCall_45_8_0; }
		
		//'will'
		public Keyword getWillKeyword_45_9() { return cWillKeyword_45_9; }
		
		//'happen'
		public Keyword getHappenKeyword_45_10() { return cHappenKeyword_45_10; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_45_11() { return cCommaParserRuleCall_45_11; }
		
		//'or'
		public Keyword getOrKeyword_45_12() { return cOrKeyword_45_12; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_45_13() { return cFin2Assignment_45_13; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_45_13_0() { return cFin2ExprParserRuleCall_45_13_0; }
		
		//'with'
		public Keyword getWithKeyword_45_14() { return cWithKeyword_45_14; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_45_15() { return cInv2Assignment_45_15; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_45_15_0() { return cInv2ExprParserRuleCall_45_15_0; }
		
		//'and'
		public Keyword getAndKeyword_45_16() { return cAndKeyword_45_16; }
		
		//'immediate'
		public Keyword getImmediateKeyword_45_17() { return cImmediateKeyword_45_17; }
		
		//rea=Expr
		public Assignment getReaAssignment_45_18() { return cReaAssignment_45_18; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_45_18_0() { return cReaExprParserRuleCall_45_18_0; }
		
		//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' fin2=Expr 'will' 'happen' 'and' 'from' 'now' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr
		public Group getGroup_46() { return cGroup_46; }
		
		//'either'
		public Keyword getEitherKeyword_46_0() { return cEitherKeyword_46_0; }
		
		//'always'
		public Keyword getAlwaysKeyword_46_1() { return cAlwaysKeyword_46_1; }
		
		//inv=Expr
		public Assignment getInvAssignment_46_2() { return cInvAssignment_46_2; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_46_2_0() { return cInvExprParserRuleCall_46_2_0; }
		
		//'and'
		public Keyword getAndKeyword_46_3() { return cAndKeyword_46_3; }
		
		//'not'
		public Keyword getNotKeyword_46_4() { return cNotKeyword_46_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_46_5() { return cFinAssignment_46_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_46_5_0() { return cFinExprParserRuleCall_46_5_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_46_6() { return cCommaParserRuleCall_46_6; }
		
		//'or'
		public Keyword getOrKeyword_46_7() { return cOrKeyword_46_7; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_46_8() { return cFin2Assignment_46_8; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_46_8_0() { return cFin2ExprParserRuleCall_46_8_0; }
		
		//'will'
		public Keyword getWillKeyword_46_9() { return cWillKeyword_46_9; }
		
		//'happen'
		public Keyword getHappenKeyword_46_10() { return cHappenKeyword_46_10; }
		
		//'and'
		public Keyword getAndKeyword_46_11() { return cAndKeyword_46_11; }
		
		//'from'
		public Keyword getFromKeyword_46_12() { return cFromKeyword_46_12; }
		
		//'now'
		public Keyword getNowKeyword_46_13() { return cNowKeyword_46_13; }
		
		//'there'
		public Keyword getThereKeyword_46_14() { return cThereKeyword_46_14; }
		
		//'will'
		public Keyword getWillKeyword_46_15() { return cWillKeyword_46_15; }
		
		//'always'
		public Keyword getAlwaysKeyword_46_16() { return cAlwaysKeyword_46_16; }
		
		//'be'
		public Keyword getBeKeyword_46_17() { return cBeKeyword_46_17; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_46_18() { return cInv2Assignment_46_18; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_46_18_0() { return cInv2ExprParserRuleCall_46_18_0; }
		
		//'and'
		public Keyword getAndKeyword_46_19() { return cAndKeyword_46_19; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_46_20() { return cNotdelAssignment_46_20; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_46_20_0() { return cNotdelExprParserRuleCall_46_20_0; }
		
		//'always' inv=Expr 'and' 'maybe' fin=Expr 'and' 'then' 'maybe' rea=Expr
		public Group getGroup_47() { return cGroup_47; }
		
		//'always'
		public Keyword getAlwaysKeyword_47_0() { return cAlwaysKeyword_47_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_47_1() { return cInvAssignment_47_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_47_1_0() { return cInvExprParserRuleCall_47_1_0; }
		
		//'and'
		public Keyword getAndKeyword_47_2() { return cAndKeyword_47_2; }
		
		//'maybe'
		public Keyword getMaybeKeyword_47_3() { return cMaybeKeyword_47_3; }
		
		//fin=Expr
		public Assignment getFinAssignment_47_4() { return cFinAssignment_47_4; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_47_4_0() { return cFinExprParserRuleCall_47_4_0; }
		
		//'and'
		public Keyword getAndKeyword_47_5() { return cAndKeyword_47_5; }
		
		//'then'
		public Keyword getThenKeyword_47_6() { return cThenKeyword_47_6; }
		
		//'maybe'
		public Keyword getMaybeKeyword_47_7() { return cMaybeKeyword_47_7; }
		
		//rea=Expr
		public Assignment getReaAssignment_47_8() { return cReaAssignment_47_8; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_47_8_0() { return cReaExprParserRuleCall_47_8_0; }
		
		//'always' inv=Expr 'and' 'possibly' fin=Expr Comma 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr
		public Group getGroup_48() { return cGroup_48; }
		
		//'always'
		public Keyword getAlwaysKeyword_48_0() { return cAlwaysKeyword_48_0; }
		
		//inv=Expr
		public Assignment getInvAssignment_48_1() { return cInvAssignment_48_1; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_48_1_0() { return cInvExprParserRuleCall_48_1_0; }
		
		//'and'
		public Keyword getAndKeyword_48_2() { return cAndKeyword_48_2; }
		
		//'possibly'
		public Keyword getPossiblyKeyword_48_3() { return cPossiblyKeyword_48_3; }
		
		//fin=Expr
		public Assignment getFinAssignment_48_4() { return cFinAssignment_48_4; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_48_4_0() { return cFinExprParserRuleCall_48_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_48_5() { return cCommaParserRuleCall_48_5; }
		
		//'and'
		public Keyword getAndKeyword_48_6() { return cAndKeyword_48_6; }
		
		//'from'
		public Keyword getFromKeyword_48_7() { return cFromKeyword_48_7; }
		
		//'then'
		public Keyword getThenKeyword_48_8() { return cThenKeyword_48_8; }
		
		//'there'
		public Keyword getThereKeyword_48_9() { return cThereKeyword_48_9; }
		
		//'will'
		public Keyword getWillKeyword_48_10() { return cWillKeyword_48_10; }
		
		//'be'
		public Keyword getBeKeyword_48_11() { return cBeKeyword_48_11; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_48_12() { return cNotdelAssignment_48_12; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_48_12_0() { return cNotdelExprParserRuleCall_48_12_0; }
		
		//'until'
		public Keyword getUntilKeyword_48_13() { return cUntilKeyword_48_13; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_48_14() { return cPerhapsKeyword_48_14; }
		
		//rea=Expr
		public Assignment getReaAssignment_48_15() { return cReaAssignment_48_15; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_48_15_0() { return cReaExprParserRuleCall_48_15_0; }
		
		//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens'
		public Group getGroup_49() { return cGroup_49; }
		
		//'whenever'
		public Keyword getWheneverKeyword_49_0() { return cWheneverKeyword_49_0; }
		
		//'it'
		public Keyword getItKeyword_49_1() { return cItKeyword_49_1; }
		
		//'is'
		public Keyword getIsKeyword_49_2() { return cIsKeyword_49_2; }
		
		//'not'
		public Keyword getNotKeyword_49_3() { return cNotKeyword_49_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_49_4() { return cRelAssignment_49_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_49_4_0() { return cRelExprParserRuleCall_49_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_49_5() { return cCommaParserRuleCall_49_5; }
		
		//fin=Expr
		public Assignment getFinAssignment_49_6() { return cFinAssignment_49_6; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_49_6_0() { return cFinExprParserRuleCall_49_6_0; }
		
		//'will'
		public Keyword getWillKeyword_49_7() { return cWillKeyword_49_7; }
		
		//'probably'
		public Keyword getProbablyKeyword_49_8() { return cProbablyKeyword_49_8; }
		
		//'come'
		public Keyword getComeKeyword_49_9() { return cComeKeyword_49_9; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_49_10() { return cCommaParserRuleCall_49_10; }
		
		//'and'
		public Keyword getAndKeyword_49_11() { return cAndKeyword_49_11; }
		
		//'from'
		public Keyword getFromKeyword_49_12() { return cFromKeyword_49_12; }
		
		//'that'
		public Keyword getThatKeyword_49_13() { return cThatKeyword_49_13; }
		
		//'moment'
		public Keyword getMomentKeyword_49_14() { return cMomentKeyword_49_14; }
		
		//'there'
		public Keyword getThereKeyword_49_15() { return cThereKeyword_49_15; }
		
		//'will'
		public Keyword getWillKeyword_49_16() { return cWillKeyword_49_16; }
		
		//'be'
		public Keyword getBeKeyword_49_17() { return cBeKeyword_49_17; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_49_18() { return cNotdelAssignment_49_18; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_49_18_0() { return cNotdelExprParserRuleCall_49_18_0; }
		
		//'until'
		public Keyword getUntilKeyword_49_19() { return cUntilKeyword_49_19; }
		
		//'maybe'
		public Keyword getMaybeKeyword_49_20() { return cMaybeKeyword_49_20; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_49_21() { return cRel2Assignment_49_21; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_49_21_0() { return cRel2ExprParserRuleCall_49_21_0; }
		
		//'happens'
		public Keyword getHappensKeyword_49_22() { return cHappensKeyword_49_22; }
		
		//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens'
		public Group getGroup_50() { return cGroup_50; }
		
		//'whenever'
		public Keyword getWheneverKeyword_50_0() { return cWheneverKeyword_50_0; }
		
		//'it'
		public Keyword getItKeyword_50_1() { return cItKeyword_50_1; }
		
		//'is'
		public Keyword getIsKeyword_50_2() { return cIsKeyword_50_2; }
		
		//'not'
		public Keyword getNotKeyword_50_3() { return cNotKeyword_50_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_50_4() { return cRelAssignment_50_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_50_4_0() { return cRelExprParserRuleCall_50_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_50_5() { return cCommaParserRuleCall_50_5; }
		
		//fin=Expr
		public Assignment getFinAssignment_50_6() { return cFinAssignment_50_6; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_50_6_0() { return cFinExprParserRuleCall_50_6_0; }
		
		//'will'
		public Keyword getWillKeyword_50_7() { return cWillKeyword_50_7; }
		
		//'probably'
		public Keyword getProbablyKeyword_50_8() { return cProbablyKeyword_50_8; }
		
		//'come'
		public Keyword getComeKeyword_50_9() { return cComeKeyword_50_9; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_50_10() { return cCommaParserRuleCall_50_10; }
		
		//'and'
		public Keyword getAndKeyword_50_11() { return cAndKeyword_50_11; }
		
		//'from'
		public Keyword getFromKeyword_50_12() { return cFromKeyword_50_12; }
		
		//'that'
		public Keyword getThatKeyword_50_13() { return cThatKeyword_50_13; }
		
		//'moment'
		public Keyword getMomentKeyword_50_14() { return cMomentKeyword_50_14; }
		
		//'there'
		public Keyword getThereKeyword_50_15() { return cThereKeyword_50_15; }
		
		//'will'
		public Keyword getWillKeyword_50_16() { return cWillKeyword_50_16; }
		
		//'be'
		public Keyword getBeKeyword_50_17() { return cBeKeyword_50_17; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_50_18() { return cNotdelAssignment_50_18; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_50_18_0() { return cNotdelExprParserRuleCall_50_18_0; }
		
		//'until'
		public Keyword getUntilKeyword_50_19() { return cUntilKeyword_50_19; }
		
		//'maybe'
		public Keyword getMaybeKeyword_50_20() { return cMaybeKeyword_50_20; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_50_21() { return cRel2Assignment_50_21; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_50_21_0() { return cRel2ExprParserRuleCall_50_21_0; }
		
		//'or'
		public Keyword getOrKeyword_50_22() { return cOrKeyword_50_22; }
		
		//rea=Expr
		public Assignment getReaAssignment_50_23() { return cReaAssignment_50_23; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_50_23_0() { return cReaExprParserRuleCall_50_23_0; }
		
		//'happens'
		public Keyword getHappensKeyword_50_24() { return cHappensKeyword_50_24; }
		
		//'whenever' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'happens'
		public Group getGroup_51() { return cGroup_51; }
		
		//'whenever'
		public Keyword getWheneverKeyword_51_0() { return cWheneverKeyword_51_0; }
		
		//'not'
		public Keyword getNotKeyword_51_1() { return cNotKeyword_51_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_51_2() { return cRelAssignment_51_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_51_2_0() { return cRelExprParserRuleCall_51_2_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_51_3() { return cCommaParserRuleCall_51_3; }
		
		//'then'
		public Keyword getThenKeyword_51_4() { return cThenKeyword_51_4; }
		
		//inv=Expr
		public Assignment getInvAssignment_51_5() { return cInvAssignment_51_5; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_51_5_0() { return cInvExprParserRuleCall_51_5_0; }
		
		//'and'
		public Keyword getAndKeyword_51_6() { return cAndKeyword_51_6; }
		
		//'not'
		public Keyword getNotKeyword_51_7() { return cNotKeyword_51_7; }
		
		//fin=Expr
		public Assignment getFinAssignment_51_8() { return cFinAssignment_51_8; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_51_8_0() { return cFinExprParserRuleCall_51_8_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_51_9() { return cCommaParserRuleCall_51_9; }
		
		//'until'
		public Keyword getUntilKeyword_51_10() { return cUntilKeyword_51_10; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_51_11() { return cPerhapsKeyword_51_11; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_51_12() { return cFin2Assignment_51_12; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_51_12_0() { return cFin2ExprParserRuleCall_51_12_0; }
		
		//'happens'
		public Keyword getHappensKeyword_51_13() { return cHappensKeyword_51_13; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_51_14() { return cCommaParserRuleCall_51_14; }
		
		//'and'
		public Keyword getAndKeyword_51_15() { return cAndKeyword_51_15; }
		
		//'from'
		public Keyword getFromKeyword_51_16() { return cFromKeyword_51_16; }
		
		//'that'
		public Keyword getThatKeyword_51_17() { return cThatKeyword_51_17; }
		
		//'moment'
		public Keyword getMomentKeyword_51_18() { return cMomentKeyword_51_18; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_51_19() { return cCommaParserRuleCall_51_19; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_51_20() { return cInv2Assignment_51_20; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_51_20_0() { return cInv2ExprParserRuleCall_51_20_0; }
		
		//'will'
		public Keyword getWillKeyword_51_21() { return cWillKeyword_51_21; }
		
		//'be'
		public Keyword getBeKeyword_51_22() { return cBeKeyword_51_22; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_51_23() { return cCommaParserRuleCall_51_23; }
		
		//'until'
		public Keyword getUntilKeyword_51_24() { return cUntilKeyword_51_24; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_51_25() { return cPerhapsKeyword_51_25; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_51_26() { return cRel2Assignment_51_26; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_51_26_0() { return cRel2ExprParserRuleCall_51_26_0; }
		
		//'happens'
		public Keyword getHappensKeyword_51_27() { return cHappensKeyword_51_27; }
		
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea2=Expr 'with' inv3=Expr 'preserved'
		public Group getGroup_52() { return cGroup_52; }
		
		//'whenever'
		public Keyword getWheneverKeyword_52_0() { return cWheneverKeyword_52_0; }
		
		//'it'
		public Keyword getItKeyword_52_1() { return cItKeyword_52_1; }
		
		//'is'
		public Keyword getIsKeyword_52_2() { return cIsKeyword_52_2; }
		
		//'not'
		public Keyword getNotKeyword_52_3() { return cNotKeyword_52_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_52_4() { return cRelAssignment_52_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_52_4_0() { return cRelExprParserRuleCall_52_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_52_5() { return cCommaParserRuleCall_52_5; }
		
		//'then'
		public Keyword getThenKeyword_52_6() { return cThenKeyword_52_6; }
		
		//inv=Expr
		public Assignment getInvAssignment_52_7() { return cInvAssignment_52_7; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_52_7_0() { return cInvExprParserRuleCall_52_7_0; }
		
		//'and'
		public Keyword getAndKeyword_52_8() { return cAndKeyword_52_8; }
		
		//'not'
		public Keyword getNotKeyword_52_9() { return cNotKeyword_52_9; }
		
		//fin=Expr
		public Assignment getFinAssignment_52_10() { return cFinAssignment_52_10; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_52_10_0() { return cFinExprParserRuleCall_52_10_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_52_11() { return cCommaParserRuleCall_52_11; }
		
		//'until'
		public Keyword getUntilKeyword_52_12() { return cUntilKeyword_52_12; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_52_13() { return cPerhapsKeyword_52_13; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_52_14() { return cFin2Assignment_52_14; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_52_14_0() { return cFin2ExprParserRuleCall_52_14_0; }
		
		//'happens'
		public Keyword getHappensKeyword_52_15() { return cHappensKeyword_52_15; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_52_16() { return cCommaParserRuleCall_52_16; }
		
		//'and'
		public Keyword getAndKeyword_52_17() { return cAndKeyword_52_17; }
		
		//'from'
		public Keyword getFromKeyword_52_18() { return cFromKeyword_52_18; }
		
		//'that'
		public Keyword getThatKeyword_52_19() { return cThatKeyword_52_19; }
		
		//'moment'
		public Keyword getMomentKeyword_52_20() { return cMomentKeyword_52_20; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_52_21() { return cCommaParserRuleCall_52_21; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_52_22() { return cInv2Assignment_52_22; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_52_22_0() { return cInv2ExprParserRuleCall_52_22_0; }
		
		//'will'
		public Keyword getWillKeyword_52_23() { return cWillKeyword_52_23; }
		
		//'be'
		public Keyword getBeKeyword_52_24() { return cBeKeyword_52_24; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_52_25() { return cCommaParserRuleCall_52_25; }
		
		//'until'
		public Keyword getUntilKeyword_52_26() { return cUntilKeyword_52_26; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_52_27() { return cPerhapsKeyword_52_27; }
		
		//'it'
		public Keyword getItKeyword_52_28() { return cItKeyword_52_28; }
		
		//'is'
		public Keyword getIsKeyword_52_29() { return cIsKeyword_52_29; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_52_30() { return cRel2Assignment_52_30; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_52_30_0() { return cRel2ExprParserRuleCall_52_30_0; }
		
		//'or'
		public Keyword getOrKeyword_52_31() { return cOrKeyword_52_31; }
		
		//rea2=Expr
		public Assignment getRea2Assignment_52_32() { return cRea2Assignment_52_32; }
		
		//Expr
		public RuleCall getRea2ExprParserRuleCall_52_32_0() { return cRea2ExprParserRuleCall_52_32_0; }
		
		//'with'
		public Keyword getWithKeyword_52_33() { return cWithKeyword_52_33; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_52_34() { return cInv3Assignment_52_34; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_52_34_0() { return cInv3ExprParserRuleCall_52_34_0; }
		
		//'preserved'
		public Keyword getPreservedKeyword_52_35() { return cPreservedKeyword_52_35; }
		
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr
		public Group getGroup_53() { return cGroup_53; }
		
		//'whenever'
		public Keyword getWheneverKeyword_53_0() { return cWheneverKeyword_53_0; }
		
		//'it'
		public Keyword getItKeyword_53_1() { return cItKeyword_53_1; }
		
		//'is'
		public Keyword getIsKeyword_53_2() { return cIsKeyword_53_2; }
		
		//'not'
		public Keyword getNotKeyword_53_3() { return cNotKeyword_53_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_53_4() { return cRelAssignment_53_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_53_4_0() { return cRelExprParserRuleCall_53_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_53_5() { return cCommaParserRuleCall_53_5; }
		
		//'it'
		public Keyword getItKeyword_53_6() { return cItKeyword_53_6; }
		
		//'is'
		public Keyword getIsKeyword_53_7() { return cIsKeyword_53_7; }
		
		//inv=Expr
		public Assignment getInvAssignment_53_8() { return cInvAssignment_53_8; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_53_8_0() { return cInvExprParserRuleCall_53_8_0; }
		
		//'and'
		public Keyword getAndKeyword_53_9() { return cAndKeyword_53_9; }
		
		//'not'
		public Keyword getNotKeyword_53_10() { return cNotKeyword_53_10; }
		
		//fin=Expr
		public Assignment getFinAssignment_53_11() { return cFinAssignment_53_11; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_53_11_0() { return cFinExprParserRuleCall_53_11_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_53_12() { return cCommaParserRuleCall_53_12; }
		
		//'until'
		public Keyword getUntilKeyword_53_13() { return cUntilKeyword_53_13; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_53_14() { return cPerhapsKeyword_53_14; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_53_15() { return cFin2Assignment_53_15; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_53_15_0() { return cFin2ExprParserRuleCall_53_15_0; }
		
		//'happens'
		public Keyword getHappensKeyword_53_16() { return cHappensKeyword_53_16; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_53_17() { return cCommaParserRuleCall_53_17; }
		
		//'and'
		public Keyword getAndKeyword_53_18() { return cAndKeyword_53_18; }
		
		//'from'
		public Keyword getFromKeyword_53_19() { return cFromKeyword_53_19; }
		
		//'that'
		public Keyword getThatKeyword_53_20() { return cThatKeyword_53_20; }
		
		//'moment'
		public Keyword getMomentKeyword_53_21() { return cMomentKeyword_53_21; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_53_22() { return cCommaParserRuleCall_53_22; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_53_23() { return cInv2Assignment_53_23; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_53_23_0() { return cInv2ExprParserRuleCall_53_23_0; }
		
		//'and'
		public Keyword getAndKeyword_53_24() { return cAndKeyword_53_24; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_53_25() { return cNotdelAssignment_53_25; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_53_25_0() { return cNotdelExprParserRuleCall_53_25_0; }
		
		//'will'
		public Keyword getWillKeyword_53_26() { return cWillKeyword_53_26; }
		
		//'be'
		public Keyword getBeKeyword_53_27() { return cBeKeyword_53_27; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_53_28() { return cCommaParserRuleCall_53_28; }
		
		//'until'
		public Keyword getUntilKeyword_53_29() { return cUntilKeyword_53_29; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_53_30() { return cPerhapsKeyword_53_30; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_53_31() { return cRel2Assignment_53_31; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_53_31_0() { return cRel2ExprParserRuleCall_53_31_0; }
		
		//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
		public Group getGroup_54() { return cGroup_54; }
		
		//'whenever'
		public Keyword getWheneverKeyword_54_0() { return cWheneverKeyword_54_0; }
		
		//'it'
		public Keyword getItKeyword_54_1() { return cItKeyword_54_1; }
		
		//'is'
		public Keyword getIsKeyword_54_2() { return cIsKeyword_54_2; }
		
		//'not'
		public Keyword getNotKeyword_54_3() { return cNotKeyword_54_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_54_4() { return cRelAssignment_54_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_54_4_0() { return cRelExprParserRuleCall_54_4_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_54_5() { return cCommaParserRuleCall_54_5; }
		
		//'it'
		public Keyword getItKeyword_54_6() { return cItKeyword_54_6; }
		
		//'is'
		public Keyword getIsKeyword_54_7() { return cIsKeyword_54_7; }
		
		//inv=Expr
		public Assignment getInvAssignment_54_8() { return cInvAssignment_54_8; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_54_8_0() { return cInvExprParserRuleCall_54_8_0; }
		
		//'and'
		public Keyword getAndKeyword_54_9() { return cAndKeyword_54_9; }
		
		//'not'
		public Keyword getNotKeyword_54_10() { return cNotKeyword_54_10; }
		
		//fin=Expr
		public Assignment getFinAssignment_54_11() { return cFinAssignment_54_11; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_54_11_0() { return cFinExprParserRuleCall_54_11_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_54_12() { return cCommaParserRuleCall_54_12; }
		
		//'until'
		public Keyword getUntilKeyword_54_13() { return cUntilKeyword_54_13; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_54_14() { return cPerhapsKeyword_54_14; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_54_15() { return cFin2Assignment_54_15; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_54_15_0() { return cFin2ExprParserRuleCall_54_15_0; }
		
		//'happens'
		public Keyword getHappensKeyword_54_16() { return cHappensKeyword_54_16; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_54_17() { return cCommaParserRuleCall_54_17; }
		
		//'and'
		public Keyword getAndKeyword_54_18() { return cAndKeyword_54_18; }
		
		//'from'
		public Keyword getFromKeyword_54_19() { return cFromKeyword_54_19; }
		
		//'that'
		public Keyword getThatKeyword_54_20() { return cThatKeyword_54_20; }
		
		//'moment'
		public Keyword getMomentKeyword_54_21() { return cMomentKeyword_54_21; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_54_22() { return cCommaParserRuleCall_54_22; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_54_23() { return cInv2Assignment_54_23; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_54_23_0() { return cInv2ExprParserRuleCall_54_23_0; }
		
		//'and'
		public Keyword getAndKeyword_54_24() { return cAndKeyword_54_24; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_54_25() { return cNotdelAssignment_54_25; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_54_25_0() { return cNotdelExprParserRuleCall_54_25_0; }
		
		//'will'
		public Keyword getWillKeyword_54_26() { return cWillKeyword_54_26; }
		
		//'be'
		public Keyword getBeKeyword_54_27() { return cBeKeyword_54_27; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_54_28() { return cCommaParserRuleCall_54_28; }
		
		//'until'
		public Keyword getUntilKeyword_54_29() { return cUntilKeyword_54_29; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_54_30() { return cPerhapsKeyword_54_30; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_54_31() { return cRel2Assignment_54_31; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_54_31_0() { return cRel2ExprParserRuleCall_54_31_0; }
		
		//'or'
		public Keyword getOrKeyword_54_32() { return cOrKeyword_54_32; }
		
		//rea=Expr
		public Assignment getReaAssignment_54_33() { return cReaAssignment_54_33; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_54_33_0() { return cReaExprParserRuleCall_54_33_0; }
		
		//'with'
		public Keyword getWithKeyword_54_34() { return cWithKeyword_54_34; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_54_35() { return cInv3Assignment_54_35; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_54_35_0() { return cInv3ExprParserRuleCall_54_35_0; }
		
		//'preserved'
		public Keyword getPreservedKeyword_54_36() { return cPreservedKeyword_54_36; }
		
		//'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'will' 'happen' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens'
		public Group getGroup_55() { return cGroup_55; }
		
		//'always'
		public Keyword getAlwaysKeyword_55_0() { return cAlwaysKeyword_55_0; }
		
		//'either'
		public Keyword getEitherKeyword_55_1() { return cEitherKeyword_55_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_55_2() { return cRelAssignment_55_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_55_2_0() { return cRelExprParserRuleCall_55_2_0; }
		
		//'or'
		public Keyword getOrKeyword_55_3() { return cOrKeyword_55_3; }
		
		//'maybe'
		public Keyword getMaybeKeyword_55_4() { return cMaybeKeyword_55_4; }
		
		//fin=Expr
		public Assignment getFinAssignment_55_5() { return cFinAssignment_55_5; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_55_5_0() { return cFinExprParserRuleCall_55_5_0; }
		
		//'will'
		public Keyword getWillKeyword_55_6() { return cWillKeyword_55_6; }
		
		//'happen'
		public Keyword getHappenKeyword_55_7() { return cHappenKeyword_55_7; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_55_8() { return cCommaParserRuleCall_55_8; }
		
		//'and'
		public Keyword getAndKeyword_55_9() { return cAndKeyword_55_9; }
		
		//'from'
		public Keyword getFromKeyword_55_10() { return cFromKeyword_55_10; }
		
		//'that'
		public Keyword getThatKeyword_55_11() { return cThatKeyword_55_11; }
		
		//'moment'
		public Keyword getMomentKeyword_55_12() { return cMomentKeyword_55_12; }
		
		//'there'
		public Keyword getThereKeyword_55_13() { return cThereKeyword_55_13; }
		
		//'will'
		public Keyword getWillKeyword_55_14() { return cWillKeyword_55_14; }
		
		//'be'
		public Keyword getBeKeyword_55_15() { return cBeKeyword_55_15; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_55_16() { return cNotdelAssignment_55_16; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_55_16_0() { return cNotdelExprParserRuleCall_55_16_0; }
		
		//'until'
		public Keyword getUntilKeyword_55_17() { return cUntilKeyword_55_17; }
		
		//'maybe'
		public Keyword getMaybeKeyword_55_18() { return cMaybeKeyword_55_18; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_55_19() { return cRel2Assignment_55_19; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_55_19_0() { return cRel2ExprParserRuleCall_55_19_0; }
		
		//'happens'
		public Keyword getHappensKeyword_55_20() { return cHappensKeyword_55_20; }
		
		//'it' 'is' 'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'happens' Comma 'and' 'from' 'that' 'moment' 'there' 'is' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens'
		public Group getGroup_56() { return cGroup_56; }
		
		//'it'
		public Keyword getItKeyword_56_0() { return cItKeyword_56_0; }
		
		//'is'
		public Keyword getIsKeyword_56_1() { return cIsKeyword_56_1; }
		
		//'always'
		public Keyword getAlwaysKeyword_56_2() { return cAlwaysKeyword_56_2; }
		
		//'either'
		public Keyword getEitherKeyword_56_3() { return cEitherKeyword_56_3; }
		
		//rel=Expr
		public Assignment getRelAssignment_56_4() { return cRelAssignment_56_4; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_56_4_0() { return cRelExprParserRuleCall_56_4_0; }
		
		//'or'
		public Keyword getOrKeyword_56_5() { return cOrKeyword_56_5; }
		
		//'maybe'
		public Keyword getMaybeKeyword_56_6() { return cMaybeKeyword_56_6; }
		
		//fin=Expr
		public Assignment getFinAssignment_56_7() { return cFinAssignment_56_7; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_56_7_0() { return cFinExprParserRuleCall_56_7_0; }
		
		//'happens'
		public Keyword getHappensKeyword_56_8() { return cHappensKeyword_56_8; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_56_9() { return cCommaParserRuleCall_56_9; }
		
		//'and'
		public Keyword getAndKeyword_56_10() { return cAndKeyword_56_10; }
		
		//'from'
		public Keyword getFromKeyword_56_11() { return cFromKeyword_56_11; }
		
		//'that'
		public Keyword getThatKeyword_56_12() { return cThatKeyword_56_12; }
		
		//'moment'
		public Keyword getMomentKeyword_56_13() { return cMomentKeyword_56_13; }
		
		//'there'
		public Keyword getThereKeyword_56_14() { return cThereKeyword_56_14; }
		
		//'is'
		public Keyword getIsKeyword_56_15() { return cIsKeyword_56_15; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_56_16() { return cNotdelAssignment_56_16; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_56_16_0() { return cNotdelExprParserRuleCall_56_16_0; }
		
		//'until'
		public Keyword getUntilKeyword_56_17() { return cUntilKeyword_56_17; }
		
		//'maybe'
		public Keyword getMaybeKeyword_56_18() { return cMaybeKeyword_56_18; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_56_19() { return cRel2Assignment_56_19; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_56_19_0() { return cRel2ExprParserRuleCall_56_19_0; }
		
		//'or'
		public Keyword getOrKeyword_56_20() { return cOrKeyword_56_20; }
		
		//rea=Expr
		public Assignment getReaAssignment_56_21() { return cReaAssignment_56_21; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_56_21_0() { return cReaExprParserRuleCall_56_21_0; }
		
		//'happens'
		public Keyword getHappensKeyword_56_22() { return cHappensKeyword_56_22; }
		
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens'
		public Group getGroup_57() { return cGroup_57; }
		
		//'always'
		public Keyword getAlwaysKeyword_57_0() { return cAlwaysKeyword_57_0; }
		
		//'either'
		public Keyword getEitherKeyword_57_1() { return cEitherKeyword_57_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_57_2() { return cRelAssignment_57_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_57_2_0() { return cRelExprParserRuleCall_57_2_0; }
		
		//'or'
		public Keyword getOrKeyword_57_3() { return cOrKeyword_57_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_57_4() { return cInvAssignment_57_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_57_4_0() { return cInvExprParserRuleCall_57_4_0; }
		
		//'and'
		public Keyword getAndKeyword_57_5() { return cAndKeyword_57_5; }
		
		//'not'
		public Keyword getNotKeyword_57_6() { return cNotKeyword_57_6; }
		
		//fin=Expr
		public Assignment getFinAssignment_57_7() { return cFinAssignment_57_7; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_57_7_0() { return cFinExprParserRuleCall_57_7_0; }
		
		//'until'
		public Keyword getUntilKeyword_57_8() { return cUntilKeyword_57_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_57_9() { return cPerhapsKeyword_57_9; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_57_10() { return cFin2Assignment_57_10; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_57_10_0() { return cFin2ExprParserRuleCall_57_10_0; }
		
		//'happens'
		public Keyword getHappensKeyword_57_11() { return cHappensKeyword_57_11; }
		
		//'and'
		public Keyword getAndKeyword_57_12() { return cAndKeyword_57_12; }
		
		//'from'
		public Keyword getFromKeyword_57_13() { return cFromKeyword_57_13; }
		
		//'that'
		public Keyword getThatKeyword_57_14() { return cThatKeyword_57_14; }
		
		//'moment'
		public Keyword getMomentKeyword_57_15() { return cMomentKeyword_57_15; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_57_16() { return cInv2Assignment_57_16; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_57_16_0() { return cInv2ExprParserRuleCall_57_16_0; }
		
		//'will'
		public Keyword getWillKeyword_57_17() { return cWillKeyword_57_17; }
		
		//'be'
		public Keyword getBeKeyword_57_18() { return cBeKeyword_57_18; }
		
		//'until'
		public Keyword getUntilKeyword_57_19() { return cUntilKeyword_57_19; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_57_20() { return cPerhapsKeyword_57_20; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_57_21() { return cRel2Assignment_57_21; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_57_21_0() { return cRel2ExprParserRuleCall_57_21_0; }
		
		//'happens'
		public Keyword getHappensKeyword_57_22() { return cHappensKeyword_57_22; }
		
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'remaining'
		public Group getGroup_58() { return cGroup_58; }
		
		//'always'
		public Keyword getAlwaysKeyword_58_0() { return cAlwaysKeyword_58_0; }
		
		//'either'
		public Keyword getEitherKeyword_58_1() { return cEitherKeyword_58_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_58_2() { return cRelAssignment_58_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_58_2_0() { return cRelExprParserRuleCall_58_2_0; }
		
		//'or'
		public Keyword getOrKeyword_58_3() { return cOrKeyword_58_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_58_4() { return cInvAssignment_58_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_58_4_0() { return cInvExprParserRuleCall_58_4_0; }
		
		//'and'
		public Keyword getAndKeyword_58_5() { return cAndKeyword_58_5; }
		
		//'not'
		public Keyword getNotKeyword_58_6() { return cNotKeyword_58_6; }
		
		//fin=Expr
		public Assignment getFinAssignment_58_7() { return cFinAssignment_58_7; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_58_7_0() { return cFinExprParserRuleCall_58_7_0; }
		
		//'until'
		public Keyword getUntilKeyword_58_8() { return cUntilKeyword_58_8; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_58_9() { return cPerhapsKeyword_58_9; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_58_10() { return cFin2Assignment_58_10; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_58_10_0() { return cFin2ExprParserRuleCall_58_10_0; }
		
		//'happens'
		public Keyword getHappensKeyword_58_11() { return cHappensKeyword_58_11; }
		
		//'and'
		public Keyword getAndKeyword_58_12() { return cAndKeyword_58_12; }
		
		//'from'
		public Keyword getFromKeyword_58_13() { return cFromKeyword_58_13; }
		
		//'that'
		public Keyword getThatKeyword_58_14() { return cThatKeyword_58_14; }
		
		//'moment'
		public Keyword getMomentKeyword_58_15() { return cMomentKeyword_58_15; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_58_16() { return cInv2Assignment_58_16; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_58_16_0() { return cInv2ExprParserRuleCall_58_16_0; }
		
		//'will'
		public Keyword getWillKeyword_58_17() { return cWillKeyword_58_17; }
		
		//'be'
		public Keyword getBeKeyword_58_18() { return cBeKeyword_58_18; }
		
		//'until'
		public Keyword getUntilKeyword_58_19() { return cUntilKeyword_58_19; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_58_20() { return cPerhapsKeyword_58_20; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_58_21() { return cRel2Assignment_58_21; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_58_21_0() { return cRel2ExprParserRuleCall_58_21_0; }
		
		//'or'
		public Keyword getOrKeyword_58_22() { return cOrKeyword_58_22; }
		
		//rea=Expr
		public Assignment getReaAssignment_58_23() { return cReaAssignment_58_23; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_58_23_0() { return cReaExprParserRuleCall_58_23_0; }
		
		//'with'
		public Keyword getWithKeyword_58_24() { return cWithKeyword_58_24; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_58_25() { return cInv3Assignment_58_25; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_58_25_0() { return cInv3ExprParserRuleCall_58_25_0; }
		
		//'remaining'
		public Keyword getRemainingKeyword_58_26() { return cRemainingKeyword_58_26; }
		
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' fin2=Expr 'might' 'happen' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' 'until' 'maybe' rel2=Expr 'happens'
		public Group getGroup_59() { return cGroup_59; }
		
		//'always'
		public Keyword getAlwaysKeyword_59_0() { return cAlwaysKeyword_59_0; }
		
		//'either'
		public Keyword getEitherKeyword_59_1() { return cEitherKeyword_59_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_59_2() { return cRelAssignment_59_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_59_2_0() { return cRelExprParserRuleCall_59_2_0; }
		
		//'or'
		public Keyword getOrKeyword_59_3() { return cOrKeyword_59_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_59_4() { return cInvAssignment_59_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_59_4_0() { return cInvExprParserRuleCall_59_4_0; }
		
		//'and'
		public Keyword getAndKeyword_59_5() { return cAndKeyword_59_5; }
		
		//'not'
		public Keyword getNotKeyword_59_6() { return cNotKeyword_59_6; }
		
		//fin=Expr
		public Assignment getFinAssignment_59_7() { return cFinAssignment_59_7; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_59_7_0() { return cFinExprParserRuleCall_59_7_0; }
		
		//'until'
		public Keyword getUntilKeyword_59_8() { return cUntilKeyword_59_8; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_59_9() { return cFin2Assignment_59_9; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_59_9_0() { return cFin2ExprParserRuleCall_59_9_0; }
		
		//'might'
		public Keyword getMightKeyword_59_10() { return cMightKeyword_59_10; }
		
		//'happen'
		public Keyword getHappenKeyword_59_11() { return cHappenKeyword_59_11; }
		
		//'and'
		public Keyword getAndKeyword_59_12() { return cAndKeyword_59_12; }
		
		//'from'
		public Keyword getFromKeyword_59_13() { return cFromKeyword_59_13; }
		
		//'that'
		public Keyword getThatKeyword_59_14() { return cThatKeyword_59_14; }
		
		//'moment'
		public Keyword getMomentKeyword_59_15() { return cMomentKeyword_59_15; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_59_16() { return cInv2Assignment_59_16; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_59_16_0() { return cInv2ExprParserRuleCall_59_16_0; }
		
		//'and'
		public Keyword getAndKeyword_59_17() { return cAndKeyword_59_17; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_59_18() { return cNotdelAssignment_59_18; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_59_18_0() { return cNotdelExprParserRuleCall_59_18_0; }
		
		//'will'
		public Keyword getWillKeyword_59_19() { return cWillKeyword_59_19; }
		
		//'be'
		public Keyword getBeKeyword_59_20() { return cBeKeyword_59_20; }
		
		//'until'
		public Keyword getUntilKeyword_59_21() { return cUntilKeyword_59_21; }
		
		//'maybe'
		public Keyword getMaybeKeyword_59_22() { return cMaybeKeyword_59_22; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_59_23() { return cRel2Assignment_59_23; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_59_23_0() { return cRel2ExprParserRuleCall_59_23_0; }
		
		//'happens'
		public Keyword getHappensKeyword_59_24() { return cHappensKeyword_59_24; }
		
		//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
		public Group getGroup_60() { return cGroup_60; }
		
		//'always'
		public Keyword getAlwaysKeyword_60_0() { return cAlwaysKeyword_60_0; }
		
		//'either'
		public Keyword getEitherKeyword_60_1() { return cEitherKeyword_60_1; }
		
		//rel=Expr
		public Assignment getRelAssignment_60_2() { return cRelAssignment_60_2; }
		
		//Expr
		public RuleCall getRelExprParserRuleCall_60_2_0() { return cRelExprParserRuleCall_60_2_0; }
		
		//'or'
		public Keyword getOrKeyword_60_3() { return cOrKeyword_60_3; }
		
		//inv=Expr
		public Assignment getInvAssignment_60_4() { return cInvAssignment_60_4; }
		
		//Expr
		public RuleCall getInvExprParserRuleCall_60_4_0() { return cInvExprParserRuleCall_60_4_0; }
		
		//'and'
		public Keyword getAndKeyword_60_5() { return cAndKeyword_60_5; }
		
		//'not'
		public Keyword getNotKeyword_60_6() { return cNotKeyword_60_6; }
		
		//fin=Expr
		public Assignment getFinAssignment_60_7() { return cFinAssignment_60_7; }
		
		//Expr
		public RuleCall getFinExprParserRuleCall_60_7_0() { return cFinExprParserRuleCall_60_7_0; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_60_8() { return cCommaParserRuleCall_60_8; }
		
		//'until'
		public Keyword getUntilKeyword_60_9() { return cUntilKeyword_60_9; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_60_10() { return cPerhapsKeyword_60_10; }
		
		//fin2=Expr
		public Assignment getFin2Assignment_60_11() { return cFin2Assignment_60_11; }
		
		//Expr
		public RuleCall getFin2ExprParserRuleCall_60_11_0() { return cFin2ExprParserRuleCall_60_11_0; }
		
		//'happens'
		public Keyword getHappensKeyword_60_12() { return cHappensKeyword_60_12; }
		
		//'and'
		public Keyword getAndKeyword_60_13() { return cAndKeyword_60_13; }
		
		//'from'
		public Keyword getFromKeyword_60_14() { return cFromKeyword_60_14; }
		
		//'that'
		public Keyword getThatKeyword_60_15() { return cThatKeyword_60_15; }
		
		//'moment'
		public Keyword getMomentKeyword_60_16() { return cMomentKeyword_60_16; }
		
		//inv2=Expr
		public Assignment getInv2Assignment_60_17() { return cInv2Assignment_60_17; }
		
		//Expr
		public RuleCall getInv2ExprParserRuleCall_60_17_0() { return cInv2ExprParserRuleCall_60_17_0; }
		
		//'and'
		public Keyword getAndKeyword_60_18() { return cAndKeyword_60_18; }
		
		//notdel=Expr
		public Assignment getNotdelAssignment_60_19() { return cNotdelAssignment_60_19; }
		
		//Expr
		public RuleCall getNotdelExprParserRuleCall_60_19_0() { return cNotdelExprParserRuleCall_60_19_0; }
		
		//'will'
		public Keyword getWillKeyword_60_20() { return cWillKeyword_60_20; }
		
		//'be'
		public Keyword getBeKeyword_60_21() { return cBeKeyword_60_21; }
		
		//Comma
		public RuleCall getCommaParserRuleCall_60_22() { return cCommaParserRuleCall_60_22; }
		
		//'until'
		public Keyword getUntilKeyword_60_23() { return cUntilKeyword_60_23; }
		
		//'perhaps'
		public Keyword getPerhapsKeyword_60_24() { return cPerhapsKeyword_60_24; }
		
		//rel2=Expr
		public Assignment getRel2Assignment_60_25() { return cRel2Assignment_60_25; }
		
		//Expr
		public RuleCall getRel2ExprParserRuleCall_60_25_0() { return cRel2ExprParserRuleCall_60_25_0; }
		
		//'or'
		public Keyword getOrKeyword_60_26() { return cOrKeyword_60_26; }
		
		//rea=Expr
		public Assignment getReaAssignment_60_27() { return cReaAssignment_60_27; }
		
		//Expr
		public RuleCall getReaExprParserRuleCall_60_27_0() { return cReaExprParserRuleCall_60_27_0; }
		
		//'with'
		public Keyword getWithKeyword_60_28() { return cWithKeyword_60_28; }
		
		//inv3=Expr
		public Assignment getInv3Assignment_60_29() { return cInv3Assignment_60_29; }
		
		//Expr
		public RuleCall getInv3ExprParserRuleCall_60_29_0() { return cInv3ExprParserRuleCall_60_29_0; }
		
		//'preserved'
		public Keyword getPreservedKeyword_60_30() { return cPreservedKeyword_60_30; }
	}
	public class CommaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iae.Tempor.Comma");
		private final Keyword cCommaKeyword = (Keyword)rule.eContents().get(1);
		
		//Comma:
		//    ','?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//','?
		public Keyword getCommaKeyword() { return cCommaKeyword; }
	}
	public class ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iae.Tempor.Expr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cObjAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cObjIDTerminalRuleCall_0_0 = (RuleCall)cObjAssignment_0.eContents().get(0);
		private final RuleCall cDotParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cPropAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropIDTerminalRuleCall_2_0 = (RuleCall)cPropAssignment_2.eContents().get(0);
		
		//Expr:
		//    obj=ID Dot prop=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//obj=ID Dot prop=ID
		public Group getGroup() { return cGroup; }
		
		//obj=ID
		public Assignment getObjAssignment_0() { return cObjAssignment_0; }
		
		//ID
		public RuleCall getObjIDTerminalRuleCall_0_0() { return cObjIDTerminalRuleCall_0_0; }
		
		//Dot
		public RuleCall getDotParserRuleCall_1() { return cDotParserRuleCall_1; }
		
		//prop=ID
		public Assignment getPropAssignment_2() { return cPropAssignment_2; }
		
		//ID
		public RuleCall getPropIDTerminalRuleCall_2_0() { return cPropIDTerminalRuleCall_2_0; }
	}
	public class DotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iae.Tempor.Dot");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIsKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cWasKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Dot:
		//    'is' | 'was'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'is' | 'was'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'is'
		public Keyword getIsKeyword_0() { return cIsKeyword_0; }
		
		//'was'
		public Keyword getWasKeyword_1() { return cWasKeyword_1; }
	}
	
	
	private final ModelElements pModel;
	private final RequirementElements pRequirement;
	private final CommaElements pComma;
	private final ExprElements pExpr;
	private final DotElements pDot;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TemporGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pRequirement = new RequirementElements();
		this.pComma = new CommaElements();
		this.pExpr = new ExprElements();
		this.pDot = new DotElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("iae.Tempor".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    req+=Requirement;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Requirement:
	//'if' trig=Expr Comma 'then' inv=Expr |
	//'if' trig=Expr Comma 'then' 'immediately' 'there' 'will' 'be' rea=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'immediately' 'it' 'will' 'be' rea=Expr |
	//'if' trig=Expr Comma 'then' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr |
	//'if' trig=Expr Comma 'then' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr |
	//'if' trig=Expr Comma 'then' 'it' 'will' 'always' 'be' inv=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rel=Expr 'happens' |
	//'if' trig=Expr Comma 'then' inv=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'will' 'be' 'for' 'now' Comma 'perhaps' 'not' rel=Expr 'or' rea=Expr 'at' inv2=Expr |
	//'if' trig=Expr Comma 'then' notdel=Expr 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' |
	//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'then' 'immediately' 'there' 'will' 'be' rea=Expr |
	//'if' trig=Expr Comma 'then' 'perhaps' rel=Expr 'or' fin=Expr 'will' 'happen' 'along' 'with' 'an' 'immediate' rea=Expr |
	//'if' trig=Expr Comma 'then' fin=Expr 'will' 'probably' 'happen' 'and' 'from' 'then' 'on' 'there' 'will' 'always' 'be' notdel=Expr |
	//'if' trig=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'that' 'point' 'on' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr 'occurs' |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rea=Expr 'happens' 'to' 'keep' inv2=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' notdel=Expr Comma 'until' 'perhaps' rel=Expr 'or' rea=Expr 'happens' Comma 'keeping' inv2=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' 'to' 'keep' inv2=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' rel=Expr 'or' fin=Expr 'happens' Comma 'keeping' inv2=Expr 'and' 'immediate' rea=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'to' 'keep' inv2=Expr 'and' 'immediately' rea=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved' |
	//'if' trig=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' 'with' inv3=Expr 'saved' |
	//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rel2=Expr 'occurs' |
	//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' 'perhaps' fin=Expr 'will' 'happen' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea=Expr |
	//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens' |
	//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' fin=Expr 'may' 'happen' 'and' 'from' 'then' inv2=Expr 'will' 'be' Comma 'until' 'it' 'may' 'be' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
	//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr 'until' 'perhaps' fin=Expr 'happens' 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr 'until' 'perhaps' rel2=Expr 'happens' |
	//'if' trig=Expr 'and' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' notfin=Expr Comma 'until' 'perhaps' fin=Expr 'happens' Comma 'and' 'from' 'then' inv2=Expr 'will' 'be' 'along' 'with' notdel=Expr Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
	//'always' inv=Expr |
	//'there' 'is' 'always' 'a' rea=Expr |
	//'always' inv=Expr 'and' 'immediately' 'there' 'will' 'be' rea=Expr |
	//'always' 'either' rel=Expr 'or' 'immediately' 'will' 'be' rea=Expr |
	//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'at' 'the' 'same' 'time' 'it' 'will' 'immediately' 'be' rea=Expr |
	//'always' inv=Expr 'or' 'it' 'alternates' 'with' rel=Expr |
	//'always' notdel=Expr 'and' 'maybe' 'occasionally' rel=Expr 'or' rea=Expr |
	//'always' inv=Expr 'and' 'maybe' 'occasionally' rea=Expr |
	//'always' e1=Expr 'and' 'maybe' 'from' 'time' 'to' 'time' e2=Expr 'or' e3=Expr |
	//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr |
	//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' Comma 'and' 'then' 'it' 'immediately' 'becomes' rea=Expr Comma 'or' rel=Expr 'happens' |
	//'either' 'it' 'does' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'will' 'always' 'be' notdel=Expr 'from' 'now' |
	//'either' 'it' 'is' 'not' 'always' fin=Expr Comma 'or' 'it' 'happens' 'and' 'from' 'then' 'it' 'will' 'be' notdel=Expr 'until' 'maybe' rea=Expr 'happens' |
	//'always' inv=Expr 'and' notdel=Expr 'until' 'perhaps' rea=Expr 'happens' |
	////inv=Expr 'and' notdel=Expr 'until' 'perhaps' rel=Expr 'happens' Comma 'or' rea=Expr 'keeps' inv=Expr |
	//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr |
	//'always' inv=Expr Comma 'and' fin=Expr 'possibly' 'comes' 'with' rea=Expr |
	//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' rel=Expr 'will' 'happen' Comma 'or' fin2=Expr 'with' inv2=Expr 'and' 'immediate' rea=Expr |
	//'either' 'always' inv=Expr 'and' 'not' fin=Expr Comma 'or' fin2=Expr 'will' 'happen' 'and' 'from' 'now' 'there' 'will' 'always' 'be' inv2=Expr 'and' notdel=Expr |
	//'always' inv=Expr 'and' 'maybe' fin=Expr 'and' 'then' 'maybe' rea=Expr |
	//'always' inv=Expr 'and' 'possibly' fin=Expr Comma 'and' 'from' 'then' 'there' 'will' 'be' notdel=Expr 'until' 'perhaps' rea=Expr |
	//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens' |
	//'whenever' 'it' 'is' 'not' rel=Expr Comma fin=Expr 'will' 'probably' 'come' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens' |
	//'whenever' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'happens' |
	//'whenever' 'it' 'is' 'not' rel=Expr Comma 'then' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'will' 'be' Comma 'until' 'perhaps' 'it' 'is' rel2=Expr 'or' rea2=Expr 'with' inv3=Expr 'preserved' |
	//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr |
	//'whenever' 'it' 'is' 'not' rel=Expr Comma 'it' 'is' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' Comma 'and' 'from' 'that' 'moment' Comma inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved' |
	//'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'will' 'happen' Comma 'and' 'from' 'that' 'moment' 'there' 'will' 'be' notdel=Expr 'until' 'maybe' rel2=Expr 'happens' |
	//'it' 'is' 'always' 'either' rel=Expr 'or' 'maybe' fin=Expr 'happens' Comma 'and' 'from' 'that' 'moment' 'there' 'is' notdel=Expr 'until' 'maybe' rel2=Expr 'or' rea=Expr 'happens' |
	//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'happens' |
	//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'will' 'be' 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'remaining' |
	//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr 'until' fin2=Expr 'might' 'happen' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' 'until' 'maybe' rel2=Expr 'happens' |
	//'always' 'either' rel=Expr 'or' inv=Expr 'and' 'not' fin=Expr Comma 'until' 'perhaps' fin2=Expr 'happens' 'and' 'from' 'that' 'moment' inv2=Expr 'and' notdel=Expr 'will' 'be' Comma 'until' 'perhaps' rel2=Expr 'or' rea=Expr 'with' inv3=Expr 'preserved'
	//;
	public RequirementElements getRequirementAccess() {
		return pRequirement;
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}
	
	//Comma:
	//    ','?
	//;
	public CommaElements getCommaAccess() {
		return pComma;
	}
	
	public ParserRule getCommaRule() {
		return getCommaAccess().getRule();
	}
	
	//Expr:
	//    obj=ID Dot prop=ID
	//;
	public ExprElements getExprAccess() {
		return pExpr;
	}
	
	public ParserRule getExprRule() {
		return getExprAccess().getRule();
	}
	
	//Dot:
	//    'is' | 'was'
	//;
	public DotElements getDotAccess() {
		return pDot;
	}
	
	public ParserRule getDotRule() {
		return getDotAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
