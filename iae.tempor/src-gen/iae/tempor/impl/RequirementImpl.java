/**
 * generated by Xtext 2.26.0
 */
package iae.tempor.impl;

import iae.tempor.Expr;
import iae.tempor.Requirement;
import iae.tempor.TemporPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Requirement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getTrig <em>Trig</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getInv <em>Inv</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getRea <em>Rea</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getRel <em>Rel</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getInv2 <em>Inv2</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getNotdel <em>Notdel</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getFin <em>Fin</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getNotfin <em>Notfin</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getFin2 <em>Fin2</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getInv3 <em>Inv3</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getRel2 <em>Rel2</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getE1 <em>E1</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getE2 <em>E2</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getE3 <em>E3</em>}</li>
 *   <li>{@link iae.tempor.impl.RequirementImpl#getRea2 <em>Rea2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RequirementImpl extends MinimalEObjectImpl.Container implements Requirement
{
  /**
   * The cached value of the '{@link #getTrig() <em>Trig</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrig()
   * @generated
   * @ordered
   */
  protected Expr trig;

  /**
   * The cached value of the '{@link #getInv() <em>Inv</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInv()
   * @generated
   * @ordered
   */
  protected Expr inv;

  /**
   * The cached value of the '{@link #getRea() <em>Rea</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRea()
   * @generated
   * @ordered
   */
  protected Expr rea;

  /**
   * The cached value of the '{@link #getRel() <em>Rel</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRel()
   * @generated
   * @ordered
   */
  protected Expr rel;

  /**
   * The cached value of the '{@link #getInv2() <em>Inv2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInv2()
   * @generated
   * @ordered
   */
  protected Expr inv2;

  /**
   * The cached value of the '{@link #getNotdel() <em>Notdel</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNotdel()
   * @generated
   * @ordered
   */
  protected Expr notdel;

  /**
   * The cached value of the '{@link #getFin() <em>Fin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFin()
   * @generated
   * @ordered
   */
  protected Expr fin;

  /**
   * The cached value of the '{@link #getNotfin() <em>Notfin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNotfin()
   * @generated
   * @ordered
   */
  protected Expr notfin;

  /**
   * The cached value of the '{@link #getFin2() <em>Fin2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFin2()
   * @generated
   * @ordered
   */
  protected Expr fin2;

  /**
   * The cached value of the '{@link #getInv3() <em>Inv3</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInv3()
   * @generated
   * @ordered
   */
  protected Expr inv3;

  /**
   * The cached value of the '{@link #getRel2() <em>Rel2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRel2()
   * @generated
   * @ordered
   */
  protected Expr rel2;

  /**
   * The cached value of the '{@link #getE1() <em>E1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE1()
   * @generated
   * @ordered
   */
  protected Expr e1;

  /**
   * The cached value of the '{@link #getE2() <em>E2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE2()
   * @generated
   * @ordered
   */
  protected Expr e2;

  /**
   * The cached value of the '{@link #getE3() <em>E3</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getE3()
   * @generated
   * @ordered
   */
  protected Expr e3;

  /**
   * The cached value of the '{@link #getRea2() <em>Rea2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRea2()
   * @generated
   * @ordered
   */
  protected Expr rea2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RequirementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TemporPackage.Literals.REQUIREMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getTrig()
  {
    return trig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrig(Expr newTrig, NotificationChain msgs)
  {
    Expr oldTrig = trig;
    trig = newTrig;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__TRIG, oldTrig, newTrig);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrig(Expr newTrig)
  {
    if (newTrig != trig)
    {
      NotificationChain msgs = null;
      if (trig != null)
        msgs = ((InternalEObject)trig).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__TRIG, null, msgs);
      if (newTrig != null)
        msgs = ((InternalEObject)newTrig).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__TRIG, null, msgs);
      msgs = basicSetTrig(newTrig, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__TRIG, newTrig, newTrig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getInv()
  {
    return inv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInv(Expr newInv, NotificationChain msgs)
  {
    Expr oldInv = inv;
    inv = newInv;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__INV, oldInv, newInv);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInv(Expr newInv)
  {
    if (newInv != inv)
    {
      NotificationChain msgs = null;
      if (inv != null)
        msgs = ((InternalEObject)inv).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__INV, null, msgs);
      if (newInv != null)
        msgs = ((InternalEObject)newInv).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__INV, null, msgs);
      msgs = basicSetInv(newInv, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__INV, newInv, newInv));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getRea()
  {
    return rea;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRea(Expr newRea, NotificationChain msgs)
  {
    Expr oldRea = rea;
    rea = newRea;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REA, oldRea, newRea);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRea(Expr newRea)
  {
    if (newRea != rea)
    {
      NotificationChain msgs = null;
      if (rea != null)
        msgs = ((InternalEObject)rea).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REA, null, msgs);
      if (newRea != null)
        msgs = ((InternalEObject)newRea).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REA, null, msgs);
      msgs = basicSetRea(newRea, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REA, newRea, newRea));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getRel()
  {
    return rel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRel(Expr newRel, NotificationChain msgs)
  {
    Expr oldRel = rel;
    rel = newRel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REL, oldRel, newRel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRel(Expr newRel)
  {
    if (newRel != rel)
    {
      NotificationChain msgs = null;
      if (rel != null)
        msgs = ((InternalEObject)rel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REL, null, msgs);
      if (newRel != null)
        msgs = ((InternalEObject)newRel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REL, null, msgs);
      msgs = basicSetRel(newRel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REL, newRel, newRel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getInv2()
  {
    return inv2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInv2(Expr newInv2, NotificationChain msgs)
  {
    Expr oldInv2 = inv2;
    inv2 = newInv2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__INV2, oldInv2, newInv2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInv2(Expr newInv2)
  {
    if (newInv2 != inv2)
    {
      NotificationChain msgs = null;
      if (inv2 != null)
        msgs = ((InternalEObject)inv2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__INV2, null, msgs);
      if (newInv2 != null)
        msgs = ((InternalEObject)newInv2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__INV2, null, msgs);
      msgs = basicSetInv2(newInv2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__INV2, newInv2, newInv2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getNotdel()
  {
    return notdel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNotdel(Expr newNotdel, NotificationChain msgs)
  {
    Expr oldNotdel = notdel;
    notdel = newNotdel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__NOTDEL, oldNotdel, newNotdel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNotdel(Expr newNotdel)
  {
    if (newNotdel != notdel)
    {
      NotificationChain msgs = null;
      if (notdel != null)
        msgs = ((InternalEObject)notdel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__NOTDEL, null, msgs);
      if (newNotdel != null)
        msgs = ((InternalEObject)newNotdel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__NOTDEL, null, msgs);
      msgs = basicSetNotdel(newNotdel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__NOTDEL, newNotdel, newNotdel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getFin()
  {
    return fin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFin(Expr newFin, NotificationChain msgs)
  {
    Expr oldFin = fin;
    fin = newFin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__FIN, oldFin, newFin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFin(Expr newFin)
  {
    if (newFin != fin)
    {
      NotificationChain msgs = null;
      if (fin != null)
        msgs = ((InternalEObject)fin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__FIN, null, msgs);
      if (newFin != null)
        msgs = ((InternalEObject)newFin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__FIN, null, msgs);
      msgs = basicSetFin(newFin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__FIN, newFin, newFin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getNotfin()
  {
    return notfin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNotfin(Expr newNotfin, NotificationChain msgs)
  {
    Expr oldNotfin = notfin;
    notfin = newNotfin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__NOTFIN, oldNotfin, newNotfin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNotfin(Expr newNotfin)
  {
    if (newNotfin != notfin)
    {
      NotificationChain msgs = null;
      if (notfin != null)
        msgs = ((InternalEObject)notfin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__NOTFIN, null, msgs);
      if (newNotfin != null)
        msgs = ((InternalEObject)newNotfin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__NOTFIN, null, msgs);
      msgs = basicSetNotfin(newNotfin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__NOTFIN, newNotfin, newNotfin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getFin2()
  {
    return fin2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFin2(Expr newFin2, NotificationChain msgs)
  {
    Expr oldFin2 = fin2;
    fin2 = newFin2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__FIN2, oldFin2, newFin2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFin2(Expr newFin2)
  {
    if (newFin2 != fin2)
    {
      NotificationChain msgs = null;
      if (fin2 != null)
        msgs = ((InternalEObject)fin2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__FIN2, null, msgs);
      if (newFin2 != null)
        msgs = ((InternalEObject)newFin2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__FIN2, null, msgs);
      msgs = basicSetFin2(newFin2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__FIN2, newFin2, newFin2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getInv3()
  {
    return inv3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInv3(Expr newInv3, NotificationChain msgs)
  {
    Expr oldInv3 = inv3;
    inv3 = newInv3;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__INV3, oldInv3, newInv3);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInv3(Expr newInv3)
  {
    if (newInv3 != inv3)
    {
      NotificationChain msgs = null;
      if (inv3 != null)
        msgs = ((InternalEObject)inv3).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__INV3, null, msgs);
      if (newInv3 != null)
        msgs = ((InternalEObject)newInv3).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__INV3, null, msgs);
      msgs = basicSetInv3(newInv3, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__INV3, newInv3, newInv3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getRel2()
  {
    return rel2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRel2(Expr newRel2, NotificationChain msgs)
  {
    Expr oldRel2 = rel2;
    rel2 = newRel2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REL2, oldRel2, newRel2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRel2(Expr newRel2)
  {
    if (newRel2 != rel2)
    {
      NotificationChain msgs = null;
      if (rel2 != null)
        msgs = ((InternalEObject)rel2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REL2, null, msgs);
      if (newRel2 != null)
        msgs = ((InternalEObject)newRel2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REL2, null, msgs);
      msgs = basicSetRel2(newRel2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REL2, newRel2, newRel2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getE1()
  {
    return e1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE1(Expr newE1, NotificationChain msgs)
  {
    Expr oldE1 = e1;
    e1 = newE1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__E1, oldE1, newE1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setE1(Expr newE1)
  {
    if (newE1 != e1)
    {
      NotificationChain msgs = null;
      if (e1 != null)
        msgs = ((InternalEObject)e1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__E1, null, msgs);
      if (newE1 != null)
        msgs = ((InternalEObject)newE1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__E1, null, msgs);
      msgs = basicSetE1(newE1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__E1, newE1, newE1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getE2()
  {
    return e2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE2(Expr newE2, NotificationChain msgs)
  {
    Expr oldE2 = e2;
    e2 = newE2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__E2, oldE2, newE2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setE2(Expr newE2)
  {
    if (newE2 != e2)
    {
      NotificationChain msgs = null;
      if (e2 != null)
        msgs = ((InternalEObject)e2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__E2, null, msgs);
      if (newE2 != null)
        msgs = ((InternalEObject)newE2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__E2, null, msgs);
      msgs = basicSetE2(newE2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__E2, newE2, newE2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getE3()
  {
    return e3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetE3(Expr newE3, NotificationChain msgs)
  {
    Expr oldE3 = e3;
    e3 = newE3;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__E3, oldE3, newE3);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setE3(Expr newE3)
  {
    if (newE3 != e3)
    {
      NotificationChain msgs = null;
      if (e3 != null)
        msgs = ((InternalEObject)e3).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__E3, null, msgs);
      if (newE3 != null)
        msgs = ((InternalEObject)newE3).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__E3, null, msgs);
      msgs = basicSetE3(newE3, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__E3, newE3, newE3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getRea2()
  {
    return rea2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRea2(Expr newRea2, NotificationChain msgs)
  {
    Expr oldRea2 = rea2;
    rea2 = newRea2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REA2, oldRea2, newRea2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRea2(Expr newRea2)
  {
    if (newRea2 != rea2)
    {
      NotificationChain msgs = null;
      if (rea2 != null)
        msgs = ((InternalEObject)rea2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REA2, null, msgs);
      if (newRea2 != null)
        msgs = ((InternalEObject)newRea2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TemporPackage.REQUIREMENT__REA2, null, msgs);
      msgs = basicSetRea2(newRea2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TemporPackage.REQUIREMENT__REA2, newRea2, newRea2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TemporPackage.REQUIREMENT__TRIG:
        return basicSetTrig(null, msgs);
      case TemporPackage.REQUIREMENT__INV:
        return basicSetInv(null, msgs);
      case TemporPackage.REQUIREMENT__REA:
        return basicSetRea(null, msgs);
      case TemporPackage.REQUIREMENT__REL:
        return basicSetRel(null, msgs);
      case TemporPackage.REQUIREMENT__INV2:
        return basicSetInv2(null, msgs);
      case TemporPackage.REQUIREMENT__NOTDEL:
        return basicSetNotdel(null, msgs);
      case TemporPackage.REQUIREMENT__FIN:
        return basicSetFin(null, msgs);
      case TemporPackage.REQUIREMENT__NOTFIN:
        return basicSetNotfin(null, msgs);
      case TemporPackage.REQUIREMENT__FIN2:
        return basicSetFin2(null, msgs);
      case TemporPackage.REQUIREMENT__INV3:
        return basicSetInv3(null, msgs);
      case TemporPackage.REQUIREMENT__REL2:
        return basicSetRel2(null, msgs);
      case TemporPackage.REQUIREMENT__E1:
        return basicSetE1(null, msgs);
      case TemporPackage.REQUIREMENT__E2:
        return basicSetE2(null, msgs);
      case TemporPackage.REQUIREMENT__E3:
        return basicSetE3(null, msgs);
      case TemporPackage.REQUIREMENT__REA2:
        return basicSetRea2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TemporPackage.REQUIREMENT__TRIG:
        return getTrig();
      case TemporPackage.REQUIREMENT__INV:
        return getInv();
      case TemporPackage.REQUIREMENT__REA:
        return getRea();
      case TemporPackage.REQUIREMENT__REL:
        return getRel();
      case TemporPackage.REQUIREMENT__INV2:
        return getInv2();
      case TemporPackage.REQUIREMENT__NOTDEL:
        return getNotdel();
      case TemporPackage.REQUIREMENT__FIN:
        return getFin();
      case TemporPackage.REQUIREMENT__NOTFIN:
        return getNotfin();
      case TemporPackage.REQUIREMENT__FIN2:
        return getFin2();
      case TemporPackage.REQUIREMENT__INV3:
        return getInv3();
      case TemporPackage.REQUIREMENT__REL2:
        return getRel2();
      case TemporPackage.REQUIREMENT__E1:
        return getE1();
      case TemporPackage.REQUIREMENT__E2:
        return getE2();
      case TemporPackage.REQUIREMENT__E3:
        return getE3();
      case TemporPackage.REQUIREMENT__REA2:
        return getRea2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TemporPackage.REQUIREMENT__TRIG:
        setTrig((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__INV:
        setInv((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__REA:
        setRea((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__REL:
        setRel((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__INV2:
        setInv2((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__NOTDEL:
        setNotdel((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__FIN:
        setFin((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__NOTFIN:
        setNotfin((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__FIN2:
        setFin2((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__INV3:
        setInv3((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__REL2:
        setRel2((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__E1:
        setE1((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__E2:
        setE2((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__E3:
        setE3((Expr)newValue);
        return;
      case TemporPackage.REQUIREMENT__REA2:
        setRea2((Expr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TemporPackage.REQUIREMENT__TRIG:
        setTrig((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__INV:
        setInv((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__REA:
        setRea((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__REL:
        setRel((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__INV2:
        setInv2((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__NOTDEL:
        setNotdel((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__FIN:
        setFin((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__NOTFIN:
        setNotfin((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__FIN2:
        setFin2((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__INV3:
        setInv3((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__REL2:
        setRel2((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__E1:
        setE1((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__E2:
        setE2((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__E3:
        setE3((Expr)null);
        return;
      case TemporPackage.REQUIREMENT__REA2:
        setRea2((Expr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TemporPackage.REQUIREMENT__TRIG:
        return trig != null;
      case TemporPackage.REQUIREMENT__INV:
        return inv != null;
      case TemporPackage.REQUIREMENT__REA:
        return rea != null;
      case TemporPackage.REQUIREMENT__REL:
        return rel != null;
      case TemporPackage.REQUIREMENT__INV2:
        return inv2 != null;
      case TemporPackage.REQUIREMENT__NOTDEL:
        return notdel != null;
      case TemporPackage.REQUIREMENT__FIN:
        return fin != null;
      case TemporPackage.REQUIREMENT__NOTFIN:
        return notfin != null;
      case TemporPackage.REQUIREMENT__FIN2:
        return fin2 != null;
      case TemporPackage.REQUIREMENT__INV3:
        return inv3 != null;
      case TemporPackage.REQUIREMENT__REL2:
        return rel2 != null;
      case TemporPackage.REQUIREMENT__E1:
        return e1 != null;
      case TemporPackage.REQUIREMENT__E2:
        return e2 != null;
      case TemporPackage.REQUIREMENT__E3:
        return e3 != null;
      case TemporPackage.REQUIREMENT__REA2:
        return rea2 != null;
    }
    return super.eIsSet(featureID);
  }

} //RequirementImpl
